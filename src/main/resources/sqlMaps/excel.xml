<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="excel">

    <select id="selectEstimateMasterInfoExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.EST_TITLE, CONCAT(A.EST_NUM, '(', A.EST_VER, ')') AS EST_NUM, A.EMAIL_TITLE,
            IFNULL(B.COMP_NUM, SPACE(0)) ORDER_COMP_NUM,
            IFNULL(B.COMP_NM, SPACE(0)) ORDER_COMP_NM,
            IFNULL(B.CEO_NM, SPACE(0)) ORDER_CEO_NM,
            IFNULL(B.COMP_ADDRESS, SPACE(0)) ORDER_COMP_ADDRESS,
            CONCAT( IFNULL(B.BUSINESS_TYPE, SPACE(0)), ' / ',
					IFNULL(B.BUSINESS_ITEM, SPACE(0))
            ) ORDER_COMP_TYPE,
            B.COMP_TEL, B.COMP_FAX,
            IFNULL(C.COMP_NM, SPACE(0)) COMP_NM,
            IFNULL(C.CEO_NM, SPACE(0)) CEO_NM,
            SUM(D.UNIT_FINAL_EST_AMT) AS FINAL_EST_UNIT_PRICE,
            DATE_FORMAT(NOW(0), '%Y년 %m월 %d일') NOW
        FROM TBL_ESTIMATE A
            INNER JOIN TBL_COMPANY B ON A.COMP_CD = B.COMP_CD
            INNER JOIN TBL_COMPANY C ON A.ORDER_COMP_CD = C.COMP_CD
            INNER JOIN TBL_ESTIMATE_DETAIL D ON A.EST_SEQ = D.EST_SEQ
         WHERE 1=1
			AND A.EST_SEQ = #{EST_SEQ}
    </select>

    <select id="selectEstimateDetailListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
       SELECT
            ROW_NUMBER() OVER (ORDER BY PROJECT_NM, MODULE_NM, ITEM_NM, PART_NUM) AS ROWNUM,
			A.EST_SEQ, SEQ, B.EST_NUM, PROJECT_NM, MODULE_NM, ITEM_NM, DRAWING_NUM, PART_NUM, MATERIAL_SUPPLY_YN,
            ITEM_QTY, SIZE_TXT, SIZE_TYPE,
            SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            SIZE_W_M, SIZE_H_M, SIZE_T_M, SIZE_D_M, SIZE_L_M,
            WORK_TYPE, SF_GET_CODE_NM(1033, WORK_TYPE, 'EN') AS WORK_TYPE_NM,
            MATERIAL_TYPE, SF_GET_CODE_NM(1035, WORK_TYPE, 'EN') AS MATERIAL_TYPE_NM,
            MATERIAL_DETAIL, SF_GET_CODE_NM(1027, MATERIAL_DETAIL, 'EN') AS MATERIAL_DETAIL_NM,
            MATERIAL_KIND, SF_GET_CODE_NM(1029, MATERIAL_KIND, 'EN') AS MATERIAL_KIND_NM,
            SURFACE_TREAT, SF_GET_CODE_NM(1039, SURFACE_TREAT, 'EN') AS SURFACE_TREAT_NM,
            MATERIAL_NOTE,
            DETAIL_LATHE, DETAIL_SURFACE, DETAIL_CLAMPING, DETAIL_POCKET, DETAIL_DRILL, DETAIL_DIFFICULTY,
            MATERIAL_FINISH_TM, MATERIAL_FINISH_GRIND, MATERIAL_FINISH_HEAT,
            UNIT_MATERIAL_AMT, UNIT_TM_AMT, UNIT_GRIND_AMT, UNIT_HEAT_AMT, UNIT_SURFACE_AMT, UNIT_PROCESS_AMT, UNIT_ETC_AMT,
            UNIT_AMT_NOTE, UNIT_FINAL_EST_AMT,
            IFNULL(UNIT_MATERIAL_AMT, 0) + IFNULL(UNIT_TM_AMT, 0) + IFNULL(UNIT_GRIND_AMT, 0) + IFNULL(UNIT_HEAT_AMT, 0) +
            IFNULL(UNIT_SURFACE_AMT, 0) + IFNULL(UNIT_PROCESS_AMT, 0) + IFNULL(UNIT_ETC_AMT, 0) AS CALCUL_EST_UNIT_COST,
            SUM(CASE WHEN B.UNIT_FINAL_EST_AMT IS NOT NULL THEN IFNULL(B.UNIT_FINAL_EST_AMT, 0) * IFNULL(B.ITEM_QTY, 0)
            ELSE ((IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_TM_AMT, 0) + IFNULL(B.UNIT_GRIND_AMT, 0) + IFNULL(B.UNIT_HEAT_AMT, 0) +
            IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)) * IFNULL(B.ITEM_QTY, 0))
            END) AS DTL_AMOUNT,
        FROM TBL_ESTIMATE_DETAIL A
			INNER JOIN TBL_ESTIMATE B ON A.EST_SEQ = B.EST_SEQ
        WHERE 1=1
			AND A.EST_SEQ = #{EST_SEQ}
		 ORDER BY PROJECT_NM, MODULE_NM, ITEM_NM, PART_NUM
    </select>

    <select id="selectOutsourcingOrderInfoExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            DATE_FORMAT(CURDATE(), '%Y년 %m월 %d일') AS DATE,
            SF_GET_COMP_NM(#{COMP_CD}) AS COMP_NM,
            IF(#{ORDER_STAFF_SEQ} = 'undefined', SF_GET_STAFF_NM(NULL), SF_GET_STAFF_NM(#{ORDER_STAFF_SEQ})) AS ORDER_STAFF_NM, <!-- TODO: 확인 -->
            SUM(X.CONTROL_PART_QTY) AS CONTROL_PART_QTY,
            SUM(X.TOTAL) AS TOTAL
        FROM (
            SELECT
                B.OUTSIDE_UNIT_AMT,
                SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY,
                B.OUTSIDE_UNIT_AMT * SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS TOTAL
            FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            WHERE 1 = 1
                AND A.DEL_YN = 'N'
                AND A.CONTROL_STATUS = 'ORD001'
                AND B.OUTSIDE_YN = 'Y'
                AND B.CONTROL_SEQ IN (${CONTROL_SEQ})
                AND B.CONTROL_DETAIL_SEQ IN (${CONTROL_DETAIL_SEQ})
                AND NOT EXISTS (SELECT *
                                FROM TBL_OUTSIDE_CLOSE
                                WHERE CONTROL_SEQ = B.CONTROL_SEQ AND CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ)
        ) X
    </select>

    <select id="selectOutsourcingOrderExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY A.CONTROL_SEQ, B.PART_NUM) AS ROW_NUM,
            B.OUTSIDE_COMP_CD, <!-- 업체 -->
            SF_GET_COMP_NM(B.OUTSIDE_COMP_CD) AS OUTSIDE_COMP_NM,<!-- 업체 -->
            B.OUTSIDE_ORDER_NUM, <!-- 발주번호 -->
            A.CONTROL_NUM, <!-- 관리번호 -->
            DATE_FORMAT(STR_TO_DATE(B.OUTSIDE_HOPE_DUE_DT, '%Y%m%d'), '%m월%d일') AS OUTSIDE_HOPE_DUE_DT, <!-- 요망납기 -->
            B.DRAWING_NUM, <!-- 도면번호 -->
            B.ITEM_NM, <!-- 품명 -->
            B.SIZE_TXT, <!-- 규격 -->
            IFNULL(SF_GET_CODE_NM(1027, B.MATERIAL_DETAIL, 'KR'), SPACE(0)) AS MATERIAL_DETAIL, <!-- 소재 종류 -->
            SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY, <!-- 발주량 -->
            B.OUTSIDE_UNIT_AMT, <!-- 단가 -->
            B.OUTSIDE_UNIT_AMT * SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS SUM_AMT, <!-- 합계 -->
            B.OUTSIDE_NOTE, <!-- 비고 -->
            B.IMG_GFILE_SEQ
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            AND A.CONTROL_STATUS = 'ORD001'
            AND B.OUTSIDE_YN = 'Y'
            AND B.CONTROL_SEQ IN (${CONTROL_SEQ})
            AND B.CONTROL_DETAIL_SEQ IN (${CONTROL_DETAIL_SEQ})
            AND NOT EXISTS (SELECT *
                            FROM TBL_OUTSIDE_CLOSE
                            WHERE CONTROL_SEQ = B.CONTROL_SEQ AND CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ)
        ORDER BY A.COMP_CD, B.OUTSIDE_COMP_CD, B.OUTSIDE_ORDER_NUM, A.CONTROL_NUM
    </select>

    <select id="selectTransactionStatementInfoExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM, <!-- 발주사 -->
            B.COMP_NUM, <!-- 사업자번호(사업자등록번호) -->
            B.COMP_NM, <!-- 상호 -->
            B.CEO_NM, <!-- 대표이사 -->
            B.COMP_ADDRESS, <!-- 주소 -->
            B.BUSINESS_ITEM, <!-- 업태 및 종목 -->
            B.COMP_TEL,
            B.COMP_FAX,
            B.BUSINESS_TYPE, <!-- 업태 -->
            B.BUSINESS_ITEM, <!-- 종목 -->
            (SELECT SUM(B.UNIT_FINAL_AMT * C.ORDER_QTY)
            FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ
                                                   AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_INVOICE_DETAIL D ON B.CONTROL_SEQ = D.CONTROL_SEQ
                                               AND B.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            WHERE 1 = 1
                AND A.CONTROL_SEQ IN (${CONTROL_SEQ_STR})
                AND A.COMP_CD = #{COMP_CD}
                AND A.ORDER_COMP_CD = #{ORDER_COMP_CD}
                AND B.WORK_TYPE NOT IN ('WTP050')
            GROUP BY D.INVOICE_NUM) AS TOTAL_AMT, <!-- 금액 합계 -->
            A.INVOICE_NUM, <!-- INV No. -->
            A.INVOICE_TITLE,
            SF_GET_DATE_F(NOW(),'YYYY','M') AS DATE
        FROM TBL_INVOICE A
            INNER JOIN TBL_COMPANY B ON A.COMP_CD = B.COMP_CD
        WHERE INVOICE_NUM IN (SELECT INVOICE_NUM
                             FROM TBL_INVOICE_DETAIL
                             WHERE CONTROL_SEQ IN (${CONTROL_SEQ_STR}));
    </select>

    <select id="selectTransactionStatementListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, C.ORDER_NUM) AS ROWNUM,
            A.CONTROL_NUM, <!-- 관리번호 -->
            B.DRAWING_NUM, <!-- 도면번호 -->
            B.SIZE_TXT, <!-- 규격 -->
            <!-- SF_GET_CODE_NM(1038, A.CONTROL_STATUS, 'KR') AS CONTROL_STATUS_NM, -->
            IFNULL(SF_GET_CODE_NM(1033, B.WORK_TYPE, 'KR'), SPACE(0)) AS WORK_TYPE_NM, <!-- 작업형태 이름 -->
            SF_GET_CONTROL_ORDER_QTY(C.CONTROL_SEQ, C.ORDER_SEQ) AS CONTROL_ORDER_QTY,  <!-- 수량 -->
            B.UNIT_FINAL_AMT, <!-- 공급단가 -->
            B.UNIT_FINAL_AMT * SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS TOTAL_AMT, <!-- 금액 계 -->
            D.NOTE <!-- 비고 -->
        FROM TBL_CONTROL A
        INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
        LEFT OUTER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ
                                                    AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
        INNER JOIN TBL_INVOICE_DETAIL D ON B.CONTROL_SEQ = D.CONTROL_SEQ
                                           AND B.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
            AND D.INVOICE_NUM = #{INVOICE_NUM}
            AND B.WORK_TYPE != 'WTP050'
        ORDER BY A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, C.ORDER_NUM
    </select>

    <select id="selectControlEstimateDetailListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY A.CONTROL_NUM, B.PART_NUM) AS ROW_NUM,
            A.CONTROL_NUM, <!-- 관리번호 -->
            CONCAT('(', B.DRAWING_NUM, ')') AS DRAWING_NUM, <!-- 도면번호 -->
            IFNULL(B.PART_NUM, SPACE(0)) AS PART_NUM, <!-- Part -->
            B.SIZE_TXT, <!-- 규격 -->
            IFNULL(SF_GET_CODE_NM(1029, B.MATERIAL_KIND, 'KR'), SPACE(0)) AS MATERIAL_KIND_NM, <!-- 소재 형태 -->
            '', <!-- 소재 형태 -->
            SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY, <!-- 수량 -->
            IFNULL(SF_GET_CODE_NM(1033, B.WORK_TYPE, 'KR'), SPACE(0)) AS WORK_TYPE_NM, <!-- 작업형태 이름 -->
            IFNULL(SF_GET_CODE_NM(1027, B.MATERIAL_DETAIL, 'KR'), SPACE(0)) AS MATERIAL_DETAIL_NM, <!-- 소재 종류  -->
            '', <!-- 소재 종류 -->
            IFNULL(SF_GET_CODE_NM(1039, B.SURFACE_TREAT, 'KR'), SPACE(0)) AS SURFACE_TREAT_NM, <!-- 표면처리 -->
            '', <!-- 표면 처리 -->
            IFNULL(SF_GET_CODE_NM(1058, B.MATERIAL_FINISH_GRIND, 'KR'), SPACE(0)) AS MATERIAL_FINISH_GRIND_NM, <!-- 연마 -->
            '', <!-- 연마 -->
            B.UNIT_TM_AMT, <!-- TM 각비 -->
            B.UNIT_HEAT_AMT, <!-- 열 처리 -->
            B.UNIT_PROCESS_AMT, <!-- 가공비 -->
            B.UNIT_ETC_AMT, <!-- 기타 추가 -->
            B.UNIT_AMT_NOTE, <!-- 항목별단가_견적비고 -->
            CASE IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_TM_AMT, 0) + IFNULL(B.UNIT_GRIND_AMT, 0) + IFNULL(B.UNIT_HEAT_AMT, 0) + IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)
                WHEN 0 THEN SPACE(0)
                ELSE IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_TM_AMT, 0) + IFNULL(B.UNIT_GRIND_AMT, 0) + IFNULL(B.UNIT_HEAT_AMT, 0) + IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)
            END AS CALC_EST_UNIT_COST, <!-- 계산 견적가 -->
            B.UNIT_FINAL_EST_AMT, <!-- 최종 견적가 -->
            (SELECT BB.UNIT_FINAL_AMT
            FROM TBL_CONTROL AA
            INNER JOIN TBL_CONTROL_PART BB ON AA.CONTROL_SEQ = BB.CONTROL_SEQ
            WHERE 1 = 1
                AND AA.OUT_FINISH_DT IS NOT NULL
                AND A.ORDER_COMP_CD = AA.COMP_CD AND B.SIZE_TXT = BB.SIZE_TXT
                AND AA.OUT_FINISH_DT = (SELECT MAX(Q.OUT_FINISH_DT)
                                        FROM TBL_CONTROL Q, TBL_CONTROL_PART R
                                        WHERE 1 = 1
                                        AND Q.CONTROL_SEQ = R.CONTROL_SEQ
                                        AND AA.COMP_CD = Q.COMP_CD AND AA.ORDER_COMP_CD = Q.ORDER_COMP_CD AND BB.SIZE_TXT = B.SIZE_TXT
                                        )) AS PREVIOUS_PRICE <!-- 종전가 -->
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
        WHERE A.CONTROL_SEQ IN (${CONTROL_SEQ})
        ORDER BY A.CONTROL_NUM, B.PART_NUM
    </select>

    <select id="selectItemOrderRegisterOrderSheetListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER() OVER(ORDER BY A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, F.MATERIAL_ORDER_SEQ) AS SEQ,
			F.MATERIAL_ORDER_NUM, F.ORDER_DT, SF_GET_COMP_NM(F.MATERIAL_COMP_CD) AS ORDER_COMP_NM,
			CASE WHEN F.MATERIAL_TYPE IS NOT NULL THEN SF_GET_CODE_NM( '1035', F.MATERIAL_TYPE, 'EN')
                ELSE SF_GET_CODE_NM('1035', B.MATERIAL_TYPE, 'EN')
            END MATERIAL_TYPE_NM,
            CASE WHEN F.MATERIAL_DETAIL IS NOT NULL THEN SF_GET_CODE_NM(1027, F.MATERIAL_DETAIL, 'EN')
                ELSE SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, 'EN')
            END AS MATERIAL_DETAIL_NM,
            CASE WHEN F.MATERIAL_KIND IS NOT NULL THEN SF_GET_CODE_NM(1029, F.MATERIAL_KIND, 'EN')
                ELSE SF_GET_CODE_NM('1029', B.MATERIAL_KIND, 'EN')
            END AS MATERIAL_KIND_NM,
            F.SIZE_TXT, F.ORDER_NOTE, F.INSPECT_NOTE, F.ORDER_QTY, F.HOPE_DUE_DT, F.REQUEST_NOTE,
            A.CONTROL_NUM, B.PART_NUM
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.WORK_TYPE != 'WTP020'
                -- AND B.PART_STATUS IN( 'PRO002', 'PRO004')
            INNER JOIN TBL_MATERIAL_ORDER F ON B.CONTROL_SEQ = F.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ
				AND F.MATERIAL_ORDER_SEQ IN(${CONCAT_SEQ})
            LEFT OUTER JOIN TBL_MATERIAL_ORDER_REQUEST G ON F.MATERIAL_ORDER_SEQ AND G.MATERIAL_ORDER_SEQ
        WHERE A.CONTROL_STATUS = 'ORD001'
        GROUP BY F.MATERIAL_ORDER_SEQ
        ORDER BY A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, F.MATERIAL_ORDER_SEQ
    </select>
</mapper>