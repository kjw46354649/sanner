<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="excel">

    <select id="selectEstimateMasterInfoExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.EST_TITLE, CONCAT(A.EST_NUM, '(', A.EST_VER, ')') AS EST_NUM, A.EMAIL_TITLE,
            IFNULL(B.COMP_NUM, SPACE(0)) ORDER_COMP_NUM,
            IFNULL(B.COMP_NM, SPACE(0)) ORDER_COMP_NM,
            IFNULL(B.CEO_NM, SPACE(0)) ORDER_CEO_NM,
            IFNULL(B.COMP_ADDRESS, SPACE(0)) ORDER_COMP_ADDRESS,
            CONCAT( IFNULL(B.BUSINESS_TYPE, SPACE(0)), ' / ',
					IFNULL(B.BUSINESS_ITEM, SPACE(0))
            ) ORDER_COMP_TYPE,
            B.COMP_TEL, B.COMP_FAX,
            IFNULL(C.COMP_NM, SPACE(0)) COMP_NM,
            IFNULL(C.CEO_NM, SPACE(0)) CEO_NM,
            SUM(CASE WHEN D.UNIT_FINAL_EST_AMT IS NOT NULL THEN D.UNIT_FINAL_EST_AMT
           		 	 ELSE IFNULL(D.UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(D.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0)
           		 	 		+ IFNULL(D.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(D.UNIT_SURFACE_AUTO_AMT, 0)
           		 	 		+ IFNULL(D.UNIT_PROCESS_AUTO_AMT, 0) + IFNULL(D.UNIT_ETC_AMT, 0)
        		END  * IFNULL(D.ITEM_QTY, 0) ) AS FINAL_EST_UNIT_PRICE,
            DATE_FORMAT(NOW(0), '%Y년 %m월 %d일') NOW
        FROM TBL_ESTIMATE A
            INNER JOIN TBL_COMPANY B ON A.COMP_CD = B.COMP_CD
            INNER JOIN TBL_COMPANY C ON A.ORDER_COMP_CD = C.COMP_CD
            INNER JOIN TBL_ESTIMATE_DETAIL D ON A.EST_SEQ = D.EST_SEQ
         WHERE 1 = 1
			AND A.EST_SEQ = #{EST_SEQ}
    </select>

    <select id="selectEstimateDetailListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER() OVER (ORDER BY A.SEQ, A.DRAWING_NUM, A.PROJECT_NM, A.MODULE_NM, A.ITEM_NM, A.PART_NUM) AS ROWNUM,
            A.EST_SEQ, A.SEQ, B.EST_NUM, A.PROJECT_NM, A.MODULE_NM, A.ITEM_NM, A.DRAWING_NUM, A.PART_NUM, A.MATERIAL_SUPPLY_YN,
            A.ITEM_QTY, A.SIZE_TXT, A.SIZE_TYPE,
            A.SIZE_W, A.SIZE_H, A.SIZE_T, A.SIZE_D, A.SIZE_L,
            A.SIZE_W_M, A.SIZE_H_M, A.SIZE_T_M, A.SIZE_D_M, A.SIZE_L_M,
            A.WORK_TYPE, SF_GET_CODE_NM('1033', A.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM,
            A.MATERIAL_TYPE, SF_GET_CODE_NM('1035', A.MATERIAL_TYPE, #{LOGIN_LOCALE}) AS MATERIAL_TYPE_NM,
            A.MATERIAL_DETAIL, SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, #{LOGIN_LOCALE}) AS MATERIAL_DETAIL_NM,
            A.MATERIAL_KIND, SF_GET_CODE_NM('1029', A.MATERIAL_KIND, #{LOGIN_LOCALE}) AS MATERIAL_KIND_NM,
            A.SURFACE_TREAT, SF_GET_CODE_NM('1039', A.SURFACE_TREAT, #{LOGIN_LOCALE}) AS SURFACE_TREAT_NM,
            A.MATERIAL_NOTE,
            A.MATERIAL_FINISH_GRIND, A.MATERIAL_FINISH_HEAT,
            A.UNIT_MATERIAL_AUTO_AMT, A.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, A.UNIT_SURFACE_AUTO_AMT, A.UNIT_PROCESS_AUTO_AMT, A.UNIT_ETC_AMT,
            A.UNIT_AMT_NOTE, A.UNIT_FINAL_EST_AMT,
            CASE WHEN A.WORK_TYPE = 'WTP020' THEN (
                SELECT IFNULL(SUM(B.UNIT_MATERIAL_AUTO_AMT), 0) + IFNULL(SUM(B.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT), 0) + IFNULL(SUM(B.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT), 0) + IFNULL(SUM(B.UNIT_SURFACE_AUTO_AMT), 0) + IFNULL(SUM(B.UNIT_PROCESS_AUTO_AMT), 0) + IFNULL(SUM(B.UNIT_ETC_AMT), 0)
                FROM TBL_ESTIMATE_DETAIL B
                WHERE B.EST_SEQ = A.EST_SEQ
                AND A.DRAWING_NUM = B.DRAWING_NUM
                AND B.WORK_TYPE <![CDATA[ <> ]]> 'WTP020'
                AND B.WORK_TYPE = 'WTP050'
            ) WHEN IFNULL(A.UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(A.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0)
                    + IFNULL(A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(A.UNIT_SURFACE_AUTO_AMT, 0)
                    + IFNULL(A.UNIT_PROCESS_AUTO_AMT, 0) + IFNULL(A.UNIT_ETC_AMT, 0) > 0
              THEN IFNULL(A.UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(A.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0)
                    + IFNULL(A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(A.UNIT_SURFACE_AUTO_AMT, 0)
                    + IFNULL(A.UNIT_PROCESS_AUTO_AMT, 0) + IFNULL(A.UNIT_ETC_AMT, 0)
            END AS UNIT_SUM_AUTO_AMT,
            CASE WHEN A.UNIT_FINAL_EST_AMT IS NOT NULL THEN A.UNIT_FINAL_EST_AMT * IFNULL(A.ITEM_QTY, 0)
            WHEN A.WORK_TYPE = 'WTP020' THEN (
                SELECT SUM((IFNULL(B.UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(B.UNIT_SURFACE_AUTO_AMT, 0) + IFNULL(B.UNIT_PROCESS_AUTO_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)) * B.PART_UNIT_QTY)
                FROM TBL_ESTIMATE_DETAIL B
                WHERE B.EST_SEQ = A.EST_SEQ
                AND A.DRAWING_NUM = B.DRAWING_NUM
                AND B.WORK_TYPE <![CDATA[ <> ]]> 'WTP020'
                AND B.WORK_TYPE = 'WTP050'
            )ELSE (
                (IFNULL(A.UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(A.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0)
                + IFNULL(A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(A.UNIT_SURFACE_AUTO_AMT, 0)
                + IFNULL(A.UNIT_PROCESS_AUTO_AMT, 0) + IFNULL(A.UNIT_ETC_AMT, 0)) * IFNULL(A.ITEM_QTY, 0)
            )
            END AS DTL_AMOUNT
        FROM TBL_ESTIMATE_DETAIL A
                 INNER JOIN TBL_ESTIMATE B ON B.EST_SEQ = A.EST_SEQ
        WHERE 1 = 1
          AND A.EST_SEQ = #{EST_SEQ}
        ORDER BY A.SEQ, A.DRAWING_NUM, A.PROJECT_NM, A.MODULE_NM, A.ITEM_NM, A.PART_NUM
    </select>

    <select id="selectEstimateDetailListExcel_old" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
            ROW_NUMBER() OVER (ORDER BY A.PROJECT_NM, A.MODULE_NM, A.ITEM_NM, A.PART_NUM) AS ROWNUM,
			A.EST_SEQ, A.SEQ, B.EST_NUM, A.PROJECT_NM, A.MODULE_NM, A.ITEM_NM, A.DRAWING_NUM, A.PART_NUM, A.MATERIAL_SUPPLY_YN,
            A.ITEM_QTY, A.SIZE_TXT, A.SIZE_TYPE,
            A.SIZE_W, A.SIZE_H, A.SIZE_T, A.SIZE_D, A.SIZE_L,
            A.SIZE_W_M, A.SIZE_H_M, A.SIZE_T_M, A.SIZE_D_M, A.SIZE_L_M,
            A.WORK_TYPE, SF_GET_CODE_NM('1033', A.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM,
            A.MATERIAL_TYPE, SF_GET_CODE_NM('1035', A.MATERIAL_TYPE, #{LOGIN_LOCALE}) AS MATERIAL_TYPE_NM,
            A.MATERIAL_DETAIL, SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, #{LOGIN_LOCALE}) AS MATERIAL_DETAIL_NM,
            A.MATERIAL_KIND, SF_GET_CODE_NM('1029', A.MATERIAL_KIND, #{LOGIN_LOCALE}) AS MATERIAL_KIND_NM,
            A.SURFACE_TREAT, SF_GET_CODE_NM('1039', A.SURFACE_TREAT, #{LOGIN_LOCALE}) AS SURFACE_TREAT_NM,
            A.MATERIAL_NOTE,
            A.MATERIAL_FINISH_GRIND, A.MATERIAL_FINISH_HEAT,
            A.UNIT_MATERIAL_AUTO_AMT, A.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, A.UNIT_SURFACE_AUTO_AMT, A.UNIT_PROCESS_AUTO_AMT, A.UNIT_ETC_AMT,
            A.UNIT_AMT_NOTE, A.UNIT_FINAL_EST_AMT,
            IFNULL(A.UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(A.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0)
                + IFNULL(A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(A.UNIT_SURFACE_AUTO_AMT, 0)
                + IFNULL(A.UNIT_PROCESS_AUTO_AMT, 0) + IFNULL(A.UNIT_ETC_AMT, 0) AS UNIT_SUM_AUTO_AMT,
            CASE WHEN A.UNIT_FINAL_EST_AMT IS NOT NULL THEN A.UNIT_FINAL_EST_AMT * IFNULL(A.ITEM_QTY, 0)
                 ELSE ((IFNULL(A.UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(A.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0)
                       + IFNULL(A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(A.UNIT_SURFACE_AUTO_AMT, 0)
                       + IFNULL(A.UNIT_PROCESS_AUTO_AMT, 0) + IFNULL(A.UNIT_ETC_AMT, 0)) * IFNULL(A.ITEM_QTY, 0))
            END AS DTL_AMOUNT
        FROM TBL_ESTIMATE_DETAIL A
			INNER JOIN TBL_ESTIMATE B ON B.EST_SEQ = A.EST_SEQ
        WHERE 1 = 1
			AND A.EST_SEQ = #{EST_SEQ}
		ORDER BY A.PROJECT_NM, A.MODULE_NM, A.ITEM_NM, A.PART_NUM
    </select>

    <select id="selectOutsourcingOrderInfoExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            DATE_FORMAT(CURDATE(), '%Y년 %m월 %d일') AS DATE,
            SF_GET_COMP_NM(#{COMP_CD}) AS COMP_NM,
            IFNULL(IF(#{ORDER_STAFF_SEQ} = 'undefined', SF_GET_STAFF_NM(NULL), SF_GET_STAFF_NM(#{ORDER_STAFF_SEQ})), SPACE(0)) AS ORDER_STAFF_NM,
            SUM(X.CONTROL_PART_QTY) AS CONTROL_PART_QTY,
            SUM(X.TOTAL) AS TOTAL
        FROM (
            SELECT
                B.OUTSIDE_UNIT_AMT,
                (SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) + IFNULL(B.ADDITIONAL_QTY,0)) AS CONTROL_PART_QTY,
                B.OUTSIDE_UNIT_AMT * (SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ)+ IFNULL(B.ADDITIONAL_QTY,0)) AS TOTAL
            FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            WHERE 1 = 1
                AND A.DEL_YN = 'N'
                AND B.OUTSIDE_YN = 'Y'
                AND B.CONTROL_SEQ IN (${CONTROL_SEQ})
                AND B.CONTROL_DETAIL_SEQ IN (${CONTROL_DETAIL_SEQ})
                AND NOT EXISTS (SELECT *
                                FROM TBL_OUTSIDE_CLOSE
                                WHERE CONTROL_SEQ = B.CONTROL_SEQ AND CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ)
        ) X
    </select>

    <select id="selectOutsourcingOrderExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY A.COMP_CD, B.OUTSIDE_COMP_CD, B.OUTSIDE_ORDER_NUM, A.CONTROL_NUM) AS ROW_NUM,
            B.OUTSIDE_COMP_CD, <!-- 업체 -->
            SF_GET_COMP_NM(B.OUTSIDE_COMP_CD) AS OUTSIDE_COMP_NM,<!-- 업체 -->
            B.OUTSIDE_ORDER_NUM, <!-- 발주번호 -->
            A.CONTROL_NUM, <!-- 작업지시번호 -->
            DATE_FORMAT(STR_TO_DATE(B.OUTSIDE_HOPE_DUE_DT, '%Y%m%d'), '%m월%d일') AS OUTSIDE_HOPE_DUE_DT, <!-- 요망납기 -->
            B.DRAWING_NUM, <!-- 도면번호 -->
            C.ITEM_NM, <!-- 품명 -->
            B.SIZE_TXT, <!-- 규격 -->
            IFNULL(SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL, <!-- 소재 종류 -->
            (SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) + IFNULL(B.ADDITIONAL_QTY,0)) AS CONTROL_PART_QTY, <!-- 발주량 -->
            B.OUTSIDE_UNIT_AMT, <!-- 단가 -->
            B.OUTSIDE_UNIT_AMT * (SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) + IFNULL(B.ADDITIONAL_QTY,0)) AS SUM_AMT, <!-- 합계 -->
            B.OUTSIDE_NOTE, <!-- 비고 -->
            B.IMG_GFILE_SEQ
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON B.CONTROL_SEQ = A.CONTROL_SEQ
                AND B.OUTSIDE_YN = 'Y'
                AND B.CONTROL_SEQ IN (${CONTROL_SEQ})
                AND B.CONTROL_DETAIL_SEQ IN (${CONTROL_DETAIL_SEQ})
            INNER JOIN TBL_CONTROL_PART_ORDER_MAIN C ON C.CONTROL_SEQ = A.CONTROL_SEQ
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            AND NOT EXISTS (SELECT *
                            FROM TBL_OUTSIDE_CLOSE
                            WHERE CONTROL_SEQ = B.CONTROL_SEQ AND CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ)
        ORDER BY A.COMP_CD, B.OUTSIDE_COMP_CD, B.OUTSIDE_ORDER_NUM, A.CONTROL_NUM
    </select>

    <select id="selectTransactionStatementInfoExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            (SELECT IFNULL(M.COMP_NM2, M.COMP_NM) FROM TBL_COMPANY M WHERE M.COMP_CD = A.ORDER_COMP_CD) AS ORDER_COMP_NM, <!-- 발주사 Full Name -->
            B.COMP_NUM, <!-- 사업자번호(사업자등록번호) -->
            IFNULL(B.COMP_NM2, B.COMP_NM) AS COMP_NM, <!-- 공급사 Full Name -->
            B.CEO_NM, <!-- 대표이사 -->
            B.COMP_ADDRESS, <!-- 주소 -->
            B.BUSINESS_ITEM, <!-- 업태 및 종목 -->
            B.COMP_TEL,
            B.COMP_FAX,
            B.BUSINESS_TYPE, <!-- 업태 -->
            B.BUSINESS_ITEM, <!-- 종목 -->
            CONCAT(B.BUSINESS_TYPE, ' / ', B.BUSINESS_ITEM) AS BUSINESS_TYPE_BUSINESS_ITEM,
            (   SELECT SUM(A.UNIT_FINAL_AMT * A.ORDER_QTY)
                FROM TBL_ORDER A
                    INNER JOIN TBL_INVOICE_DETAIL B ON A.ORDER_SEQ = B.ORDER_SEQ
                WHERE 1 = 1
                    AND A.DEL_YN = 'N'
                    AND IFNULL(A.WORK_TYPE, SPACE(0)) != 'WTP050'
                    AND A.ORDER_SEQ IN (${ORDER_SEQ_STR})
                    AND A.COMP_CD = #{COMP_CD}
                    AND A.ORDER_COMP_CD = #{ORDER_COMP_CD}
                GROUP BY B.INVOICE_NUM) AS TOTAL_AMT, <!-- 금액 합계 -->
            A.INVOICE_NUM, <!-- INV No. -->
            A.INVOICE_TITLE,
            DATE_FORMAT(NOW(), '%Y-%m-%d') AS DATE
        FROM TBL_INVOICE A
            INNER JOIN TBL_COMPANY B ON A.COMP_CD = B.COMP_CD
        WHERE INVOICE_NUM IN (SELECT INVOICE_NUM
                             FROM TBL_INVOICE_DETAIL
                             WHERE ORDER_SEQ IN (${ORDER_SEQ_STR}))
    </select>

    <select id="selectTransactionStatementListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            E.ROWNUM,
            MAX(CONTROL_NUM) AS CONTROL_NUM,
            MAX(ORDER_NUM) AS ORDER_NUM,
            MAX(DRAWING_NUM) AS DRAWING_NUM,
            MAX(ITEM_NM) AS ITEM_NM,
            MAX(DRAWING_NUM_ITEM_NM) AS DRAWING_NUM_ITEM_NM,
            MAX(SIZE_TXT) AS SIZE_TXT,
            MAX(CONTROL_ORDER_QTY) AS CONTROL_ORDER_QTY,
            MAX(UNIT_FINAL_AMT) AS UNIT_FINAL_AMT,
            MAX(TOTAL_AMT) AS TOTAL_AMT,
            MAX(NOTE) AS NOTE
        FROM (
            SELECT
                ROW_NUMBER () OVER (ORDER BY A.ORDER_SEQ, A.ORDER_NUM) AS ROWNUM,
                (
                    SELECT GROUP_CONCAT(Y.CONTROL_NUM)
                    FROM TBL_CONTROL_PART_ORDER X
                        INNER JOIN TBL_CONTROL Y ON X.CONTROL_SEQ = Y.CONTROL_SEQ AND Y.DEL_YN = 'N'
                    WHERE X.ORDER_SEQ = A.ORDER_SEQ
                ) AS CONTROL_NUM,
                A.ORDER_NUM,
                A.DRAWING_NUM,
                A.ITEM_NM,
                CONCAT(A.DRAWING_NUM, '\n',IFNULL(A.ITEM_NM,SPACE(0))) AS DRAWING_NUM_ITEM_NM,
                A.SIZE_TXT,
                A.ORDER_QTY AS CONTROL_ORDER_QTY,
                A.UNIT_FINAL_AMT,
                A.UNIT_FINAL_AMT * A.ORDER_QTY AS TOTAL_AMT, <!-- 합계 금액 -->
                B.NOTE
            FROM TBL_ORDER A
                INNER JOIN TBL_INVOICE_DETAIL B ON A.ORDER_SEQ = B.ORDER_SEQ
            WHERE A.DEL_YN = 'N'
                AND IFNULL(A.WORK_TYPE, SPACE(0)) != 'WTP050'
                AND B.INVOICE_NUM = #{INVOICE_NUM}
            UNION ALL
            SELECT
                A.SEQ AS ROWNUM,
                NULL AS CONTROL_NUM,
                NULL AS ORDER_NUM,
                NULL AS DRAWING_NUM,
                NULL AS ITEM_NM,
                NULL AS  DRAWING_NUM_ITEM_NM,
                NULL AS SIZE_TXT,
                NULL AS CONTROL_ORDER_QTY,
                NULL AS UNIT_FINAL_AMT,
                NULL AS  TOTAL_AMT,
                NULL AS NOTE
            FROM TBL_YYYYMMDD A
            WHERE A.SEQ <![CDATA[ <= ]]> 25
        ) E
        GROUP BY E.ROWNUM
        ORDER BY E.ROWNUM, E.CONTROL_NUM, E.ORDER_NUM
    </select>

    <select id="selectControlEstimateDetailListExcel_old" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY A.CONTROL_NUM, B.PART_NUM) AS ROW_NUM,
            A.CONTROL_NUM, <!-- 작업지시번호 -->
            CONCAT('(', B.DRAWING_NUM, ')') AS DRAWING_NUM, <!-- 도면번호 -->
            IFNULL(B.PART_NUM, SPACE(0)) AS PART_NUM, <!-- Part -->
            B.SIZE_TXT, <!-- 규격 -->
            IFNULL(SF_GET_CODE_NM('1029', B.MATERIAL_KIND, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_KIND_NM, <!-- 소재 형태 -->
            '', <!-- 소재 형태 -->
            SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY, <!-- 수량 -->
            IFNULL(SF_GET_CODE_NM('1033', B.WORK_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS WORK_TYPE_NM, <!-- 작업형태 이름 -->
            IFNULL(SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM, <!-- 소재 종류  -->
            '', <!-- 소재 종류 -->
            IFNULL(SF_GET_CODE_NM('1039', B.SURFACE_TREAT, #{LOGIN_LOCALE}), SPACE(0)) AS SURFACE_TREAT_NM, <!-- 표면처리 -->
            '', <!-- 표면 처리 -->
            IFNULL(SF_GET_CODE_NM('1058', B.MATERIAL_FINISH_GRIND, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_FINISH_GRIND_NM, <!-- 연마 -->
            '', <!-- 연마 -->
            B.UNIT_TM_AMT, <!-- TM 각비 -->
            B.UNIT_HEAT_AMT, <!-- 열 처리 -->
            B.UNIT_PROCESS_AMT, <!-- 가공비 -->
            B.UNIT_ETC_AMT, <!-- 기타 추가 -->
            B.UNIT_AMT_NOTE, <!-- 항목별단가_견적비고 -->
            CASE IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_TM_AMT, 0) + IFNULL(B.UNIT_GRIND_AMT, 0) + IFNULL(B.UNIT_HEAT_AMT, 0) + IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)
                WHEN 0 THEN SPACE(0)
                ELSE IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_TM_AMT, 0) + IFNULL(B.UNIT_GRIND_AMT, 0) + IFNULL(B.UNIT_HEAT_AMT, 0) + IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)
            END AS CALC_EST_UNIT_COST, <!-- 계산 견적가 -->
            C.UNIT_FINAL_EST_AMT, <!-- 최종 견적가 -->
            IFNULL( CASE
                        WHEN B.PREV_DRAWING_NUM IS NOT NULL THEN (  SELECT M.UNIT_FINAL_AMT
                                                                    FROM TBL_ORDER M
                                                                    WHERE M.ORDER_STATUS = 'REG003'
                                                                        AND M.DEL_YN = 'N'
                                                                        AND M.DRAWING_NUM = B.PREV_DRAWING_NUM
                                                                    ORDER BY M.ORDER_SEQ DESC
                                                                    LIMIT 1)
                        ELSE (  SELECT M.UNIT_FINAL_AMT
                                FROM TBL_ORDER M
                                WHERE M.ORDER_STATUS = 'REG003'
                                    AND M.DEL_YN = 'N'
                                    AND M.ORDER_SEQ != C.ORDER_SEQ
                                    AND M.DRAWING_NUM = B.DRAWING_NUM
                                ORDER BY M.ORDER_SEQ DESC
                                LIMIT 1)
                    END, SPACE(0)) AS PREV_UNIT_FINAL_AMT,    <!-- 종전가 -->
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            AND A.CONTROL_SEQ IN (${CONTROL_SEQ})
        ORDER BY A.CONTROL_NUM, B.PART_NUM
    </select>

    <select id="selectControlEstimateDetailListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY A.CONTROL_NUM, B.PART_NUM) AS ROW_NUM,
            A.CONTROL_NUM, <!-- 작업지시번호 -->
            CONCAT('(', B.DRAWING_NUM, ')') AS DRAWING_NUM, <!-- 도면번호 -->
            IFNULL(B.PART_NUM, SPACE(0)) AS PART_NUM, <!-- Part -->
            B.SIZE_TXT, <!-- 규격 -->
            IFNULL(SF_GET_CODE_NM('1029', B.MATERIAL_KIND, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_KIND_NM, <!-- 소재 형태 -->
            '', <!-- 소재 형태 -->
            SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY, <!-- 수량 -->
            IFNULL(SF_GET_CODE_NM('1033', B.WORK_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS WORK_TYPE_NM, <!-- 작업형태 이름 -->
            IFNULL(SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM, <!-- 소재 종류  -->
            '', <!-- 소재 종류 -->
            IFNULL(SF_GET_CODE_NM('1039', B.SURFACE_TREAT, #{LOGIN_LOCALE}), SPACE(0)) AS SURFACE_TREAT_NM, <!-- 표면처리 -->
            '', <!-- 표면 처리 -->
            IFNULL(SF_GET_CODE_NM('1058', B.MATERIAL_FINISH_GRIND, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_FINISH_GRIND_NM, <!-- 연마 -->
            '', <!-- 연마 -->
            B.UNIT_MATERIAL_FINISH_HEAT_AMT, <!-- 열 처리 -->
            B.UNIT_PROCESS_AMT, <!-- 가공비 -->
            B.UNIT_ETC_AMT, <!-- 기타 추가 -->
            B.UNIT_AMT_NOTE, <!-- 항목별단가_견적비고 -->
            CASE IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_GRIND_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_HEAT_AMT, 0) + IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)
                    WHEN 0 THEN SPACE(0)
                ELSE IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_GRIND_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_HEAT_AMT, 0) + IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)
            END AS CALC_EST_UNIT_COST, <!-- 계산 견적가 -->
            C.UNIT_FINAL_EST_AMT, <!-- 최종 견적가 -->
            IFNULL( CASE
                        WHEN B.PREV_DRAWING_NUM IS NOT NULL THEN (
                            SELECT M.UNIT_FINAL_AMT
                            FROM TBL_ORDER M
                            WHERE M.ORDER_STATUS = 'REG003'
                                AND M.DEL_YN = 'N'
                                AND M.DRAWING_NUM = B.PREV_DRAWING_NUM
                            ORDER BY M.ORDER_SEQ DESC
                            LIMIT 1
                        )
                        ELSE (
                            SELECT M.UNIT_FINAL_AMT
                            FROM TBL_ORDER M
                            WHERE M.ORDER_STATUS = 'REG003'
                                AND M.DEL_YN = 'N'
                                AND M.ORDER_SEQ != C.ORDER_SEQ
                                AND M.DRAWING_NUM = B.DRAWING_NUM
                            ORDER BY M.ORDER_SEQ DESC
                            LIMIT 1
                        )
                    END, SPACE(0)
            ) AS PREV_UNIT_FINAL_AMT    <!-- 종전가 -->
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            AND A.CONTROL_SEQ IN (${CONTROL_SEQ})
        ORDER BY A.CONTROL_NUM, B.PART_NUM
    </select>
    <select id="selectControlEstimateDetailListExcel_NEW" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ROW_NUMBER() OVER(ORDER BY A.REGIST_NUM, A.ORDER_NUM, A.ORDER_SEQ) AS ROW_NUM,
            A.REGIST_NUM,
            CONCAT('(', A.DRAWING_NUM, ')') AS DRAWING_NUM,
            A.SIZE_TXT,
            IFNULL(SF_GET_CODE_NM('1029', A.MATERIAL_KIND, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_KIND_NM,
            '',
            A.ORDER_QTY,
            IFNULL(SF_GET_CODE_NM('1033', A.WORK_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS WORK_TYPE_NM,
            IFNULL(SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM,
            '',
            IFNULL(SF_GET_CODE_NM('1039', A.SURFACE_TREAT, #{LOGIN_LOCALE}), SPACE(0)) AS SURFACE_TREAT_NM,
            '',
            IFNULL(SF_GET_CODE_NM('1058', A.MATERIAL_FINISH_GRIND, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_FINISH_GRIND_NM,
            '',
            A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, <!-- 열 처리 -->
            A.UNIT_PROCESS_AUTO_AMT, <!-- 가공비 -->
            A.UNIT_ETC_AMT, <!-- 기타 추가 -->
            A.UNIT_AMT_NOTE, <!-- 항목별단가_견적비고 -->
            CASE IFNULL(A.UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(A.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0) + IFNULL(A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(A.UNIT_SURFACE_AUTO_AMT, 0) + IFNULL(A.UNIT_PROCESS_AUTO_AMT, 0) + IFNULL(A.UNIT_ETC_AMT, 0)
                WHEN 0 THEN SPACE(0)
            ELSE IFNULL(A.UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(A.UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0) + IFNULL(A.UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(A.UNIT_SURFACE_AUTO_AMT, 0) + IFNULL(A.UNIT_PROCESS_AUTO_AMT, 0) + IFNULL(A.UNIT_ETC_AMT, 0)
            END AS CALC_EST_UNIT_COST, <!-- 계산 견적가 -->
            A.UNIT_FINAL_EST_AMT, <!-- 최종 견적가 -->
            IFNULL(
                CASE WHEN A.PREV_DRAWING_NUM IS NOT NULL THEN (
                    SELECT M.UNIT_FINAL_AMT
                    FROM TBL_ORDER M
                    WHERE M.ORDER_STATUS = 'REG003'
                        AND M.DEL_YN = 'N'
                        AND M.DRAWING_NUM = A.PREV_DRAWING_NUM
                        AND M.WORK_TYPE = A.WORK_TYPE
                        AND M.ORDER_COMP_CD = A.ORDER_COMP_CD
                    ORDER BY M.ORDER_SEQ DESC
                    LIMIT 1
                )
                ELSE (
                    SELECT M.UNIT_FINAL_AMT
                    FROM TBL_ORDER M
                    WHERE M.ORDER_STATUS = 'REG003'
                        AND M.DEL_YN = 'N'
                        AND M.ORDER_SEQ != A.ORDER_SEQ
                        AND M.DRAWING_NUM = A.DRAWING_NUM
                        AND M.WORK_TYPE = A.WORK_TYPE
                        AND M.ORDER_COMP_CD = A.ORDER_COMP_CD
                    ORDER BY M.ORDER_SEQ DESC
                    LIMIT 1
                )
                END, SPACE(0)
            ) AS PREV_UNIT_FINAL_AMT <!-- 종전가 -->
        FROM TBL_ORDER A
        WHERE A.DEL_YN = 'N'
            AND A.ORDER_SEQ IN (${ORDER_SEQ})
        ORDER BY A.REGIST_NUM, A.ORDER_NUM, A.ORDER_SEQ
    </select>

    <select id="selectItemOrderRegisterOrderSheetListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER() OVER(ORDER BY A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, F.MATERIAL_ORDER_SEQ) AS SEQ,
			F.MATERIAL_ORDER_NUM, F.ORDER_DT, SF_GET_COMP_NM(F.MATERIAL_COMP_CD) AS ORDER_COMP_NM,
			CASE WHEN F.MATERIAL_TYPE IS NOT NULL THEN SF_GET_CODE_NM( '1035', F.MATERIAL_TYPE, #{LOGIN_LOCALE})
                ELSE SF_GET_CODE_NM('1035', B.MATERIAL_TYPE, #{LOGIN_LOCALE})
            END MATERIAL_TYPE_NM,
            CASE WHEN F.MATERIAL_DETAIL IS NOT NULL THEN SF_GET_CODE_NM('1027', F.MATERIAL_DETAIL, #{LOGIN_LOCALE})
                ELSE SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, #{LOGIN_LOCALE})
            END AS MATERIAL_DETAIL_NM,
            CASE WHEN F.MATERIAL_KIND IS NOT NULL THEN SF_GET_CODE_NM('1029', F.MATERIAL_KIND, #{LOGIN_LOCALE})
                ELSE SF_GET_CODE_NM('1029', B.MATERIAL_KIND, #{LOGIN_LOCALE})
            END AS MATERIAL_KIND_NM,
            F.SIZE_TXT, F.ORDER_NOTE, F.INSPECT_NOTE, F.ORDER_QTY, F.HOPE_DUE_DT, F.REQUEST_NOTE,
            A.CONTROL_NUM, B.PART_NUM
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.WORK_TYPE != 'WTP020'
                -- AND B.PART_STATUS IN( 'PRO002', 'PRO004')
            INNER JOIN TBL_MATERIAL_ORDER F ON B.CONTROL_SEQ = F.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ
				AND F.MATERIAL_ORDER_SEQ IN(${CONCAT_SEQ})
            LEFT OUTER JOIN TBL_MATERIAL_ORDER_REQUEST G ON F.MATERIAL_ORDER_SEQ AND G.MATERIAL_ORDER_SEQ
        WHERE A.CONTROL_STATUS = 'ORD001'
        GROUP BY F.MATERIAL_ORDER_SEQ
        ORDER BY A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, F.MATERIAL_ORDER_SEQ
    </select>
    <select id="selectInspectResultControlInfoExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            CASE WHEN B.PART_NUM IS NULL THEN A.CONTROL_NUM ELSE CONCAT(A.CONTROL_NUM, ' #', B.PART_NUM) END AS CONTROL_NUM,
            A.CONTROL_NUM AS CONTROL,
            SF_GET_COMP_NM(A.COMP_CD) AS COMP_NM, SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
            CASE WHEN C.DRAWING_NUM IS NOT NULL THEN C.DRAWING_NUM
                 ELSE B.DRAWING_NUM
            END AS DRAWING_NUM,
            SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS ORDER_QTY,
            jmes.SF_GET_CODE_NM('1039', B.SURFACE_TREAT, #{LOGIN_LOCALE}) AS SURFACE_TREAT,
            C.ITEM_NM,
            SF_GET_CODE_NM('1029', B.MATERIAL_KIND, #{LOGIN_LOCALE}) AS MATERIAL_KIND,
            SF_GET_CODE_NM('1035', B.MATERIAL_TYPE, #{LOGIN_LOCALE}) AS MATERIAL_TYPE_NM, <!-- 재질 -->
            SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, #{LOGIN_LOCALE}) AS MATERIAL_DETAIL_NM, <!-- 소재종류 -->
            A.NOTE,
            GROUP_CONCAT(E.REGIST_NUM SEPARATOR ', ') AS REGIST_NUM,
            (SELECT CONCAT((SELECT NOTE FROM TBL_CODE WHERE CODE_CD = X.INSPECT_GRADE),'(',jmes.SF_GET_CODE_NM('1040', MAX(X.INSPECT_GRADE), 'EN') ,')')  FROM TBL_INSPECT X WHERE X.CONTROL_SEQ = A.CONTROL_SEQ AND X.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND X.INSPECT_TYPE = '1') AS INSPECT_GRADE,
            (SELECT jmes.SF_GET_DATE_F(MAX(X.INSERT_DT), 'YY', '') FROM TBL_INSPECT X WHERE X.CONTROL_SEQ = A.CONTROL_SEQ AND X.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND X.INSPECT_TYPE = '1') AS INSPECT_DT,
            (SELECT jmes.SF_GET_USER_NM(MAX(X.INSERT_ID)) FROM TBL_INSPECT X WHERE X.CONTROL_SEQ = A.CONTROL_SEQ AND X.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND X.INSPECT_TYPE = '1') AS INSPECT_ID,
            SF_GET_USER_NM(D.INSERT_ID) AS USER_NM,
            jmes.SF_GET_DATE_F(D.INSERT_DT, 'YY', '') AS INSERT_DT,
            GROUP_CONCAT(DISTINCT E.PROJECT_NM SEPARATOR ', ') AS ORDER_PROJECT_NM,
            GROUP_CONCAT(DISTINCT E.DRAWING_NUM SEPARATOR ', ') AS ORDER_DRAWING_NUM,
            CASE WHEN MAX(D.UPDATE_DT) > MAX(D.INSERT_DT) THEN SF_GET_DATE_F(MAX(D.UPDATE_DT), 'YY', '')
                 ELSE SF_GET_DATE_F(MAX(D.INSERT_DT), 'YY', '')
            END AS UPDATE_DT
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            LEFT OUTER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_INSPECT_RESULT D ON A.CONTROL_SEQ = D.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_ORDER E ON C.ORDER_SEQ = E.ORDER_SEQ AND E.DEL_YN = 'N'
        WHERE A.DEL_YN = 'N'
          AND CONCAT(A.CONTROL_SEQ,B.CONTROL_DETAIL_SEQ) = ${CONTROL_SEQ_STR}
    </select>
    <select id="selectInspectResultPointListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT B.POINT_SEQ, B.POINT_NUM, B.POINT_POSITION, B.COORDINATE_X, B.COORDINATE_Y
        FROM TBL_INSPECT_RESULT A
            INNER JOIN TBL_INSPECT_RESULT_POINT B ON A.INSPECT_RESULT_SEQ = B.INSPECT_RESULT_SEQ
        WHERE CONCAT(A.CONTROL_SEQ,A.CONTROL_DETAIL_SEQ) = ${CONTROL_SEQ_STR}
        ORDER BY B.POINT_SEQ
    </select>
    <select id="selectInspectionResultPrdNumListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT DISTINCT CONCAT('#',C.PRODUCT_NUM) AS PRODUCT_NUM
        FROM TBL_INSPECT_RESULT A
            INNER JOIN TBL_INSPECT_RESULT_POINT B ON A.INSPECT_RESULT_SEQ = B.INSPECT_RESULT_SEQ
            INNER JOIN TBL_INSPECT_RESULT_VALUE C ON B.POINT_SEQ = C.POINT_SEQ AND B.INSPECT_RESULT_SEQ = C.INSPECT_RESULT_SEQ
        WHERE CONCAT(A.CONTROL_SEQ,A.CONTROL_DETAIL_SEQ) = ${CONTROL_SEQ_STR}
        ORDER BY C.PRODUCT_NUM
    </select>
    <select id="selectInspectResultValueListExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT B.PRODUCT_NUM, IFNULL(B.RESULT_VALUE,SPACE(1)) AS RESULT_VALUE, B.POINT_SEQ, A.IMG_GFILE_SEQ AS GFILE_SEQ
        FROM TBL_INSPECT_RESULT A
             INNER JOIN TBL_INSPECT_RESULT_VALUE B ON A.INSPECT_RESULT_SEQ = B.INSPECT_RESULT_SEQ
        WHERE CONCAT(A.CONTROL_SEQ,A.CONTROL_DETAIL_SEQ) = ${CONTROL_SEQ_STR}
        ORDER BY B.PRODUCT_NUM, B.POINT_SEQ
    </select>
    <select id="selectOrderManageCodeInfoExcel" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.ORDER_COMP_CD,
            SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
            A.REGIST_NUM,
            A.ORDER_BARCODE_NUM,
            GROUP_CONCAT(DISTINCT D.CONTROL_NUM SEPARATOR ', ') AS CONTROL_NUM,
            A.DRAWING_NUM,
            A.ITEM_NM,
            A.ORDER_NUM,
            DATE_FORMAT(A.ORDER_DUE_DT, '%Y/%m/%d') AS ORDER_DUE_DT,
            CONCAT(DATE_FORMAT(A.ORDER_DUE_DT, '%m'),'월 ',DATE_FORMAT(A.ORDER_DUE_DT, '%d'),'일' ) AS ORDER_DUE_DT_FORMAT,
            SF_GET_CODE_NM('1033', A.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE,
            A.ORDER_QTY
        FROM TBL_ORDER A
             INNER JOIN TBL_CONTROL_PART_ORDER B ON A.ORDER_SEQ = B.ORDER_SEQ
             INNER JOIN TBL_CONTROL_PART C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
             INNER JOIN TBL_CONTROL D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND D.DEL_YN = 'N'
        WHERE A.DEL_YN = 'N'
          AND A.ORDER_SEQ IN (${ORDER_SEQ_STR})
        GROUP BY A.ORDER_SEQ
    </select>
</mapper>