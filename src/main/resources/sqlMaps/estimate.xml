<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="estimate">
    <select id="selectEstimateNextSequence" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT NEXTVAL(SEQ_ESTIMATE) AS EST_SEQ FROM DUAL
    </select>

    <select id="selectEstimateStaffEmailList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            B.STAFF_SEQ, A.COMP_CD, B.STAFF_NM AS RECEIVER_NM, B.STAFF_EMAIL AS RECEIVER_EMAIL, B.STAFF_TEL AS RECEIVER_TEL
        FROM TBL_COMPANY A
            INNER JOIN TBL_COMPANY_STAFF B ON A. COMP_CD = B.COMP_CD
                AND B.DEL_YN = 'N'
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            AND A.COMP_CD = #{COMP_CD}
    </select>

    <select id="selectEstimateMasterList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.EST_SEQ, A.EST_VER, A.EST_NUM, A.EST_TITLE, A.EST_STATUS, SF_GET_CODE_NM('1045', A.EST_STATUS, #{LOGIN_LOCALE}) AS EST_STATUS_NM,
            A.ORDER_COMP_CD, SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
            A.COMP_CD, SF_GET_COMP_NM(A.COMP_CD) AS COMP_NM,
            A.ORDER_STAFF_SEQ,SF_GET_STAFF_NM(A.ORDER_STAFF_SEQ) AS ORDER_STAFF_NM,
            A.ETC_GFILE_SEQ, A.DEL_YN, A.INSERT_ID, A.UPDATE_DT, A.UPDATE_ID,
            COUNT(B.SEQ) AS DTL_CNT, A.EST_USER_ID, SF_GET_USER_NM(A.EST_USER_ID) AS EST_USER,
            SUM(CASE WHEN B.UNIT_FINAL_EST_AMT IS NOT NULL THEN IFNULL(B.UNIT_FINAL_EST_AMT, 0) * IFNULL(B.ITEM_QTY, 0)
            ELSE ((IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_GRIND_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_HEAT_AMT, 0) +
            IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)) * IFNULL(B.ITEM_QTY, 0))
            END) AS DTL_AMOUNT,
            SF_GET_DATE_F(A.INSERT_DT,'YY','') AS INSERT_DT,
            CASE WHEN (SELECT COUNT(*) FROM TBL_CONTROL WHERE EST_SEQ = A.EST_SEQ AND DEL_YN ='N') > 0 THEN 'Y' ELSE 'N' END CONTROL_YN,
            A.EMAIL_TITLE,
            CASE WHEN A.EMAIL_CONTENT IS NOT NULL THEN A.EMAIL_CONTENT
                ELSE (SELECT TEMPLATE_CONTENT FROM TBL_MAIL_TEMPLATE WHERE TEMPLATE_SEQ = 0)
            END EMAIL_CONTENT,
            SF_GET_DATE_F(A.SEND_DT,'YY','') AS SEND_DT,
            CASE WHEN D.SEND_DT IS NOT NULL THEN SF_GET_DATE_F(D.SEND_DT,'YY','') END AS MAIL_SEND_DT,
            CASE WHEN A.MAIL_BOX_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END MAIL_SEND_YN,
            A.ETC_GFILE_SEQ,
            CASE WHEN A.EST_VER = (SELECT MAX(EST_VER) FROM TBL_ESTIMATE WHERE A.EST_NUM = EST_NUM) THEN 'Y' ELSE 'N' END FINAL_VER,
            CASE WHEN (SELECT Z.EST_STATUS FROM TBL_ESTIMATE Z WHERE A.EST_NUM = Z.EST_NUM
                        AND Z.EST_VER = (SELECT MAX(X.EST_VER) FROM TBL_ESTIMATE X WHERE Z.EST_NUM = X.EST_NUM)) = 'EST020' THEN 'Y'
            ELSE 'N' END VERSION_UP_YN
        FROM TBL_ESTIMATE A
            LEFT OUTER JOIN TBL_ESTIMATE_DETAIL B ON A.EST_SEQ = B.EST_SEQ
            LEFT OUTER JOIN TBL_MAIL_BOX D ON A.MAIL_BOX_SEQ = D.MAIL_BOX_SEQ
        WHERE 1=1
            <if test="COMP_CD !='' and COMP_CD != null">
                AND A.COMP_CD = #{COMP_CD}
            </if>
            <if test="ORDER_COMP_CD !='' and ORDER_COMP_CD != null">
                AND A.ORDER_COMP_CD = #{ORDER_COMP_CD}
            </if>
            <if test="EST_TITLE !='' and EST_TITLE != null">
                AND UPPER(A.EST_TITLE) LIKE CONCAT('%', UPPER(#{EST_TITLE}), '%')
            </if>
            <if test="DRAWING_NUM !='' and DRAWING_NUM != null">
                AND UPPER(A.DRAWING_NUM) LIKE CONCAT('%', UPPER(#{DRAWING_NUM}), '%')
            </if>
            <if test="EST_NUM !='' and EST_NUM != null">
                AND UPPER(A.EST_NUM) LIKE CONCAT('%', UPPER(#{EST_NUM}), '%')
            </if>
            <if test="ITEM_NM !='' and ITEM_NM != null">
                AND UPPER(B.ITEM_NM) LIKE CONCAT('%', UPPER(#{ITEM_NM}), '%')
            </if>
            <if test="LATEST_VER !='' and LATEST_VER != null">
                AND A.EST_SEQ = (   SELECT Q.EST_SEQ
                                    FROM TBL_ESTIMATE Q
                                    WHERE Q.EST_NUM = A.EST_NUM
                                    AND Q.DEL_YN = 'N'
                                    ORDER BY Q.EST_VER DESC
                                    LIMIT 1
                                )
            </if>
            <if test="SHIPMENT_COMPLETED !='' and SHIPMENT_COMPLETED != null">
                AND A.EST_STATUS = 'EST020'
           </if>
           <choose>
               <when test="DATE_CONDITION == 1">
                    AND DATE_FORMAT(A.INSERT_DT, '%Y/%m/%d') BETWEEN #{ESTIMATE_LIST_START_DT} AND #{ESTIMATE_LIST_END_DT}
                </when>
                <when test="DATE_CONDITION == 2">
                    AND DATE_FORMAT(A.SEND_DT, '%Y%m/%d') BETWEEN #{ESTIMATE_LIST_START_DT} AND #{ESTIMATE_LIST_END_DT}
                </when>
           </choose>
        GROUP BY A.EST_SEQ
        ORDER BY A.INSERT_DT DESC, A.EST_NUM, A.EST_SEQ, A.EST_VER
    </select>

    <select id="selectEstimateRegisterMaster" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.EST_SEQ, A.EST_VER, A.EST_NUM, A.EST_TITLE, A.EST_STATUS, SF_GET_CODE_NM('1045', A.EST_STATUS, #{LOGIN_LOCALE}) AS EST_STATUS_NM,
            A.ORDER_COMP_CD, SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
            A.COMP_CD, SF_GET_COMP_NM(A.COMP_CD) AS COMP_NM,
            A.ORDER_STAFF_SEQ,SF_GET_STAFF_NM(A.ORDER_STAFF_SEQ) AS ORDER_STAFF_NM,
            A.ETC_GFILE_SEQ, A.DEL_YN, A.INSERT_ID, A.UPDATE_DT, A.UPDATE_ID,
            COUNT(B.SEQ) AS DTL_CNT, A.EST_USER_ID, SF_GET_USER_NM(A.EST_USER_ID) AS EST_USER,
            SUM(CASE WHEN B.UNIT_FINAL_EST_AMT IS NOT NULL THEN IFNULL(B.UNIT_FINAL_EST_AMT, 0) * IFNULL(B.ITEM_QTY, 0)
            ELSE ((IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_GRIND_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_HEAT_AMT, 0) +
            IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)) * IFNULL(B.ITEM_QTY, 0))
            END) AS DTL_AMOUNT,
            SF_GET_DATE_F(A.INSERT_DT,'YY','M') AS INSERT_DT,
            CASE WHEN (SELECT COUNT(*) FROM TBL_CONTROL WHERE EST_SEQ = A.EST_SEQ AND DEL_YN ='N') > 0 THEN 'Y' ELSE 'N' END CONTROL_YN,
            A.EMAIL_TITLE,
            CASE WHEN A.EMAIL_CONTENT IS NOT NULL THEN A.EMAIL_CONTENT
            ELSE (SELECT TEMPLATE_CONTENT FROM TBL_MAIL_TEMPLATE WHERE TEMPLATE_SEQ = 0)
            END EMAIL_CONTENT,
            SF_GET_DATE_F(A.SEND_DT,'YY','M') AS SEND_DT,
            CASE WHEN D.SEND_DT IS NOT NULL THEN SF_GET_DATE_F(D.SEND_DT,'YY','M') END AS MAIL_SEND_DT,
            CASE WHEN A.MAIL_BOX_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END MAIL_SEND_YN,
            A.ETC_GFILE_SEQ
        FROM TBL_ESTIMATE A
            LEFT OUTER JOIN TBL_ESTIMATE_DETAIL B ON A.EST_SEQ = B.EST_SEQ
            LEFT OUTER JOIN TBL_MAIL_BOX D ON A.MAIL_BOX_SEQ = D.MAIL_BOX_SEQ
        WHERE 1=1
                AND A.EST_SEQ = #{EST_SEQ}
        GROUP BY A.EST_SEQ
        ORDER BY A.EST_NUM, A.EST_SEQ, A.EST_VER
    </select>

    <select id="selectEstimateDetailList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER() OVER (ORDER BY SEQ) AS ROW_NUM,
            EST_SEQ, SEQ, PROJECT_NM, MODULE_NM, ITEM_NM, DRAWING_NUM, PART_NUM,
            CASE WHEN PARENT_SEQ IS NULL THEN SEQ ELSE PARENT_SEQ END PARENT_SEQ,
            MATERIAL_SUPPLY_YN, ITEM_QTY, SIZE_TXT, SIZE_TYPE,
            SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            SIZE_W_M, SIZE_H_M, SIZE_T_M, SIZE_D_M, SIZE_L_M,
            WORK_TYPE AS WORK_TYPE, SF_GET_CODE_NM('1033', WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM,
            MATERIAL_TYPE AS MATERIAL_TYPE, SF_GET_CODE_NM('1035', MATERIAL_TYPE, #{LOGIN_LOCALE}) AS MATERIAL_TYPE_NM,
            MATERIAL_DETAIL AS MATERIAL_DETAIL, SF_GET_CODE_NM('1027', MATERIAL_DETAIL, #{LOGIN_LOCALE}) AS MATERIAL_DETAIL_NM,
            MATERIAL_KIND AS MATERIAL_KIND, SF_GET_CODE_NM('1029', MATERIAL_KIND, #{LOGIN_LOCALE}) AS MATERIAL_KIND_NM,
            SURFACE_TREAT AS SURFACE_TREAT, SF_GET_CODE_NM('1039', SURFACE_TREAT, #{LOGIN_LOCALE}) AS SURFACE_TREAT_NM,
            MATERIAL_NOTE AS MATERIAL_NOTE,
            MATERIAL_FINISH_GRIND AS MATERIAL_FINISH_GRIND, MATERIAL_FINISH_HEAT AS MATERIAL_FINISH_HEAT,
            UNIT_MATERIAL_AMT AS UNIT_MATERIAL_AMT,
            UNIT_MATERIAL_FINISH_GRIND_AMT, UNIT_MATERIAL_FINISH_HEAT_AMT,
            UNIT_SURFACE_AMT AS UNIT_SURFACE_AMT, UNIT_PROCESS_AMT AS UNIT_PROCESS_AMT,
            UNIT_ETC_AMT AS UNIT_ETC_AMT,
            UNIT_AMT_NOTE AS UNIT_AMT_NOTE, UNIT_FINAL_EST_AMT,
            NOTE AS NOTE, DWG_GFILE_SEQ, DXF_GFILE_SEQ, PDF_GFILE_SEQ, IMG_GFILE_SEQ,
            IFNULL(UNIT_MATERIAL_AMT, 0) + IFNULL(UNIT_MATERIAL_FINISH_GRIND_AMT, 0) + IFNULL(UNIT_MATERIAL_FINISH_HEAT_AMT, 0) +
            IFNULL(UNIT_SURFACE_AMT, 0) + IFNULL(UNIT_PROCESS_AMT, 0) + IFNULL(UNIT_ETC_AMT, 0) AS CALCUL_EST_UNIT_COST,
            CASE WHEN UNIT_FINAL_EST_AMT IS NOT NULL THEN IFNULL(UNIT_FINAL_EST_AMT, 0) * IFNULL(ITEM_QTY, 0)
                ELSE (IFNULL(UNIT_MATERIAL_AMT, 0) + IFNULL(UNIT_MATERIAL_FINISH_GRIND_AMT, 0) + IFNULL(UNIT_MATERIAL_FINISH_HEAT_AMT, 0) +
                        IFNULL(UNIT_SURFACE_AMT, 0) + IFNULL(UNIT_PROCESS_AMT, 0) + IFNULL(UNIT_ETC_AMT, 0)) * IFNULL(ITEM_QTY, 0)
            END AS DTL_AMOUNT,
            UNIT_MATERIAL_AUTO_AMT,
            UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT,
            UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT,
            UNIT_SURFACE_AUTO_AMT,
            UNIT_PROCESS_AUTO_AMT,
            CASE
            	WHEN IFNULL(UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0) + IFNULL(UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(UNIT_SURFACE_AUTO_AMT, 0) + IFNULL(UNIT_PROCESS_AUTO_AMT, 0) > 0 THEN IFNULL(UNIT_MATERIAL_AUTO_AMT, 0) + IFNULL(UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT, 0) + IFNULL(UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT, 0) + IFNULL(UNIT_SURFACE_AUTO_AMT, 0) + IFNULL(UNIT_PROCESS_AUTO_AMT, 0)
        	END AS UNIT_SUM_AUTO_AMT
        FROM TBL_ESTIMATE_DETAIL
        WHERE 1=1
            AND EST_SEQ = #{EST_SEQ}
        ORDER BY CASE WHEN PARENT_SEQ IS NULL THEN SEQ ELSE PARENT_SEQ END, SEQ
    </select>

    <select id="selectEstimateReceiverList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
			A.EST_SEQ, B.SEQ, B.RECEIVER_NM, B.RECEIVER_EMAIL, B.RECEIVER_TEL
        FROM TBL_ESTIMATE A
            INNER JOIN TBL_ESTIMATE_RECEIVER B ON A.EST_SEQ = B.EST_SEQ
        WHERE A.EST_SEQ = #{EST_SEQ}
    </select>

    <select id="selectEstimateMasterListPop" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.EST_SEQ, A.EST_NUM, A.EST_VER, A.EST_TITLE,
            A.EST_STATUS, SF_GET_CODE_NM('1048', A.EST_STATUS, #{LOGIN_LOCALE}) AS EST_STATUS_NM,
            A.ORDER_COMP_CD, C.COMP_NM AS ORDER_COMP_NM,
            A.ORDER_STAFF_SEQ, E.STAFF_NM AS ORDER_STAFF_NM, A.COMP_CD, D.COMP_NM AS COMP_NM,
            COUNT(B.SEQ) AS DTL_CNT, SUM(B.UNIT_FINAL_EST_AMT) AS DTL_AMOUNT,
            DATE_FORMAT(A.INSERT_DT, '%Y-%m-%d %T') INSERT_DT, A.EST_USER_ID, A.SEND_DT,
            A.ETC_GFILE_SEQ
        FROM TBL_ESTIMATE A
            LEFT OUTER JOIN TBL_ESTIMATE_DETAIL B ON A.EST_SEQ = B.EST_SEQ
            LEFT OUTER JOIN TBL_COMPANY C ON A.ORDER_COMP_CD = C.COMP_CD
            LEFT OUTER JOIN TBL_COMPANY D ON A.COMP_CD = D.COMP_CD
            LEFT OUTER JOIN TBL_COMPANY_STAFF E ON A.ORDER_STAFF_SEQ = E.STAFF_SEQ AND E.DEL_YN = 'N'
        WHERE A.EST_SEQ = #{EST_SEQ}
        GROUP BY A.EST_SEQ
        ORDER BY A.EST_SEQ, A.EST_NUM
    </select>

    <select id="manageEstimateCadFiles_select" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            UUID() AS ROWNUM,
            A.EST_SEQ,  <!-- key -->
            B.SEQ,      <!-- key -->
            A.EST_NUM,
            A.EST_VER, <!-- 차수 -->
            B.MODULE_NM,
            B.ITEM_NM, <!-- 품명 -->
            B.PART_NUM, <!-- Part -->
            B.DRAWING_NUM,
            #{DXF_GFILE_SEQ} AS DXF_GFILE_SEQ,
            #{PDF_GFILE_SEQ} AS PDF_GFILE_SEQ,
            #{IMG_GFILE_SEQ} AS IMG_GFILE_SEQ
        FROM TBL_ESTIMATE A
            INNER JOIN TBL_ESTIMATE_DETAIL B ON A.EST_SEQ = B.EST_SEQ
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            AND IFNULL(A.EST_STATUS, 'EST010') IN ('EST010')
            AND UPPER(B.DRAWING_NUM) = #{MAPPING_STR}
    </select>

    <update id="manageEstimateCadFiles" parameterType="java.util.HashMap">
        UPDATE TBL_ESTIMATE_DETAIL
        SET
            DXF_GFILE_SEQ = #{DXF_GFILE_SEQ},
            PDF_GFILE_SEQ = #{PDF_GFILE_SEQ},
            IMG_GFILE_SEQ = #{IMG_GFILE_SEQ},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
        WHERE EST_SEQ = #{EST_SEQ}
            AND SEQ = #{SEQ}
    </update>

<!--    <update id="manageEstimateCadFiles" parameterType="java.util.HashMap">-->
<!--        UPDATE TBL_ESTIMATE_DETAIL-->
<!--        SET-->
<!--            /* DRAWING_NUM = #{NEW_DRAWING_NUM}, */-->
<!--            DXF_GFILE_SEQ = #{DXF_GFILE_SEQ},-->
<!--            PDF_GFILE_SEQ = NULL,-->
<!--            IMG_GFILE_SEQ = NULL,-->
<!--            UPDATE_DT = NOW(),-->
<!--            UPDATE_ID = #{LOGIN_USER_ID}-->
<!--        WHERE EST_SEQ = #{EST_SEQ}-->
<!--            AND SEQ = #{SEQ}-->
<!--    </update>-->

<!--    <update id="manageEstimateCadFiles_mapping" parameterType="java.util.HashMap">-->
<!--        UPDATE TBL_ESTIMATE_DETAIL-->
<!--        SET-->
<!--            PDF_GFILE_SEQ = #{PDF_GFILE_SEQ},-->
<!--            IMG_GFILE_SEQ = #{IMG_GFILE_SEQ},-->
<!--            UPDATE_DT = NOW(),-->
<!--            UPDATE_ID = #{LOGIN_USER_ID}-->
<!--        WHERE-->
<!--            DXF_GFILE_SEQ = #{DXF_GFILE_SEQ}-->
<!--    </update>-->

    <insert id="insertEstimateMaster" parameterType="java.util.HashMap">
        INSERT INTO TBL_ESTIMATE
            (EST_SEQ, EST_VER, EST_NUM, ORDER_COMP_CD, ORDER_STAFF_SEQ, COMP_CD, EST_USER_ID,
            EST_TITLE, EST_STATUS, EMAIL_TITLE, EMAIL_CONTENT, ETC_GFILE_SEQ, DEL_YN, INSERT_DT, INSERT_ID)
        SELECT
            #{EST_SEQ} AS EST_SEQ, EST_VER, EST_NUM,
            #{ORDER_COMP_CD} AS ORDER_COMP_CD, #{ORDER_STAFF_SEQ} AS ORDER_STAFF_SEQ, #{COMP_CD} AS COMP_CD, #{EST_USER_ID} AS EST_USER_ID,
            #{EST_TITLE} AS EST_TITLE, 'EST010' AS EST_STATUS,
            CONCAT('[견적서송부 ', IFNULL(EST_NUM, SPACE(0)), SPACE(1), IFNULL(EST_TITLE, SPACE(0))) AS EMAIL_TITLE,
            #{EMAIL_CONTENT} AS EMAIL_CONTENT, #{GFILE_SEQ}, 'N' AS DEL_YN, NOW() AS INSERT_DT, NULL AS INSERT_ID
        FROM (
            SELECT
                0 AS EST_VER, EST_TITLE,
                CONCAT('EST-', DATE_FORMAT(NOW(), '%Y%m%d'), LPAD(CAST(COUNT(*)+1 AS CHAR), 3, '0')) EST_NUM
            FROM TBL_ESTIMATE
            WHERE DATE_FORMAT(INSERT_DT, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
        ) Z
        ON DUPLICATE KEY UPDATE
            ORDER_COMP_CD = #{ORDER_COMP_CD},
            ORDER_STAFF_SEQ = #{ORDER_STAFF_SEQ},
            COMP_CD = #{COMP_CD},
            EST_USER_ID = #{EST_USER_ID},
            EST_TITLE = #{EST_TITLE},
            EMAIL_TITLE = (SELECT CONCAT('[견적서송부 ', IFNULL(EST_NUM, SPACE(0)), SPACE(1), IFNULL(EST_TITLE, SPACE(0))) FROM TBL_ESTIMATE WHERE EST_SEQ = #{EST_SEQ}),
            EMAIL_CONTENT = #{EMAIL_CONTENT},
            ETC_GFILE_SEQ = #{GFILE_SEQ},
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
    </insert>

    <insert id="insertEstimateDetail" parameterType="java.util.HashMap">
        <selectKey keyProperty="SEQ" resultType="int" order="BEFORE">
            <choose>
                <when test="SEQ == null">
                    SELECT NEXTVAL(SEQ_ESTIMATE_DETAIL) FROM DUAL
                </when>
                <otherwise>
                    SELECT #{SEQ} FROM DUAL
                </otherwise>
            </choose>
        </selectKey>
        INSERT INTO TBL_ESTIMATE_DETAIL
        (
            EST_SEQ, SEQ,
            PROJECT_NM, MODULE_NM, ITEM_NM, DRAWING_NUM, PART_NUM, PARENT_SEQ,
            MATERIAL_SUPPLY_YN, ITEM_QTY, SIZE_TXT, SIZE_TYPE,
            SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            SIZE_W_M, SIZE_H_M, SIZE_T_M, SIZE_D_M, SIZE_L_M,
            WORK_TYPE, MATERIAL_TYPE, MATERIAL_DETAIL, MATERIAL_KIND, SURFACE_TREAT, MATERIAL_NOTE,
            MATERIAL_FINISH_GRIND, MATERIAL_FINISH_HEAT,
            UNIT_MATERIAL_AMT, UNIT_MATERIAL_FINISH_GRIND_AMT, UNIT_MATERIAL_FINISH_HEAT_AMT, UNIT_SURFACE_AMT, UNIT_PROCESS_AMT, UNIT_ETC_AMT,
            UNIT_AMT_NOTE, UNIT_FINAL_EST_AMT,
            NOTE, DWG_GFILE_SEQ, DXF_GFILE_SEQ, PDF_GFILE_SEQ, IMG_GFILE_SEQ,
            INSERT_ID
        )
        VALUES
        (
            #{EST_SEQ}, #{SEQ},
            #{PROJECT_NM}, #{MODULE_NM}, #{ITEM_NM}, #{DRAWING_NUM}, #{PART_NUM}, #{PARENT_SEQ},
            #{MATERIAL_SUPPLY_YN}, #{ITEM_QTY}, #{SIZE_TXT},
            SF_GET_SIZE_TXT('SIZE_TYPE', #{SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_W', #{SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_H', #{SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_T', #{SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_D', #{SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_L', #{SIZE_TXT}),
            #{SIZE_W_M}, #{SIZE_H_M}, #{SIZE_T_M}, #{SIZE_D_M}, #{SIZE_L_M},
            #{WORK_TYPE}, SF_GET_ETC_CD('1027', #{MATERIAL_DETAIL}), #{MATERIAL_DETAIL}, #{MATERIAL_KIND}, #{SURFACE_TREAT}, #{MATERIAL_NOTE},
            #{MATERIAL_FINISH_GRIND}, #{MATERIAL_FINISH_HEAT},
            #{UNIT_MATERIAL_AMT}, #{UNIT_MATERIAL_FINISH_GRIND_AMT}, #{UNIT_MATERIAL_FINISH_HEAT_AMT}, #{UNIT_SURFACE_AMT}, #{UNIT_PROCESS_AMT}, #{UNIT_ETC_AMT},
            #{UNIT_AMT_NOTE}, #{UNIT_FINAL_EST_AMT},
            #{NOTE}, #{DWG_GFILE_SEQ}, #{DXF_GFILE_SEQ}, #{PDF_GFILE_SEQ}, #{IMG_GFILE_SEQ},
            NULL
        )
        ON DUPLICATE KEY UPDATE
            PROJECT_NM = #{PROJECT_NM},
            MODULE_NM = #{MODULE_NM},                       ITEM_NM = #{ITEM_NM},
            DRAWING_NUM = #{DRAWING_NUM},                   PART_NUM = #{PART_NUM},
            MATERIAL_SUPPLY_YN = #{MATERIAL_SUPPLY_YN},     SIZE_TXT = #{SIZE_TXT},
            SIZE_TYPE = SF_GET_SIZE_TXT('SIZE_TYPE', #{SIZE_TXT}),
            SIZE_W = SF_GET_SIZE_TXT('SIZE_W', #{SIZE_TXT}),
            SIZE_H = SF_GET_SIZE_TXT('SIZE_H', #{SIZE_TXT}),
            SIZE_T = SF_GET_SIZE_TXT('SIZE_T', #{SIZE_TXT}),
            SIZE_D = SF_GET_SIZE_TXT('SIZE_D', #{SIZE_TXT}),
            SIZE_L = SF_GET_SIZE_TXT('SIZE_L', #{SIZE_TXT}),
            SIZE_W_M = #{SIZE_W_M},                             SIZE_H_M = #{SIZE_H_M},
            SIZE_T_M = #{SIZE_T_M},                             SIZE_D_M = #{SIZE_D_M},
            SIZE_L_M = #{SIZE_L_M},                             ITEM_QTY = #{ITEM_QTY},
            WORK_TYPE = #{WORK_TYPE},                           MATERIAL_TYPE = SF_GET_ETC_CD('1027', #{MATERIAL_DETAIL}),
            MATERIAL_DETAIL = #{MATERIAL_DETAIL},               MATERIAL_KIND = #{MATERIAL_KIND},
            SURFACE_TREAT = #{SURFACE_TREAT},                   MATERIAL_NOTE = #{MATERIAL_NOTE},
            MATERIAL_FINISH_GRIND = #{MATERIAL_FINISH_GRIND},
            MATERIAL_FINISH_HEAT = #{MATERIAL_FINISH_HEAT},     UNIT_MATERIAL_AMT = #{UNIT_MATERIAL_AMT},
            UNIT_MATERIAL_FINISH_GRIND_AMT = #{UNIT_MATERIAL_FINISH_GRIND_AMT},
            UNIT_MATERIAL_FINISH_HEAT_AMT = #{UNIT_MATERIAL_FINISH_HEAT_AMT},                   UNIT_SURFACE_AMT = #{UNIT_SURFACE_AMT},
            UNIT_PROCESS_AMT = #{UNIT_PROCESS_AMT},             UNIT_ETC_AMT = #{UNIT_ETC_AMT},
            UNIT_AMT_NOTE = #{UNIT_AMT_NOTE},                   UNIT_FINAL_EST_AMT = #{UNIT_FINAL_EST_AMT},
            NOTE = #{NOTE},
            DWG_GFILE_SEQ = #{DWG_GFILE_SEQ},                   DXF_GFILE_SEQ = #{DXF_GFILE_SEQ},
            PDF_GFILE_SEQ = #{PDF_GFILE_SEQ},                   IMG_GFILE_SEQ = #{IMG_GFILE_SEQ},
            UPDATE_DT = NOW(),                                  UPDATE_ID = #{UPDATE_ID}
    </insert>

    <insert id="insertEstimateReceiver" parameterType="java.util.HashMap">
        INSERT INTO TBL_ESTIMATE_RECEIVER(EST_SEQ, SEQ, RECEIVER_NM, RECEIVER_EMAIL, RECEIVER_TEL)
        VALUES
        (
            #{EST_SEQ}, CASE WHEN #{SEQ} IS NOT NULL THEN #{SEQ} ELSE NEXTVAL(SEQ_ESTIMATE_RECEIVER) END,
            #{RECEIVER_NM}, #{RECEIVER_EMAIL}, #{RECEIVER_TEL}
        )
        ON DUPLICATE KEY UPDATE
            RECEIVER_NM = #{RECEIVER_NM},
            RECEIVER_EMAIL = #{RECEIVER_EMAIL},
            RECEIVER_TEL= #{RECEIVER_TEL},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{UPDATE_ID}
    </insert>

    <update id="updateEstimateMaster"  parameterType="java.util.HashMap">
        UPDATE TBL_ESTIMATE
        SET
            EST_NUM = #{EST_NUM},
            ORDER_COMP_CD = #{ORDER_COMP_CD},
            ORDER_STAFF_SEQ = #{ORDER_STAFF_SEQ},
            COMP_CD = #{COMP_CD},
            EST_USER_ID = #{EST_USER_ID},
            EST_TITLE = #{EST_TITLE},
            EST_STATUS = #{EST_STATUS},
            DEL_YN = #{DEL_YN},
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
        WHERE EST_SEQ = #{EST_SEQ}
            AND EST_VER = #{EST_VER}
    </update>

    <update id="updateEstimateDetail"  parameterType="java.util.HashMap">
        UPDATE TBL_ESTIMATE_DETAIL
        SET PROJECT_NM = #{PROJECT_NM},
            MODULE_NM = #{MODULE_NM},                       ITEM_NM = #{ITEM_NM},
            DRAWING_NUM = #{DRAWING_NUM},                   PART_NUM = #{PART_NUM},
            MATERIAL_SUPPLY_YN = #{MATERIAL_SUPPLY_YN},     SIZE_TXT = #{SIZE_TXT},
            SIZE_TYPE = SF_GET_SIZE_TXT('SIZE_TYPE', #{SIZE_TXT}),
            SIZE_W = SF_GET_SIZE_TXT('SIZE_W', #{SIZE_TXT}),
            SIZE_H = SF_GET_SIZE_TXT('SIZE_H', #{SIZE_TXT}),
            SIZE_T = SF_GET_SIZE_TXT('SIZE_T', #{SIZE_TXT}),
            SIZE_D = SF_GET_SIZE_TXT('SIZE_D', #{SIZE_TXT}),
            SIZE_L = SF_GET_SIZE_TXT('SIZE_L', #{SIZE_TXT}),
            SIZE_W_M = #{SIZE_W_M},                             SIZE_H_M = #{SIZE_H_M},
            SIZE_T_M = #{SIZE_T_M},                             SIZE_D_M = #{SIZE_D_M},
            SIZE_L_M = #{SIZE_L_M},                             ITEM_QTY = #{ITEM_QTY},
            WORK_TYPE = #{WORK_TYPE},                           MATERIAL_TYPE = SF_GET_ETC_CD('1027', #{MATERIAL_DETAIL}),
            MATERIAL_DETAIL = #{MATERIAL_DETAIL},               MATERIAL_KIND = #{MATERIAL_KIND},
            SURFACE_TREAT = #{SURFACE_TREAT},                   MATERIAL_NOTE = #{MATERIAL_NOTE},
            MATERIAL_FINISH_GRIND = #{MATERIAL_FINISH_GRIND},
            MATERIAL_FINISH_HEAT = #{MATERIAL_FINISH_HEAT},     UNIT_MATERIAL_AMT = #{UNIT_MATERIAL_AMT},
            UNIT_MATERIAL_FINISH_GRIND_AMT = #{UNIT_MATERIAL_FINISH_GRIND_AMT},
            UNIT_MATERIAL_FINISH_HEAT_AMT = #{UNIT_MATERIAL_FINISH_HEAT_AMT},                   UNIT_SURFACE_AMT = #{UNIT_SURFACE_AMT},
            UNIT_PROCESS_AMT = #{UNIT_PROCESS_AMT},             UNIT_ETC_AMT = #{UNIT_ETC_AMT},
            UNIT_AMT_NOTE = #{UNIT_AMT_NOTE},                   UNIT_FINAL_EST_AMT = #{UNIT_FINAL_EST_AMT},
            NOTE = #{NOTE},
            DWG_GFILE_SEQ = #{DWG_GFILE_SEQ},                   DXF_GFILE_SEQ = #{DXF_GFILE_SEQ},
            PDF_GFILE_SEQ = #{PDF_GFILE_SEQ},                   IMG_GFILE_SEQ = #{IMG_GFILE_SEQ},
            UPDATE_DT = #{UPDATE_DT},                           UPDATE_ID = #{UPDATE_ID}
        WHERE EST_SEQ = #{EST_SEQ}
            AND SEQ = #{SEQ}
    </update>

    <update id="updateEstimateMasterGfileSeq"  parameterType="java.util.HashMap">
        UPDATE TBL_ESTIMATE
        SET
            ETC_GFILE_SEQ = NULL,
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
        WHERE EST_SEQ = #{EST_SEQ}
    </update>

    <delete id="deleteEstimateMaster"  parameterType="java.util.HashMap">
        DELETE FROM TBL_ESTIMATE
        WHERE EST_SEQ = #{EST_SEQ}
            AND EST_VER = #{EST_VER}
    </delete>

    <delete id="deleteEstimateDetail"  parameterType="java.util.HashMap">
        DELETE FROM TBL_ESTIMATE_DETAIL
        WHERE EST_SEQ = #{EST_SEQ}
    </delete>

    <delete id="deleteEstimateDetailEach"  parameterType="java.util.HashMap">
        DELETE FROM TBL_ESTIMATE_DETAIL
        WHERE EST_SEQ = #{EST_SEQ}
            AND SEQ = #{SEQ}
    </delete>

    <delete id="deleteEstimateReceiver"  parameterType="java.util.HashMap">
        DELETE FROM TBL_ESTIMATE_RECEIVER
        WHERE EST_SEQ = #{EST_SEQ}
    </delete>

    <delete id="deleteEstimateEachReceiver"  parameterType="java.util.HashMap">
        DELETE FROM TBL_ESTIMATE_RECEIVER
        WHERE SEQ = #{SEQ}
    </delete>

    <insert id="insertEstimateMasterVersion"  parameterType="java.util.HashMap">
        INSERT INTO TBL_ESTIMATE
            (EST_SEQ, EST_VER, EST_NUM, ORDER_COMP_CD, ORDER_STAFF_SEQ, COMP_CD, EST_USER_ID,
            EST_TITLE, EST_STATUS, EMAIL_TITLE, EMAIL_CONTENT, ETC_GFILE_SEQ, DEL_YN, INSERT_DT, INSERT_ID)
        SELECT
            #{N_EST_SEQ}, (SELECT MAX(EST_VER)+1 FROM TBL_ESTIMATE WHERE A.EST_NUM = EST_NUM) EST_VER,
            EST_NUM, ORDER_COMP_CD, ORDER_STAFF_SEQ, COMP_CD, EST_USER_ID,
            EST_TITLE, 'EST010', EMAIL_TITLE, EMAIL_CONTENT, ETC_GFILE_SEQ, DEL_YN, NOW(), INSERT_ID
        FROM TBL_ESTIMATE A
        WHERE EST_SEQ = #{EST_SEQ}
    </insert>

    <insert id="insertEstimateDetailVersion"  parameterType="java.util.HashMap">
        INSERT INTO TBL_ESTIMATE_DETAIL
        (
            EST_SEQ, SEQ, PROJECT_NM, MODULE_NM, ITEM_NM, DRAWING_NUM, PART_NUM, PARENT_SEQ, MATERIAL_SUPPLY_YN,
            ITEM_QTY, SIZE_TXT, SIZE_TYPE, SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            SIZE_W_M, SIZE_H_M, SIZE_T_M, SIZE_D_M, SIZE_L_M,
            WORK_TYPE, MATERIAL_TYPE, MATERIAL_DETAIL, MATERIAL_KIND, SURFACE_TREAT, MATERIAL_NOTE,
            MATERIAL_FINISH_GRIND, MATERIAL_FINISH_HEAT,
            UNIT_MATERIAL_AMT, UNIT_MATERIAL_FINISH_GRIND_AMT, UNIT_MATERIAL_FINISH_HEAT_AMT, UNIT_SURFACE_AMT, UNIT_PROCESS_AMT, UNIT_ETC_AMT,
            UNIT_AMT_NOTE, UNIT_FINAL_EST_AMT,
            NOTE, DWG_GFILE_SEQ, DXF_GFILE_SEQ, PDF_GFILE_SEQ, IMG_GFILE_SEQ,
            INSERT_DT, INSERT_ID
        )
        SELECT
            #{N_EST_SEQ} AS EST_SEQ, SEQ, PROJECT_NM, MODULE_NM, ITEM_NM, DRAWING_NUM, PART_NUM, PARENT_SEQ, MATERIAL_SUPPLY_YN,
            ITEM_QTY, SIZE_TXT, SIZE_TYPE, SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            SIZE_W_M, SIZE_H_M, SIZE_T_M, SIZE_D_M, SIZE_L_M,
            WORK_TYPE, MATERIAL_TYPE, MATERIAL_DETAIL, MATERIAL_KIND, SURFACE_TREAT, MATERIAL_NOTE,
            MATERIAL_FINISH_GRIND, MATERIAL_FINISH_HEAT,
            UNIT_MATERIAL_AMT, UNIT_MATERIAL_FINISH_GRIND_AMT, UNIT_MATERIAL_FINISH_HEAT_AMT, UNIT_SURFACE_AMT, UNIT_PROCESS_AMT, UNIT_ETC_AMT,
            UNIT_AMT_NOTE, UNIT_FINAL_EST_AMT,
            NOTE, DWG_GFILE_SEQ, DXF_GFILE_SEQ, PDF_GFILE_SEQ, IMG_GFILE_SEQ,
            INSERT_DT, INSERT_ID
        FROM TBL_ESTIMATE_DETAIL
         WHERE 1=1
			AND EST_SEQ = #{EST_SEQ}
    </insert>

    <insert id="insertEstimateReceiverVersion" parameterType="java.util.HashMap">
        INSERT INTO TBL_ESTIMATE_RECEIVER
        (EST_SEQ, SEQ, RECEIVER_NM, RECEIVER_EMAIL, RECEIVER_TEL, INSERT_DT, INSERT_ID)
        SELECT
            #{N_EST_SEQ}, NEXTVAL(SEQ_ESTIMATE_RECEIVER), RECEIVER_NM, RECEIVER_EMAIL, RECEIVER_TEL, NOW(), NULL
        FROM TBL_ESTIMATE_RECEIVER
        WHERE EST_SEQ = #{EST_SEQ}
    </insert>

    <select id="selectEstimateOrderControlData" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            EST_SEQ, SEQ, PROJECT_NM, MODULE_NM, ITEM_NM, DRAWING_NUM, PART_NUM,
            CASE WHEN PARENT_SEQ IS NULL THEN SEQ ELSE PARENT_SEQ END PARENT_SEQ,
            ITEM_QTY, IMG_GFILE_SEQ
        FROM TBL_ESTIMATE_DETAIL
        WHERE 1=1
            AND EST_SEQ = #{EST_SEQ}
		GROUP BY CASE WHEN PARENT_SEQ IS NULL THEN SEQ ELSE PARENT_SEQ END
        ORDER BY PROJECT_NM, MODULE_NM, ITEM_NM, PART_NUM
    </select>

    <insert id="insertEstimateOrderControlMaster" parameterType="java.util.HashMap">
        INSERT INTO TBL_CONTROL
            (CONTROL_SEQ, CONTROL_VER, STATUS_DT, COMP_CD, ORDER_COMP_CD, EST_SEQ, INSERT_ID)
        SELECT
            NEXTVAL(SEQ_CONTROL), 0, NOW(), A.COMP_CD, A.ORDER_COMP_CD, A.EST_SEQ, #{LOGIN_USER_ID}
        FROM TBL_ESTIMATE A
            INNER JOIN TBL_ESTIMATE_DETAIL B ON A.EST_SEQ = B.EST_SEQ
                AND CASE WHEN B.PARENT_SEQ IS NULL THEN B.SEQ ELSE B.PARENT_SEQ END = #{SEQ}
        WHERE A.EST_SEQ = #{EST_SEQ}
        GROUP BY CASE WHEN B.PARENT_SEQ IS NULL THEN B.SEQ ELSE B.PARENT_SEQ END
    </insert>

    <insert id="insertEstimateOrderControlDetail"  parameterType="java.util.HashMap">
        INSERT INTO TBL_CONTROL_PART
            (CONTROL_SEQ, CONTROL_DETAIL_SEQ, PART_NUM, DRAWING_NUM,
            WORK_TYPE, MATERIAL_SUPPLY_YN,
            SIZE_TXT, SIZE_TYPE, SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            SIZE_W_M, SIZE_H_M, SIZE_T_M, SIZE_D_M, SIZE_L_M,
            MATERIAL_TYPE, MATERIAL_DETAIL, MATERIAL_KIND, SURFACE_TREAT, MATERIAL_NOTE,
            MATERIAL_FINISH_GRIND, MATERIAL_FINISH_HEAT,
            UNIT_MATERIAL_AMT, UNIT_MATERIAL_FINISH_GRIND_AMT, UNIT_MATERIAL_FINISH_HEAT_AMT, UNIT_SURFACE_AMT, UNIT_PROCESS_AMT, UNIT_ETC_AMT,
            UNIT_AMT_NOTE,
            DWG_GFILE_SEQ, DXF_GFILE_SEQ, PDF_GFILE_SEQ, IMG_GFILE_SEQ,
            INSERT_ID)
        SELECT
            LASTVAL(SEQ_CONTROL), NEXTVAL(SEQ_CONTROL_PART), PART_NUM, DRAWING_NUM,
            WORK_TYPE, MATERIAL_SUPPLY_YN,
            SIZE_TXT, SIZE_TYPE, SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            SIZE_W_M, SIZE_H_M, SIZE_T_M, SIZE_D_M, SIZE_L_M,
            MATERIAL_TYPE, MATERIAL_DETAIL, MATERIAL_KIND, SURFACE_TREAT, MATERIAL_NOTE,
            MATERIAL_FINISH_GRIND, MATERIAL_FINISH_HEAT,
            UNIT_MATERIAL_AMT, UNIT_MATERIAL_FINISH_GRIND_AMT, UNIT_MATERIAL_FINISH_HEAT_AMT, UNIT_SURFACE_AMT, UNIT_PROCESS_AMT, UNIT_ETC_AMT,
            UNIT_AMT_NOTE,
            DWG_GFILE_SEQ, DXF_GFILE_SEQ, PDF_GFILE_SEQ, IMG_GFILE_SEQ,
            #{LOGIN_USER_ID}
        FROM TBL_ESTIMATE_DETAIL
        WHERE 1=1
            AND EST_SEQ = #{EST_SEQ}
            AND CASE WHEN PARENT_SEQ IS NULL THEN SEQ ELSE PARENT_SEQ END = #{SEQ}
    </insert>

    <insert id="insertEstimateOrderControlOrder"  parameterType="java.util.HashMap">
        INSERT IGNORE INTO TBL_CONTROL_PART_ORDER
            (CONTROL_SEQ, CONTROL_DETAIL_SEQ, ORDER_SEQ, ORDER_QTY,
            PROJECT_NM, MODULE_NM, ORDER_STAFF_SEQ,
            DRAWING_NUM, DWG_GFILE_SEQ, DXF_GFILE_SEQ, PDF_GFILE_SEQ, IMG_GFILE_SEQ,
            ITEM_NM, UNIT_FINAL_EST_AMT, INSERT_ID)
        SELECT
            Y.CONTROL_SEQ, Y.CONTROL_DETAIL_SEQ, Y.ORDER_SEQ, Y.ORDER_QTY,
            X.PROJECT_NM, X.MODULE_NM, X.ORDER_STAFF_SEQ,
            X.DRAWING_NUM, X.DWG_GFILE_SEQ, X.DXF_GFILE_SEQ, X.PDF_GFILE_SEQ, X.IMG_GFILE_SEQ,
            X.ITEM_NM, X.UNIT_FINAL_EST_AMT, #{LOGIN_USER_ID}
        FROM (
            SELECT
                A.EST_SEQ, B.ORDER_STAFF_SEQ, A.PROJECT_NM, A.MODULE_NM,
                A.DRAWING_NUM, A.ITEM_NM, A.UNIT_FINAL_EST_AMT, A.DWG_GFILE_SEQ, A.DXF_GFILE_SEQ, A.PDF_GFILE_SEQ, A.IMG_GFILE_SEQ
            FROM TBL_ESTIMATE_DETAIL A
                INNER JOIN TBL_ESTIMATE B ON A.EST_SEQ = B.EST_SEQ
            WHERE A.EST_SEQ = #{EST_SEQ}
                AND CASE WHEN A.PARENT_SEQ IS NULL THEN A.SEQ ELSE A.PARENT_SEQ END = #{SEQ}
        ) X,
        (
            SELECT
                A.EST_SEQ, A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, NEXTVAL(SEQ_CONTROL_PART_ORDER) AS ORDER_SEQ,
                CASE WHEN IFNULL(B.WORK_TYPE, SPACE(0)) != 'WTP050' THEN #{ITEM_QTY} END AS ORDER_QTY
            FROM TBL_CONTROL A
                INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                    AND B.CONTROL_DETAIL_SEQ NOT IN (   SELECT C.CONTROL_DETAIL_SEQ
                                                        FROM TBL_CONTROL A
                                                            INNER JOIN TBL_CONTROL_PART B ON B.CONTROL_SEQ = A.CONTROL_SEQ
                                                            INNER JOIN TBL_CONTROL_PART_ORDER C ON C.CONTROL_SEQ = B.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                                                        WHERE A.EST_SEQ = #{EST_SEQ}    )
            WHERE A.EST_SEQ = #{EST_SEQ}
        ) Y
        WHERE X.EST_SEQ = Y.EST_SEQ
    </insert>

    <insert id="insertEstimateOrderControlBarcode"  parameterType="java.util.HashMap">
        INSERT IGNORE INTO TBL_CONTROL_BARCODE
            (BARCODE_NUM, CONTROL_SEQ, CONTROL_DETAIL_SEQ, CONTROL_VER)
        SELECT
            CONCAT('C', LPAD(NEXTVAL(SEQ_BARCODE), 9, '0')) AS BARCODE_NUM
          , B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, A.CONTROL_VER
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
				AND B.CONTROL_DETAIL_SEQ NOT IN (
													SELECT C.CONTROL_DETAIL_SEQ
													FROM TBL_CONTROL B
														INNER JOIN TBL_CONTROL_PART C ON B.CONTROL_SEQ = C.CONTROL_SEQ
														INNER JOIN TBL_CONTROL_BARCODE D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
													WHERE B.EST_SEQ = #{EST_SEQ}
												)
        WHERE 1=1
            AND A.EST_SEQ = #{EST_SEQ}
    </insert>

    <select id="selectEstimateMailNextSequence" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT NEXTVAL(SEQ_MAIL) AS MAIL_BOX_SEQ FROM DUAL
    </select>

    <update id="updateEstimateMasterFinish" parameterType="java.util.HashMap">
        UPDATE TBL_ESTIMATE
        SET
            EST_STATUS = 'EST020',
            SEND_DT = NOW(),
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
        WHERE EST_SEQ = #{EST_SEQ}
    </update>

    <update id="updateEstimateMasterFinishWithMail" parameterType="java.util.HashMap">
        UPDATE TBL_ESTIMATE
        SET
            EST_STATUS = 'EST020',
            SEND_DT = NOW(),
            MAIL_BOX_SEQ = #{MAIL_BOX_SEQ},
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
        WHERE EST_SEQ = #{EST_SEQ}
    </update>

    <update id="updateEstimateMasterSend" parameterType="java.util.HashMap">
        UPDATE TBL_ESTIMATE
        SET
            SEND_DT = NOW(),
            MAIL_BOX_SEQ = #{MAIL_BOX_SEQ},
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
        WHERE EST_SEQ = #{EST_SEQ}
    </update>
    <select id="selectEstimateInfoFromControl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.COMP_CD, <!-- 사업자(공급사) -->
            C.ORDER_STAFF_SEQ, <!-- 구매 담당자 -->
            A.ORDER_COMP_CD, <!-- 발주사 -->
            DATE_FORMAT(A.STATUS_DT, '%Y-%m-%d %T') INSERT_DT, <!-- 수정일시 -->
            COUNT(A.CONTROL_SEQ) AS DTL_CNT,
            SUM(C.UNIT_FINAL_EST_AMT) AS DTL_AMOUNT, <!-- 견적금액 -->
            (SELECT TEMPLATE_CONTENT FROM TBL_MAIL_TEMPLATE WHERE TEMPLATE_SEQ = 0) AS EMAIL_CONTENT
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
        WHERE A.DEL_YN = 'N'
            AND A.CONTROL_SEQ IN (${CONTROL_SEQ})
        GROUP BY  A.COMP_CD, A.ORDER_COMP_CD, C.ORDER_STAFF_SEQ
    </select>

    <select id="selectEstimateListFromControl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER() OVER() AS ROWNUM,
            C.PROJECT_NM,
            C.MODULE_NM,
            C.ITEM_NM,
            B.DRAWING_NUM,
            B.PART_NUM,
            B.SIZE_TXT,
            B.WORK_TYPE,
            SF_GET_CODE_NM('1033', B.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM,
            B.MATERIAL_TYPE,
            SF_GET_CODE_NM('1035', B.MATERIAL_TYPE, #{LOGIN_LOCALE}) AS MATERIAL_TYPE_NM,
            B.MATERIAL_DETAIL,
            SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, #{LOGIN_LOCALE}) AS MATERIAL_DETAIL_NM,
            B.MATERIAL_KIND,
            SF_GET_CODE_NM('1029', B.MATERIAL_KIND, #{LOGIN_LOCALE}) AS MATERIAL_KIND_NM,
            B.SURFACE_TREAT,
            SF_GET_CODE_NM('1039', B.SURFACE_TREAT, #{LOGIN_LOCALE}) AS SURFACE_TREAT_NM,
            B.MATERIAL_NOTE,
            B.MATERIAL_FINISH_GRIND,
            B.MATERIAL_FINISH_HEAT,
            B.UNIT_MATERIAL_AMT,
            B.UNIT_MATERIAL_FINISH_GRIND_AMT,
            B.UNIT_MATERIAL_FINISH_HEAT_AMT,
            B.UNIT_SURFACE_AMT,
            B.UNIT_PROCESS_AMT,
            B.UNIT_ETC_AMT,
            B.UNIT_AMT_NOTE,
            C.UNIT_FINAL_EST_AMT,
            A.NOTE, -- NOTE
            B.DWG_GFILE_SEQ,
            B.DXF_GFILE_SEQ,
            B.PDF_GFILE_SEQ,
            B.IMG_GFILE_SEQ,
            IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_GRIND_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_HEAT_AMT, 0) + IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0) AS CALCUL_EST_UNIT_COST,
            CASE
                WHEN C.UNIT_FINAL_EST_AMT IS NOT NULL THEN IFNULL(C.UNIT_FINAL_EST_AMT, 0) * IFNULL(C.ORDER_QTY, 0)
                ELSE (IFNULL(B.UNIT_MATERIAL_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_GRIND_AMT, 0) + IFNULL(B.UNIT_MATERIAL_FINISH_HEAT_AMT, 0) + IFNULL(B.UNIT_SURFACE_AMT, 0) + IFNULL(B.UNIT_PROCESS_AMT, 0) + IFNULL(B.UNIT_ETC_AMT, 0)) * IFNULL(C.ORDER_QTY, 0)
            END AS DTL_AMOUNT
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ
                                                   AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
        WHERE A.CONTROL_SEQ IN (${CONTROL_SEQ})
    </select>

    <select id="selectEstimateReceiverListFromControl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.STAFF_SEQ,
            A.STAFF_NM AS RECEIVER_NM,
            A.STAFF_EMAIL AS RECEIVER_EMAIL,
            A.STAFF_TEL AS RECEIVER_TEL
        FROM  TBL_COMPANY_STAFF A
        WHERE A.STAFF_SEQ IN (SELECT M.ORDER_STAFF_SEQ FROM TBL_CONTROL_PART_ORDER M WHERE M.CONTROL_SEQ IN (${CONTROL_SEQ}))
    </select>

    <select id="selectSurfaceTreatmentCostList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ROW_NUMBER () OVER () AS ROW_NUM
            , CALC_SEQ
            , MATERIAL_TYPE
            <!-- , MATERIAL_TYPE AS MATERIAL_TYPE_NM -->
            , SURFACE_TREAT
            <!-- , SURFACE_TREAT AS SURFACE_TREAT_NM -->
            , CALC_METHOD
            , SPECIFIC_GRAVITY
            , UNIT_AMT
            , UNIT_MIN_AMT
            , NOTE
        FROM TBL_CALC_SURFACE
        WHERE 1 = 1
            <if test="MATERIAL_TYPE !='' and MATERIAL_TYPE != null">
                AND MATERIAL_TYPE = #{MATERIAL_TYPE}
            </if>
            <!--<if test="MATERIAL_DETAIL !='' and MATERIAL_DETAIL != null">
                AND MATERIAL_DETAIL = #{MATERIAL_DETAIL}
            </if>-->
        ORDER BY MATERIAL_TYPE, SURFACE_TREAT, CALC_METHOD
    </select>

    <insert id="insertSurfaceTreatmentCost" parameterType="java.util.HashMap">
        INSERT INTO TBL_CALC_SURFACE (
            CALC_SEQ, MATERIAL_TYPE, SURFACE_TREAT,
            CALC_METHOD, SPECIFIC_GRAVITY, UNIT_AMT,
            UNIT_MIN_AMT, NOTE, INSERT_DT, INSERT_ID
        ) VALUES (
            IFNULL(#{CALC_SEQ}, NEXTVAL(SEQ_DUMMY)), #{MATERIAL_TYPE}, #{SURFACE_TREAT},
            #{CALC_METHOD}, #{SPECIFIC_GRAVITY}, #{UNIT_AMT},
            #{UNIT_MIN_AMT}, #{NOTE}, NOW(), #{LOGIN_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            MATERIAL_TYPE = #{MATERIAL_TYPE},
            SURFACE_TREAT = #{SURFACE_TREAT},
            CALC_METHOD = #{CALC_METHOD},
            SPECIFIC_GRAVITY = #{SPECIFIC_GRAVITY},
            UNIT_AMT = #{UNIT_AMT},
            UNIT_MIN_AMT = #{UNIT_MIN_AMT},
            NOTE = #{NOTE},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <delete id="deleteSurfaceTreatmentCost"  parameterType="java.util.HashMap">
        DELETE FROM TBL_CALC_SURFACE
        WHERE CALC_SEQ = #{CALC_SEQ}
    </delete>

    <select id="selectMaterialCostList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT DENSE_RANK() OVER (ORDER BY A.CALC_SEQ) AS GROUP_KEY
		    , ROW_NUMBER () OVER () AS ROW_NUM
            , A.CALC_SEQ
            , A.MATERIAL_KIND
            , A.MATERIAL_TYPE
            , A.MATERIAL_DETAIL
            , A.SPECIFIC_GRAVITY
            , A.CALC_METHOD
            , A.UNIT_AMT
            , A.UNIT_MIN_AMT
            , A.NOTE
            , A.ADD_SEQ
            , B.RANGE_TYPE
            , B.RANGE_1
            , B.RANGE_2
            , B.RANGE_3
            , B.LOSS_1
            , B.LOSS_2
            , B.LOSS_3
            , B.RANGE_SIZE_YN
            , C.SIZE_NUM
        FROM TBL_CALC_MATERIAL A, TBL_CALC_MATERIAL_RANGE B
            LEFT OUTER JOIN (SELECT CALC_SEQ, RANGE_TYPE, GROUP_CONCAT(SIZE_NUM ORDER BY SIZE_NUM) AS SIZE_NUM FROM TBL_CALC_MATERIAL_RANGE_SIZE GROUP BY CALC_SEQ, RANGE_TYPE) C ON C.CALC_SEQ = B.CALC_SEQ AND C.RANGE_TYPE = B.RANGE_TYPE
	    WHERE B.CALC_SEQ = A.CALC_SEQ
            <if test="MATERIAL_KIND !='' and MATERIAL_KIND != null">
                AND A.MATERIAL_KIND = #{MATERIAL_KIND}
            </if>
            <if test="MATERIAL_TYPE !='' and MATERIAL_TYPE != null">
                AND A.MATERIAL_TYPE = #{MATERIAL_TYPE}
            </if>
            <if test="MATERIAL_DETAIL !='' and MATERIAL_DETAIL != null">
                AND A.MATERIAL_DETAIL = #{MATERIAL_DETAIL}
            </if>
        ORDER BY A.MATERIAL_KIND, A.MATERIAL_TYPE, A.MATERIAL_DETAIL,
            CASE B.RANGE_TYPE WHEN 'W' THEN 0 WHEN  'H' THEN 1 WHEN  'T' THEN 2 WHEN  'D' THEN 3 WHEN  'L' THEN 4 END
    </select>

    <insert id="insertMaterialCost" parameterType="java.util.HashMap">
        INSERT INTO TBL_CALC_MATERIAL (
            CALC_SEQ, MATERIAL_KIND, MATERIAL_TYPE,
            MATERIAL_DETAIL, SPECIFIC_GRAVITY, CALC_METHOD,
            UNIT_AMT, UNIT_MIN_AMT, NOTE, ADD_SEQ, INSERT_ID
        ) VALUES (
            #{CALC_SEQ}, #{MATERIAL_KIND}, #{MATERIAL_TYPE},
            #{MATERIAL_DETAIL}, #{SPECIFIC_GRAVITY}, #{CALC_METHOD},
            #{UNIT_AMT}, #{UNIT_MIN_AMT}, #{NOTE}, #{ADD_SEQ}, #{LOGIN_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            MATERIAL_KIND = #{MATERIAL_KIND},
            MATERIAL_TYPE = #{MATERIAL_TYPE},
            MATERIAL_DETAIL = #{MATERIAL_DETAIL},
            SPECIFIC_GRAVITY = #{SPECIFIC_GRAVITY},
            CALC_METHOD = #{CALC_METHOD},
            UNIT_AMT = #{UNIT_AMT},
            UNIT_MIN_AMT = #{UNIT_MIN_AMT},
            NOTE = #{NOTE},
            ADD_SEQ = #{ADD_SEQ},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <insert id="insertMaterialCostRange" parameterType="java.util.HashMap">
        INSERT INTO TBL_CALC_MATERIAL_RANGE (
            CALC_SEQ
            , RANGE_TYPE
            , RANGE_1
            , RANGE_2
            , RANGE_3
            , LOSS_1
            , LOSS_2
            , LOSS_3
            , RANGE_SIZE_YN
            , INSERT_DT
            , INSERT_ID
        ) VALUES(
            #{CALC_SEQ}
            , #{RANGE_TYPE}
            , #{RANGE_1}
            , #{RANGE_2}
            , #{RANGE_3}
            , #{LOSS_1}
            , #{LOSS_2}
            , #{LOSS_3}
            , IFNULL(#{RANGE_SIZE_YN}, 'N')
            , NOW()
            , #{LOGIN_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            RANGE_1 = #{RANGE_1},
            RANGE_2 = #{RANGE_2},
            RANGE_3 = #{RANGE_3},
            LOSS_1 = #{LOSS_1},
            LOSS_2 = #{LOSS_2},
            LOSS_3 = #{LOSS_3},
            RANGE_SIZE_YN = IFNULL(#{RANGE_SIZE_YN}, 'N'),
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <delete id="deleteMaterialCostRangeSizeIntoType" parameterType="java.util.HashMap">
        DELETE FROM TBL_CALC_MATERIAL_RANGE_SIZE
        WHERE CALC_SEQ = #{CALC_SEQ}
            AND RANGE_TYPE=#{RANGE_TYPE}
    </delete>

    <insert id="insertMaterialCostRangeSize" parameterType="java.util.HashMap">
        INSERT INTO TBL_CALC_MATERIAL_RANGE_SIZE (
            CALC_SEQ
            , RANGE_TYPE
            , SIZE_NUM
            , INSERT_DT
            , INSERT_ID
        ) VALUES(
            #{CALC_SEQ}
            , #{RANGE_TYPE}
            , CAST(#{SIZE_NUM} AS FLOAT)
            , NOW()
            , #{LOGIN_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <delete id="deleteMaterialCost"  parameterType="java.util.HashMap">
        DELETE FROM TBL_CALC_MATERIAL
        WHERE CALC_SEQ = #{CALC_SEQ}
    </delete>
    <delete id="deleteMaterialCostRange"  parameterType="java.util.HashMap">
        DELETE FROM TBL_CALC_MATERIAL_RANGE
        WHERE CALC_SEQ = #{CALC_SEQ}
    </delete>
    <delete id="deleteMaterialCostRangeSize"  parameterType="java.util.HashMap">
        DELETE FROM TBL_CALC_MATERIAL_RANGE_SIZE
        WHERE CALC_SEQ = #{CALC_SEQ}
    </delete>

    <select id="selectMaterialAddLogicList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ROW_NUMBER () OVER() AS ROW_NUM
            , ADD_SEQ
            , ADD_NM
            , AMT_FACTOR_1
            , AMT_FACTOR_2
            , UNIT_MIN_AMT
            , CALC_NOTE
            , DEL_YN
            , NOTE
        FROM TBL_CALC_MATERIAL_ADD_LOGIC
        ORDER BY ADD_SEQ
    </select>

    <insert id="insertMaterialAddLogic" parameterType="java.util.HashMap">
        INSERT INTO TBL_CALC_MATERIAL_ADD_LOGIC (
            ADD_SEQ, ADD_NM, AMT_FACTOR_1,
            AMT_FACTOR_2, UNIT_MIN_AMT, CALC_NOTE,
            DEL_YN, NOTE, INSERT_ID
        ) VALUES (
            IFNULL(#{ADD_SEQ}, NEXTVAL(SEQ_DUMMY)), #{ADD_NM}, #{AMT_FACTOR_1},
            #{AMT_FACTOR_2}, #{UNIT_MIN_AMT}, #{CALC_NOTE},
            IFNULL(#{DEL_YN}, 'N'), #{NOTE}, #{LOGIN_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            ADD_NM = #{ADD_NM},
            AMT_FACTOR_1 = #{AMT_FACTOR_1},
            AMT_FACTOR_2 = #{AMT_FACTOR_2},
            UNIT_MIN_AMT = #{UNIT_MIN_AMT},
            CALC_NOTE = #{CALC_NOTE},
            DEL_YN = #{DEL_YN},
            NOTE = #{NOTE},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <delete id="deleteMaterialAddLogic"  parameterType="java.util.HashMap">
        DELETE FROM TBL_CALC_MATERIAL_ADD_LOGIC
        WHERE ADD_SEQ = #{ADD_SEQ}
    </delete>

    <select id="selectPostProcessingList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ROW_NUMBER () OVER() AS ROW_NUM
            , CALC_SEQ
            , FINISH_TYPE_1
            , FINISH_TYPE_2
            , MATERIAL_TYPE
            , AMT_FACTOR_1
            , AMT_FACTOR_2
            , UNIT_MIN_AMT
            , CALC_NOTE
            , DEL_YN
            , NOTE
        FROM TBL_CALC_MATERIAL_FINISH
        WHERE FINISH_TYPE_1 IN ('MFN020', 'MFN030')
        <if test="FINISH_TYPE_1 !='' and FINISH_TYPE_1 != null">
            AND FINISH_TYPE_1 = #{FINISH_TYPE_1}
        </if>
        ORDER BY FINISH_TYPE_1, FINISH_TYPE_2, MATERIAL_TYPE
    </select>

    <insert id="insertPostProcessing" parameterType="java.util.HashMap">
        INSERT INTO TBL_CALC_MATERIAL_FINISH (
            CALC_SEQ, FINISH_TYPE_1, FINISH_TYPE_2,
            MATERIAL_TYPE, AMT_FACTOR_1, AMT_FACTOR_2,
            UNIT_MIN_AMT, CALC_NOTE, DEL_YN, NOTE, INSERT_DT, INSERT_ID
        ) VALUES(
            IFNULL(#{CALC_SEQ}, NEXTVAL(SEQ_DUMMY)), #{FINISH_TYPE_1}, #{FINISH_TYPE_2},
            #{MATERIAL_TYPE}, #{AMT_FACTOR_1}, #{AMT_FACTOR_2},
            #{UNIT_MIN_AMT}, #{CALC_NOTE}, 'N', #{NOTE}, NOW(), #{LOGIN_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            FINISH_TYPE_1 = #{FINISH_TYPE_1},
            FINISH_TYPE_2 = #{FINISH_TYPE_2},
            MATERIAL_TYPE = #{MATERIAL_TYPE},
            AMT_FACTOR_1 = #{AMT_FACTOR_1},
            AMT_FACTOR_2 = #{AMT_FACTOR_2},
            UNIT_MIN_AMT = #{UNIT_MIN_AMT},
            CALC_NOTE = #{CALC_NOTE},
            DEL_YN = #{DEL_YN},
            NOTE = #{NOTE},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <delete id="deletePostProcessing"  parameterType="java.util.HashMap">
        DELETE FROM TBL_CALC_MATERIAL_FINISH
        WHERE CALC_SEQ = #{CALC_SEQ}
    </delete>

    <select id="selectProcessCostList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ROW_NUMBER () OVER() AS ROW_NUM
            , CALC_SEQ
            , MATERIAL_KIND
            , MATERIAL_TYPE
            , SIZE_W
            , SIZE_H
            , SIZE_T
            , SIZE_D
            , SIZE_L
            , SIZE_LEVEL
            , UNIT_BASIC_AMT
        FROM TBL_CALC_PROCESS
        WHERE 1 = 1
        <if test="MATERIAL_KIND !='' and MATERIAL_KIND != null">
            AND MATERIAL_KIND = #{MATERIAL_KIND}
        </if>
        <if test="MATERIAL_TYPE !='' and MATERIAL_TYPE != null">
            AND MATERIAL_TYPE = #{MATERIAL_TYPE}
        </if>
        ORDER BY MATERIAL_KIND, MATERIAL_TYPE, SIZE_LEVEL
    </select>

    <insert id="insertProcessCost" parameterType="java.util.HashMap">
        INSERT INTO TBL_CALC_PROCESS (
            CALC_SEQ, MATERIAL_KIND, MATERIAL_TYPE,
            SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            SIZE_LEVEL, UNIT_BASIC_AMT, INSERT_DT, INSERT_ID
        ) VALUES (
            IFNULL(#{CALC_SEQ}, NEXTVAL(SEQ_DUMMY)), #{MATERIAL_KIND}, #{MATERIAL_TYPE},
            #{SIZE_W}, #{SIZE_H}, #{SIZE_T}, #{SIZE_D}, #{SIZE_L}, #{SIZE_LEVEL},
            #{UNIT_BASIC_AMT}, NOW(), #{LOGIN_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            MATERIAL_KIND = #{MATERIAL_KIND},
            MATERIAL_TYPE = #{MATERIAL_TYPE},
            SIZE_W = #{SIZE_W},
            SIZE_H = #{SIZE_H},
            SIZE_T = #{SIZE_T},
            SIZE_D = #{SIZE_D},
            SIZE_L = #{SIZE_L},
            SIZE_LEVEL = #{SIZE_LEVEL},
            UNIT_BASIC_AMT = #{UNIT_BASIC_AMT},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <delete id="deleteProcessCost"  parameterType="java.util.HashMap">
        DELETE FROM TBL_CALC_PROCESS
        WHERE CALC_SEQ = #{CALC_SEQ}
    </delete>

    <select id="selectProcessCostFactorList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ROW_NUMBER () OVER(ORDER BY A.FACTOR_CD) AS ROW_NUM
        , IFNULL(B.CALC_SEQ, #{CALC_SEQ}) AS CALC_SEQ
        , A.FACTOR_CD
        , A.LEVEL_1
        , A.LEVEL_2
        , B.UNIT_AMT
        FROM TBL_PROCESS_FACTOR A
        LEFT OUTER JOIN TBL_CALC_PROCESS_FACTOR B ON B.FACTOR_CD = A.FACTOR_CD
            AND B.CALC_SEQ = #{CALC_SEQ}
        WHERE 1 = 1
        ORDER BY A.FACTOR_CD
    </select>

    <insert id="insertProcessCostFactor" parameterType="java.util.HashMap">
        INSERT INTO TBL_CALC_PROCESS_FACTOR (
            CALC_SEQ, FACTOR_CD, UNIT_AMT
        ) VALUES (
            #{CALC_SEQ}, #{FACTOR_CD}, #{UNIT_AMT}
        )
        ON DUPLICATE KEY UPDATE
            FACTOR_CD = #{FACTOR_CD},
            UNIT_AMT = #{UNIT_AMT}
    </insert>

    <delete id="deleteProcessCostFactor"  parameterType="java.util.HashMap">
        DELETE FROM TBL_CALC_PROCESS_FACTOR
        WHERE CALC_SEQ = #{CALC_SEQ}
    </delete>

    <select id="selectProcessCostFactorDetailList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ROW_NUMBER () OVER(ORDER BY FACTOR_CD, LEVEL_1, LEVEL_2) AS ROW_NUM
            , FACTOR_CD
            , LEVEL_1
            , LEVEL_2
            , NOTE
        FROM TBL_PROCESS_FACTOR
        ORDER BY FACTOR_CD, LEVEL_1, LEVEL_2
    </select>

    <insert id="insertProcessCostFactorDetail" parameterType="java.util.HashMap">
        INSERT INTO TBL_PROCESS_FACTOR (
            FACTOR_CD, LEVEL_1, LEVEL_2,
            NOTE, INSERT_DT, INSERT_ID
        ) VALUES (
            #{FACTOR_CD}, #{LEVEL_1}, #{LEVEL_2},
            #{NOTE}, NOW(), #{LOGIN_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            FACTOR_CD = #{FACTOR_CD},
            LEVEL_1 = #{LEVEL_1},
            LEVEL_2 = #{LEVEL_2},
            NOTE = #{NOTE},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <delete id="deleteProcessCostFactorDetail"  parameterType="java.util.HashMap">
        DELETE FROM TBL_PROCESS_FACTOR
        WHERE FACTOR_CD = #{FACTOR_CD}
    </delete>

    <select id="selectProcessingRequirementsBasicInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.EST_NUM
            , B.EST_SEQ AS SEQ1
            , B.SEQ AS SEQ2
            , B.DRAWING_NUM
            , B.IMG_GFILE_SEQ
            , SF_GET_CODE_NM('1035', B.MATERIAL_TYPE, #{LOGIN_LOCALE}) AS MATERIAL_TYPE_NM
            , B.SIZE_TXT
            , C.SIZE_LEVEL <!-- 규격 Level -->
            , FORMAT(C.UNIT_BASIC_AMT, 0) AS UNIT_BASIC_AMT <!-- 기본가공비 -->
            , ( SELECT FORMAT(SUM(P.PROCESS_CNT * N.UNIT_AMT) + C.UNIT_BASIC_AMT, 0)
                FROM TBL_PROCESS_FACTOR M
                    INNER JOIN TBL_CALC_PROCESS_FACTOR N ON N.FACTOR_CD = M.FACTOR_CD
                    INNER JOIN TBL_CALC_PROCESS O ON O.CALC_SEQ = N.CALC_SEQ
                    INNER JOIN TBL_ESTIMATE_DETAIL_PROCESS P ON P.FACTOR_CD = M.FACTOR_CD
                WHERE O.CALC_SEQ = SF_GET_CALC_PROCESS_SEQ('ESTIMATE', #{EST_SEQ}, #{SEQ})
                    AND P.EST_SEQ = #{EST_SEQ}
                    AND P.SEQ = #{SEQ} ) AS TOTAL_PROCESSING_COST <!-- 총가공비 -->
        FROM TBL_ESTIMATE A
            INNER JOIN TBL_ESTIMATE_DETAIL B ON B.EST_SEQ = A.EST_SEQ
            LEFT OUTER JOIN TBL_CALC_PROCESS C ON C.CALC_SEQ = SF_GET_CALC_PROCESS_SEQ('ESTIMATE', #{EST_SEQ}, #{SEQ})
        WHERE A.DEL_YN = 'N'
            AND B.EST_SEQ = #{EST_SEQ}
            AND B.SEQ = #{SEQ}
    </select>

    <select id="selectProcessingRequirementsInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER() AS ROW_NUM
            , B.CALC_SEQ
            , A.GROUP_CD
            , A.FACTOR_CD
            , A.LEVEL_1
            , A.LEVEL_2
            , B.UNIT_AMT
            , SUM(D.PROCESS_CNT) AS PROCESS_CNT
            , SUM(B.UNIT_AMT * D.PROCESS_CNT) AS TOTAL
        FROM TBL_PROCESS_FACTOR A
            INNER JOIN TBL_CALC_PROCESS_FACTOR B ON B.FACTOR_CD = A.FACTOR_CD
            INNER JOIN TBL_CALC_PROCESS C ON C.CALC_SEQ = B.CALC_SEQ
                AND C.CALC_SEQ = SF_GET_CALC_PROCESS_SEQ(#{TYPE}, #{EST_SEQ}, #{SEQ})
            LEFT OUTER JOIN TBL_ESTIMATE_DETAIL_PROCESS D ON D.FACTOR_CD = A.FACTOR_CD
                AND D.EST_SEQ = #{EST_SEQ}
                AND D.SEQ = #{SEQ}
        GROUP BY A.FACTOR_CD WITH ROLLUP
    </select>

    <insert id="insertEstimateDetailProcess" parameterType="java.util.HashMap">
        INSERT INTO TBL_ESTIMATE_DETAIL_PROCESS (
            EST_SEQ
            , SEQ
            , FACTOR_CD
            , PROCESS_CNT
            , INSERT_DT
            , INSERT_ID
        ) VALUES (
            #{EST_SEQ}
            , #{SEQ}
            , #{FACTOR_CD}
            , #{PROCESS_CNT}
            , NOW()
            , NULL
        )
        ON DUPLICATE KEY UPDATE
            PROCESS_CNT = #{PROCESS_CNT}
	        , UPDATE_DT = NOW()
	        , UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <update id="updateEstimateAutomaticQuote" parameterType="java.util.HashMap">
        UPDATE TBL_ESTIMATE_DETAIL
        SET
            UNIT_MATERIAL_AUTO_AMT = SF_GET_CALC_MATERIAL_AMT('ESTIMATE', #{EST_SEQ}, #{SEQ})
            , UNIT_MATERIAL_FINISH_GRIND_AUTO_AMT = SF_GET_CALC_MATERIAL_FINISH_AMT('GRIND', 'ESTIMATE', #{EST_SEQ}, #{SEQ})
            , UNIT_MATERIAL_FINISH_HEAT_AUTO_AMT = SF_GET_CALC_MATERIAL_FINISH_AMT('HEAT', 'ESTIMATE', #{EST_SEQ}, #{SEQ})
            , UNIT_SURFACE_AUTO_AMT = SF_GET_CALC_SURFACE_AMT('ESTIMATE', #{EST_SEQ}, #{SEQ})
            , UNIT_PROCESS_AUTO_AMT = SF_GET_CALC_PROCESS_AMT('ESTIMATE', #{EST_SEQ}, #{SEQ})
        WHERE EST_SEQ = #{EST_SEQ}
            AND SEQ = #{SEQ}
    </update>

    <delete id="deleteEstimateDetailProcess"  parameterType="java.util.HashMap">
        DELETE FROM TBL_ESTIMATE_DETAIL_PROCESS
        WHERE EST_SEQ = #{EST_SEQ} AND SEQ = #{SEQ}
    </delete>

</mapper>