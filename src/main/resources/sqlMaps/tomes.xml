<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="tomesMapper">

    <select id="selectPortalLogin" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.COMP_CD, A.COMP_NUM, A.COMP_NM, A.COMP_NM2, A.PORTAL_SHOW_YN
        FROM jmes.TBL_COMPANY A
        WHERE 1 = 1
            AND A.COMP_CD = #{COMP_CD}
            AND A.DEL_YN ='N'
    </select>

    <select id="selectOrderCompanyList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            UPPER(REPLACE(COMP_NUM, '-', SPACE(0))) AS COMP_NUM, COMP_CD, COMP_NM
        FROM TBL_COMPANY
        WHERE 1 = 1
            AND ORDER_COMPANY_YN = 'Y'
            AND DEL_YN = 'N'
            AND COMP_NUM IS NOT NULL
        ORDER BY COMP_CD
    </select>

    <!-- ORDER_KEY : 발주번호가 없는 경우 발주 시퀀스로 키를 사용하고 있는 경우 발주 번호로 사용한다. -->
    <select id="selectPortalOrderMasterList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY A.CONTROL_NUM, B.PART_NUM) AS ROW_NUM,
            A.CONTROL_SEQ,  <!-- 주문관리일련번호 -->
            B.CONTROL_DETAIL_SEQ, <!-- 주문관리상세일련번호 -->
            C.ORDER_SEQ, <!--발주 일련번호 -->
            CASE WHEN IFNULL(C.ORDER_NUM, SPACE(0)) = '' THEN DATE_FORMAT(H.STATUS_DT, '%Y%m%d') ELSE C.ORDER_NUM END AS ROW_KEY, <!-- Portal Key -->
            (SELECT MIN(DATE_FORMAT(M.STATUS_DT, '%Y%m%d')) FROM jmes.TBL_CONTROL_PROGRESS M
            	WHERE M.CONTROL_SEQ = A.CONTROL_SEQ AND M.ORDER_STATUS = 'ORD001' GROUP BY M.CONTROL_SEQ) AS ORDER_CONFIRM_DT, <!--주문등록일자 (최초 확정일자) -->
            C.ORDER_NUM, <!-- 발주번호 -->
            COUNT(C.DRAWING_NUM) AS DRAWING_NUM_CNT, <!--도면 건수-->
            SUM(C.ORDER_QTY) AS ORDER_QTY, <!--주문수량-->
            C.ORDER_DUE_DT, <!--납기일자-->
            (SELECT SUM(E.OUT_QTY) FROM TBL_OUT E
             WHERE C.CONTROL_SEQ = E.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ
             	AND C.ORDER_SEQ = E.ORDER_SEQ) AS OUT_QTY, <!--출고 수량-->
            DATE_FORMAT(C.OUT_FINISH_DT, '%Y%m%d') AS OUT_FINISH_DT, <!--출고 완료일-->
--             MIN(CASE WHEN IFNULL(D.CLOSE_MONTH, 'N') = 'N' THEN SPACE(0) ELSE 'Y' END) AS CLOSE_YN,
            MIN(CASE WHEN D.CLOSE_MONTH IS NOT NULL
            THEN CONCAT(DATE_FORMAT(STR_TO_DATE(D.CLOSE_MONTH, '%Y%m'), '%Y.%m'), '/', D.CLOSE_VER, '차')
            ELSE SPACE(0) END) AS CLOSE_YN, -- 마감 여부
            IFNULL(SUM(C.ORDER_QTY * C.UNIT_FINAL_AMT),0) AS FINAL_AMT,
            FORMAT(IFNULL(SUM(C.ORDER_QTY * C.UNIT_FINAL_AMT),0), 0) AS FINAL_AMT_NM <!--공급가액 계-->
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                AND B.WORK_TYPE NOT IN ('WTP050')
            INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ
                AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_CONTROL_PROGRESS H ON A.CONTROL_SEQ = H.CONTROL_SEQ
                AND H.SEQ = (SELECT MAX(I.SEQ) FROM TBL_CONTROL_PROGRESS I WHERE H.CONTROL_SEQ = I.CONTROL_SEQ
                                AND I.ORDER_STATUS = 'ORD001'
                )
                AND H.STATUS_DT BETWEEN #{START_DT} AND #{END_DT}
            LEFT OUTER JOIN (
        		SELECT G.CONTROL_SEQ, G.COMP_CD, G.ORDER_COMP_CD, G.CLOSE_MONTH, G.CLOSE_VER
        		FROM TBL_MONTH_CLOSE F, TBL_MONTH_CLOSE_ORDER G
        	    WHERE F.CLOSE_MONTH = G.CLOSE_MONTH
        	        AND F.CLOSE_VER = G.CLOSE_VER
        	        AND F.COMP_CD = G.COMP_CD
        	        AND F.ORDER_COMP_CD = G.ORDER_COMP_CD
        	        AND F.CLOSE_MONTH = G.CLOSE_MONTH
        	        AND F.CLOSE_VER = G.CLOSE_VER
        	    GROUP BY G.CONTROL_SEQ, G.COMP_CD, G.ORDER_COMP_CD
            ) D ON A.CONTROL_SEQ = D.CONTROL_SEQ AND A.COMP_CD = D.COMP_CD AND A.ORDER_COMP_CD = D.ORDER_COMP_CD
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            AND A.CONTROL_STATUS IN ('ORD001', 'ORD003', 'ORD004', 'ORD005')
            AND A.ORDER_COMP_CD = #{COMP_CD}
        GROUP BY CASE WHEN IFNULL(C.ORDER_NUM, SPACE(0)) = '' THEN DATE_FORMAT(H.STATUS_DT, '%Y%m%d') ELSE C.ORDER_NUM END
        ORDER BY A.CONTROL_NUM, C.DRAWING_NUM, B.PART_NUM
    </select>

    <select id="selectPortalOrderDetailList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY A.CONTROL_NUM, B.PART_NUM) AS ROW_NUM,
            IFNULL(SF_GET_COMP_NM(A.ORDER_COMP_CD), SPACE(0)) AS ORDER_COMP_NM, -- 발주업체 -->
            IFNULL(SF_GET_COMP_NM(A.COMP_CD), SPACE(0)) AS COMP_NM, -- 사업자구분 -->
            C.ORDER_NUM, -- 발주번호 -->
            IFNULL(SF_GET_CODE_NM('1038', A.CONTROL_STATUS, 'KR'), SPACE(0)) AS CONTROL_STATUS_NM,  -- 주문관리상태 -->
            CASE WHEN IFNULL(A.EMERGENCY_YN, 'N') = 'Y' THEN '긴급' ELSE SPACE(0) END AS EMERGENCY_BARCODE_NM, -- 바코드 긴급 -->
            CASE WHEN C.SCRAP_YN = 'Y' OR A.OUT_FINISH_STATUS_DT IS NOT NULL
                    THEN (SELECT ETC5 FROM jmes.TBL_CODE K WHERE K.HIGH_CD = '1090' AND K.CODE_CD = A.OUT_FINISH_STATUS)
                WHEN B.PART_STATUS IS NOT NULL
                    THEN (SELECT ETC5 FROM jmes.TBL_CODE K WHERE K.HIGH_CD = '1013' AND K.CODE_CD = B.PART_STATUS)
                WHEN A.CONTROL_STATUS = 'ORD001' AND IFNULL(B.OUTSIDE_YN,'N') = 'N' THEN '발주확정'
                WHEN A.CONTROL_STATUS = 'ORD001' AND B.OUTSIDE_YN = 'Y' THEN '가공확정'
                WHEN A.CONTROL_STATUS = 'ORD005' THEN '보류'
                ELSE ''
            END AS PART_STATUS_NM,   --  PART 상태 -->
        	C.DRAWING_NUM, -- 도면번호 -->
        	C.ITEM_NM, -- 품명 -->
        	IFNULL(SF_GET_CODE_NM('1033', B.WORK_TYPE, 'KR'), SPACE(0)) AS WORK_TYPE_NM, -- 작업형태 -->
        	IFNULL(B.SIZE_TXT, SPACE(0)) AS SIZE, -- 규격 -->
        	IFNULL(SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, 'KR'), SPACE(0)) AS MATERIAL_DETAIL_NM,  --  소재 종류 -->
        	IFNULL(SF_GET_CODE_NM('1039', B.SURFACE_TREAT, 'KR'), SPACE(0)) AS SURFACE_TREAT_NM,   --  표면 처리 -->
            FORMAT(IFNULL(C.ORDER_QTY, SPACE(0)), 0) AS ORDER_QTY, -- 발주수량 -->
            IFNULL(A.SAME_SIDE_YN, SPACE(0)) AS SAME_SIDE_YN, -- 대칭 여부 -->
            IFNULL(C.ORIGINAL_SIDE_QTY, SPACE(0)) AS ORIGINAL_SIDE_QTY, -- 대칭_원칭 -->
            IFNULL(C.OTHER_SIDE_QTY, SPACE(0)) AS OTHER_SIDE_QTY, -- 대칭_대칭 -->
            (SELECT FORMAT(IFNULL(SUM(OUT_QTY), 0), 0) FROM TBL_OUT WHERE CONTROL_SEQ = C.CONTROL_SEQ AND CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ AND ORDER_SEQ = C.ORDER_SEQ) AS OUT_QTY, -- 출고 -->
            SF_GET_DATE_F(C.OUT_FINISH_DT, 'YYYY', '') AS ORDER_OUT_FINISH_DT,   -- 출고완료일 -->
            IFNULL((SELECT INVOICE_NUM FROM TBL_INVOICE_DETAIL M WHERE M.CONTROL_SEQ = C.CONTROL_SEQ AND M.ORDER_SEQ =  C.ORDER_SEQ), SPACE(0)) AS INVOICE_NUM,  -- 인보이스 번호 -->
            FORMAT(IFNULL(C.UNIT_FINAL_AMT, SPACE(0)), 0) AS UNIT_FINAL_AMT,  --  최종공급단가 -->
            FORMAT(IFNULL(C.UNIT_FINAL_AMT * C.ORDER_QTY, SPACE(0)), 0) AS FINAL_TOTAL_AMT,  -- 합계 금액 -->
            CASE WHEN D.CLOSE_MONTH IS NOT NULL
                THEN CONCAT(DATE_FORMAT(STR_TO_DATE(D.CLOSE_MONTH, '%Y%m'), '%Y.%m'), '/', D.CLOSE_VER, '차')
            ELSE SPACE(0) END AS CLOSE_MONTH, -- 마감 여부
            A.CONTROL_NUM  -- 업체 작업지시번호
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                AND B.WORK_TYPE NOT IN ('WTP050')
            INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_CONTROL_PROGRESS H ON A.CONTROL_SEQ = H.CONTROL_SEQ
                AND H.SEQ = (SELECT MAX(I.SEQ) FROM TBL_CONTROL_PROGRESS I WHERE H.CONTROL_SEQ = I.CONTROL_SEQ
                                AND I.ORDER_STATUS = 'ORD001'
                )
                AND H.STATUS_DT BETWEEN #{START_DT} AND #{END_DT}
            LEFT OUTER JOIN (
        		SELECT G.CONTROL_SEQ, G.COMP_CD, G.ORDER_COMP_CD, G.CLOSE_MONTH, G.CLOSE_VER
        		FROM TBL_MONTH_CLOSE F, TBL_MONTH_CLOSE_ORDER G
        	    WHERE F.CLOSE_MONTH = G.CLOSE_MONTH
        	        AND F.CLOSE_VER = G.CLOSE_VER
        	        AND F.COMP_CD = G.COMP_CD
        	        AND F.ORDER_COMP_CD = G.ORDER_COMP_CD
        	        AND F.CLOSE_MONTH = G.CLOSE_MONTH
        	        AND F.CLOSE_VER = G.CLOSE_VER
        	    GROUP BY G.CONTROL_SEQ, G.COMP_CD, G.ORDER_COMP_CD
            ) D ON A.CONTROL_SEQ = D.CONTROL_SEQ AND A.COMP_CD = D.COMP_CD AND A.ORDER_COMP_CD = D.ORDER_COMP_CD
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            AND A.CONTROL_STATUS IN ('ORD001', 'ORD003', 'ORD004', 'ORD005')
            AND A.ORDER_COMP_CD = #{COMP_CD}
            AND (CASE WHEN IFNULL(C.ORDER_NUM, SPACE(0)) = '' THEN DATE_FORMAT(H.STATUS_DT, '%Y%m%d') ELSE C.ORDER_NUM END) = #{ROW_KEY}
        ORDER BY A.CONTROL_NUM, C.DRAWING_NUM, B.PART_NUM
    </select>
</mapper>