<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="orderMapper">

    <sql id="controlManage">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ, <!-- 관리번호 -->
            A.CONTROL_STATUS, <!-- 주문관리상태 -->
            B.CONTROL_DETAIL_SEQ, <!-- 주문관리상세일련번호 -->
            C.ORDER_SEQ, <!-- 발주번호일련번호 -->
            SF_GET_CODE_NM(1038, A.CONTROL_STATUS, 'KR') AS CONTROL_STATUS_NM, <!-- 주문관리상태 -->
            DATE_FORMAT(A.STATUS_DT, '%m-%d %H:%i') AS CONTROL_STATUS_DT, <!-- 상태확정일 -->
            A.COMP_CD, <!-- 사업자구분 -->
            SF_GET_COMP_NM(A.COMP_CD) AS COMP_NM, <!-- 사업자구분 이름 -->
            A.ORDER_COMP_CD, <!-- 발주업체 -->
            SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM, <!-- 발주업체 이름 -->
            A.ORDER_STAFF_SEQ, <!-- 구매담당 -->
            SF_GET_STAFF_NM(A.ORDER_STAFF_SEQ) AS ORDER_STAFF_NM, <!-- 구매담당자 이름 -->
            A.DESIGNER_NM, <!-- 설계자 -->
            A.NOTE, <!-- 비고 -->
            <!--        '', 거래명세서 no -->
            A.MODULE_NM, <!-- 모듈명 -->
            A.MAIN_INSPECTION, <!-- 주요 검사품 -->
            SF_GET_CODE_NM(1042, A.MAIN_INSPECTION, 'EN') AS MAIN_INSPECTION_NM, <!-- 주요 검사품 -->
            A.EMERGENCY_YN, <!-- 긴급 -->
            SF_GET_CODE_NM(1042, A.EMERGENCY_YN, 'EN') AS EMERGENCY_YN_NM, <!-- 긴급 -->
            A.CONTROL_VER, <!-- 관리번호버전 -->
            A.CONTROL_NUM, <!-- 관리번호 -->
            B.PART_NUM, <!-- Part -->
            B.DRAWING_VER, <!-- 도면번호버전 -->
            B.DRAWING_NUM, <!-- 도면번호 -->
            B.ITEM_NM, <!-- 품명 -->
            B.WORK_TYPE, <!-- 작업형태 -->
            SF_GET_CODE_NM(1033, B.WORK_TYPE, 'KR') AS WORK_NM, <!-- 작업형태 이름 -->
            B.OUTSIDE_YN, <!-- 외주 -->
            B.WORK_FACTORY, <!-- 수행공장 -->
            B.MATERIAL_SUPPLY_YN, <!-- 소재사급 -->
            B.INNER_DUE_DT, <!-- 납기(가공납기) -->
            B.SIZE_TXT, <!-- 규격 -->
            B.MATERIAL_DETAIL, <!-- 소재 종류 -->
            B.MATERIAL_TYPE, <!-- 재질 -->
            B.MATERIAL_KIND, <!-- 소재 형태 -->
            B.SURFACE_TREAT, <!-- 표면처리 -->
            B.MATERIAL_FINISH_HEAT, <!-- 열처리 -->
            B.MATERIAL_NOTE, <!-- 소재비고 -->
            B.PART_UNIT_QTY, <!-- Part단위수량 -->
            B.ITEM_QTY, <!-- 수량 -->
            C.ORDER_NUM, <!-- 발주번호 -->
            C.ORDER_QTY, <!-- 발주정보_수량 -->
            B.ORIGINAL_SIDE_QTY, <!-- 대칭_원칭 -->
            B.OTHER_SIDE_QTY, <!-- 대칭_대칭 -->
            C.ORDER_DUE_DT, <!-- 발주납기 -->
            C.DELIVERY_DT, <!-- 발주정보_납품확인 -->
            B.DETAIL_LATHE, <!-- 상세가공요건_선반 -->
            B.DETAIL_SURFACE, <!-- 상세가공요건_가공면 -->
            B.DETAIL_CLAMPING, <!-- 상세가공요건_클램핑 -->
            B.DETAIL_POCKET, <!-- 상세가공요건_포켓 -->
            B.DETAIL_DRILL, <!-- 상세가공요건_드릴 -->
            B.DETAIL_DIFFICULTY, <!-- 상세가공요건_난도 -->
            B.MATERIAL_FINISH_TM, <!-- 소재마감_TM각비 -->
            B.MATERIAL_FINISH_GRIND, <!-- 소재마감_연마 -->
            B.MATERIAL_FINISH_HEAT, <!-- 소재마감_열처리 -->
            B.SIZE_W_M, <!-- 예상규격_가로 -->
            B.SIZE_H_M, <!-- 예상규격_세로 -->
            B.SIZE_T_M, <!-- 예상규격_두께 -->
            B.SIZE_D_M, <!-- 예상규격_지름 -->
            B.SIZE_L_M, <!-- 예상규격_길이 -->
            B.UNIT_MATERIAL_AMT, <!-- 항목별단가_소재비 -->
            B.UNIT_TM_AMT, <!-- 항목별단가_TM각비 -->
            B.UNIT_GRIND_AMT, <!-- 항목별단가_연마비 -->
            B.UNIT_HEAT_AMT, <!-- 항목별단가_열처리 -->
            B.UNIT_SURFACE_AMT, <!-- 항목별단가_표면처리 -->
            B.UNIT_PROCESS_AMT, <!-- 항목별단가_가공비 -->
            B.UNIT_ETC_AMT, <!-- 항목별단가_기타추가 -->
            B.UNIT_AMT_NOTE, <!-- 항목별단가_견적비고 -->
            B.UNIT_FINAL_EST_AMT, <!-- 최종견적단가 -->
            B.UNIT_FINAL_AMT, <!-- 최종공급단가 -->
            B.PREV_DRAWING_NUM, <!-- 변경전도면번호 -->
            DATE_FORMAT(A.STATUS_DT, '%m-%d %H:%i') AS STATUS_DT <!-- 등록/업데이트 일시 -->
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ
                                                   AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
    </sql>

    <select id="selectControlManageList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <include refid="controlManage" />
        WHERE 1 = 1
        <if test="CONTROL_NUM != null and CONTROL_NUM != ''">
             AND A.CONTROL_NUM = #{CONTROL_NUM}
        </if>
        <if test="COMP_CD != null and COMP_CD != ''">
             AND A.COMP_CD = #{COMP_CD}
        </if>
        <if test="DRAWING_NUM != null and DRAWING_NUM != ''">
             AND B.DRAWING_NUM = #{DRAWING_NUM}
        </if>
        <if test="ITEM_NM != null and ITEM_NM != ''">
             AND B.ITEM_NM = #{ITEM_NM}
        </if>
        <if test="WORK_TYPE != null and WORK_TYPE != ''">
             AND B.WORK_TYPE = #{WORK_TYPE}
        </if>
        <if test="ORDER_NUM != null and ORDER_NUM != ''">
             AND C.ORDER_NUM = #{ORDER_NUM}
        </if>
        <if test="ORDER_STATUS != null and ORDER_STATUS != ''">
             AND A.ORDER_STATUS = #{ORDER_STATUS}
        </if>
        <if test="OUTSIDE_YN != null and OUTSIDE_YN != ''">
            AND B.OUTSIDE_YN NOT IN ('Y')
        </if>
        ORDER BY
            A.CONTROL_SEQ,
            B.PART_NUM
    </select>

    <select id="selectControlCloseLeftList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.COMP_CD AS ORDER_COMP,
            A.COMP_NM AS ORDER_COMP_NM,
            IFNULL(E.CLOSE_MONTH, CONCAT(#{CONTROL_CLOSE_YEAR}, #{CONTROL_CLOSE_MONTH})) AS CLOSE_MONTH,
            IFNULL(DATE_FORMAT(STR_TO_DATE(E.CLOSE_MONTH, '%Y%m'), '%Y.%m월' ), DATE_FORMAT(STR_TO_DATE(CONCAT(#{CONTROL_CLOSE_YEAR}, #{CONTROL_CLOSE_MONTH}), '%Y%m'), '%Y.%m월' )) AS CLOSE_MONTH_TRAN,
            IFNULL(CONCAT(E.CLOSE_VER, '차'), '-') AS CLOSE_VER,
            IFNULL(CONCAT(CAST(SUM(D.ORDER_QTY) AS CHAR), '건'), '-') AS ORDER_QTY,
            IFNULL(FORMAT(SUM(C.UNIT_FINAL_AMT), 0), '-') AS UNIT_FINAL_AMT
        FROM TBL_COMPANY A
            LEFT OUTER JOIN TBL_CONTROL B ON A.COMP_CD = B.ORDER_COMP_CD
            LEFT OUTER JOIN TBL_CONTROL_PART C ON B.CONTROL_SEQ = C.CONTROL_SEQ
                                                  AND EXISTS (SELECT 1
									                          FROM TBL_CONTROL_CLOSE X
									                          WHERE C.CONTROL_SEQ = X.CONTROL_SEQ
									                                AND X.CLOSE_MONTH = CONCAT(#{CONTROL_CLOSE_YEAR}, #{CONTROL_CLOSE_MONTH})
		                                                            AND X.CLOSE_VER = #{CLOSE_VER})
            LEFT OUTER JOIN TBL_CONTROL_PART_ORDER D ON C.CONTROL_SEQ = D.CONTROL_SEQ
                                                        AND C.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_CONTROL_CLOSE E ON B.CONTROL_SEQ = E.CONTROL_SEQ
                                                   AND E.CLOSE_MONTH = CONCAT(#{CONTROL_CLOSE_YEAR}, #{CONTROL_CLOSE_MONTH})
                                                   AND E.CLOSE_VER = #{CLOSE_VER}
        WHERE A.ORDER_COMPANY_YN = 'Y'
        GROUP BY A.COMP_CD
    </select>

    <select id="selectControlCloseRightList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ORDER_COMP_CD,
            ORDER_COMP_NM,
            CLOSE_MONTH,
            CLOSE_MONTH_TRAN,
            CONCAT(CLOSE_VER, '차') AS CLOSE_VER,
            CONCAT(CAST(SUM(ORDER_QTY) AS CHAR),'건') AS ORDER_QTY,
            FORMAT(SUM(UNIT_FINAL_AMT), 0) AS UNIT_FINAL_AMT,
            CONCAT(CAST(SUM(ADD_QTY) AS CHAR), '건') AS ADD_QTY,
            FORMAT(SUM(ADD_UNIT_FINAL_AMT), 0) AS ADD_UNIT_FINAL_AMT
        FROM (
            SELECT
                A.ORDER_COMP_CD,
                SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
                D.CLOSE_MONTH,
                DATE_FORMAT(STR_TO_DATE(D.CLOSE_MONTH, '%Y%m'), '%Y.%m월' ) AS CLOSE_MONTH_TRAN,
                D.CLOSE_VER,
                SUM(C.ORDER_QTY) AS ORDER_QTY,
                SUM(B.UNIT_FINAL_AMT) AS UNIT_FINAL_AMT,
                0 AS ADD_QTY,
                0 AS ADD_UNIT_FINAL_AMT
            FROM TBL_CONTROL A
                INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = B.CONTROL_SEQ
                                                       AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                INNER JOIN TBL_CONTROL_CLOSE D ON A.CONTROL_SEQ = D.CONTROL_SEQ
                                                  AND D.CLOSE_MONTH = CONCAT(#{CONTROL_CLOSE_YEAR}, #{CONTROL_CLOSE_MONTH})
                                                  AND D.CLOSE_VER = #{CLOSE_VER}
            WHERE A.ORDER_COMP_CD IN (${ORDER_COMP_CD})
            GROUP BY A.ORDER_COMP_CD
            UNION ALL
            SELECT
                A.ORDER_COMP_CD,
                SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
                CONCAT(#{CONTROL_CLOSE_YEAR}, #{CONTROL_CLOSE_MONTH}) AS CLOSE_MONTH, <!-- 마감월 -->
                DATE_FORMAT(STR_TO_DATE(CONCAT(#{CONTROL_CLOSE_YEAR}, #{CONTROL_CLOSE_MONTH}), '%Y%m'), '%Y.%m월' ) AS CLOSE_MONTH_TRAN, <!-- 마감월 -->
                #{CLOSE_VER},
                SUM(C.ORDER_QTY) AS ORDER_QTY,
                SUM(B.UNIT_FINAL_AMT) AS UNIT_FINAL_AMT,
                SUM(C.ORDER_QTY) AS ADD_QTY,
                SUM(B.UNIT_FINAL_AMT) AS ADD_UNIT_FINAL_AMT
            FROM TBL_CONTROL A
                INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = B.CONTROL_SEQ
                                                       AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            WHERE A.CONTROL_SEQ IN (${CONTROL_SEQ})
            GROUP BY A.ORDER_COMP_CD
        ) X
        GROUP BY
            ORDER_COMP_CD
    </select>

    <insert id="insertMonthFinishClose" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_CLOSE (
            CLOSE_MONTH,
            CLOSE_VER,
            CONTROL_SEQ,
            CLOSE_DT
        ) VALUES (
            #{CLOSE_MONTH},
            #{CLOSE_VER},
            #{CONTROL_SEQ},
            NOW()
        ) ON DUPLICATE KEY
	        UPDATE
		        CLOSE_DT = NOW()
    </insert>

    <insert id="insertMonthFinishCloseHistory" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_CLOSE_HISTORY (
            HISTORY_SEQ,
            HISTORY_DT,
            CLOSE_MONTH,
            CLOSE_VER,
            CONTROL_SEQ
        ) VALUES (
            NEXTVAL(SEQ_CONTROL_CLOSE_HISTORY),
            NOW(),
            #{CLOSE_MONTH},
            CAST(#{CLOSE_VER} AS INTEGER),
            #{CONTROL_SEQ}
        )
    </insert>

    <insert id="insertControlMaster" parameterType="java.util.HashMap" >
        INSERT IGNORE INTO TBL_CONTROL (
            CONTROL_SEQ,
            CONTROL_NUM,
            CONTROL_VER,
            COMP_CD,
            ORDER_COMP_CD,
            ORDER_STAFF_SEQ,
            DESIGNER_NM,
            NOTE,
            MODULE_NM,
            MAIN_INSPECTION,
            EMERGENCY_YN,
            CONTROL_STATUS,
            STATUS_DT
        ) VALUES
        <foreach collection="list" item="item" separator=",">
        (
            (SELECT IFNULL(max(A.CONTROL_SEQ), NEXTVAL(SEQ_CONTROL))
            FROM TBL_CONTROL A
            WHERE A.CONTROL_NUM = #{item.CONTROL_NUM}),
            #{item.CONTROL_NUM},
            0,
            SF_GET_COMP_CD(#{item.COMP_NM}),
            SF_GET_COMP_CD(#{item.ORDER_COMP_NM}),
            SF_GET_STAFF_SEQ(#{item.ORDER_STAFF_NM}, #{item.ORDER_COMP_NM}),
            #{item.DESIGNER_NM},
            #{item.NOTE},
            #{item.MODULE_NM},
            #{item.MAIN_INSPECTION},
            #{item.EMERGENCY_YN},
            #{item.CONTROL_STATUS},
            NOW()
        )
        </foreach>
    </insert>

    <insert id="insertControlPart" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_PART (
            CONTROL_SEQ,
            CONTROL_DETAIL_SEQ,
            PART_NUM,
            DRAWING_NUM,
            DRAWING_VER,
            PREV_DRAWING_NUM,
            ITEM_NM,
            WORK_TYPE,
            OUTSIDE_YN,
            WORK_FACTORY,
            MATERIAL_SUPPLY_YN,
            INNER_DUE_DT,
            SIZE_TXT,
            SIZE_TYPE,
            SIZE_W,
            SIZE_H,
            SIZE_T,
            SIZE_D,
            SIZE_L,
            MATERIAL_DETAIL,
            MATERIAL_KIND,
            SURFACE_TREAT,
            MATERIAL_NOTE,
            PART_UNIT_QTY,
            ORIGINAL_SIDE_QTY,
            OTHER_SIDE_QTY,
            UNIT_FINAL_EST_AMT,
            UNIT_FINAL_AMT,
            PART_STATUS,
            STATUS_DT
        ) VALUES
        <foreach collection="list" item="item" separator=",">
        (
            (SELECT CONTROL_SEQ
            FROM TBL_CONTROL
            WHERE CONTROL_NUM = #{item.CONTROL_NUM}),
            NEXTVAL(SEQ_CONTROL_PART),
            (SELECT IF(#{item.PART_NUM} = '', 0, CAST(#{item.PART_NUM} AS UNSIGNED INTEGER))),
            #{item.DRAWING_NUM},
            0,
            #{item.PREV_DRAWING_NUM},
            #{item.ITEM_NM},
            (SELECT CODE_CD
            FROM TBL_CODE_LANG
            WHERE HIGH_CD = '1013'
                  AND LANG_CD = 'KR'
                  AND CODE_NM = #{item.WORK_NM}),
            #{item.OUTSIDE_YN},
            #{item.WORK_FACTORY},
            #{item.MATERIAL_SUPPLY_YN},
            #{item.INNER_DUE_DT},
            #{item.SIZE_TXT},
            SF_GET_SIZE_TXT('SIZE_TYPE', #{item.SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_W', #{item.SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_H', #{item.SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_T', #{item.SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_D', #{item.SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_L', #{item.SIZE_TXT}),
            #{item.MATERIAL_DETAIL},
            #{item.MATERIAL_KIND},
            #{item.SURFACE_TREAT},
            #{item.MATERIAL_NOTE},
            (SELECT IF(#{item.PART_UNIT_QTY} = '', NULL, CAST(#{item.PART_UNIT_QTY} AS UNSIGNED INTEGER))),
            (SELECT IF(#{item.ORIGINAL_SIDE_QTY} = '', NULL, CAST(#{item.ORIGINAL_SIDE_QTY} AS UNSIGNED INTEGER))),
            (SELECT IF(#{item.OTHER_SIDE_QTY} = '', NULL, CAST(#{item.OTHER_SIDE_QTY} AS UNSIGNED INTEGER))),
            (SELECT IF(#{item.UNIT_FINAL_EST_AMT} = '', NULL, CAST(REPLACE(#{item.UNIT_FINAL_EST_AMT}, ',', '') AS UNSIGNED INTEGER))),
            (SELECT IF(#{item.UNIT_FINAL_AMT} = '', NULL, CAST(REPLACE(#{item.UNIT_FINAL_AMT}, ',', '') AS UNSIGNED INTEGER))),
            #{item.STATUS},
            NOW()
        )
        </foreach>
    </insert>

    <insert id="insertControlPartOrder" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_PART_ORDER (
            CONTROL_SEQ,
            CONTROL_DETAIL_SEQ,
            ORDER_SEQ,
            ORDER_NUM,
            ORDER_QTY,
            ORDER_DUE_DT,
            DELIVERY_DT
            <!-- ,INSERT_ID -->
        ) VALUES
        <foreach collection="list" item="item" separator=",">
        (
            (SELECT CONTROL_SEQ
             FROM TBL_CONTROL A
             WHERE A.CONTROL_NUM = #{item.CONTROL_NUM}),
            (SELECT B.CONTROL_DETAIL_SEQ
             FROM TBL_CONTROL_PART B
                INNER JOIN TBL_CONTROL C ON B.CONTROL_SEQ = C.CONTROL_SEQ
             WHERE C.CONTROL_NUM = #{item.CONTROL_NUM}
                   AND B.CONTROL_DETAIL_SEQ NOT IN (SELECT CONTROL_DETAIL_SEQ
                                                    FROM TBL_CONTROL_PART_ORDER D
                                                    WHERE D.CONTROL_SEQ = B.CONTROL_SEQ)
             ORDER BY B.CONTROL_DETAIL_SEQ
             LIMIT 1),
            NEXTVAL(SEQ_CONTROL_PART_ORDER),
            #{item.ORDER_NUM},
            (SELECT IF(#{item.ORDER_QTY} = '', NULL, CAST(#{item.ORDER_QTY} AS UNSIGNED INTEGER))),
            #{item.ORDER_DUE_DT},
            #{item.DELIVERY_DT}
            <!-- ,NULL -->
        )
        </foreach>
    </insert>

    <insert id="insertControlProgress" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_PROGRESS (
            CONTROL_SEQ,
            SEQ,
            ORDER_STATUS,
            STATUS_DT
        ) VALUES (
            #{CONTROL_SEQ},
            NEXTVAL(SEQ_CONTROL_PROGRESS),
            #{CONTROL_STATUS},
            NOW()
        )
    </insert>

    <insert id="insertControlProgressList" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_PROGRESS (
            CONTROL_SEQ,
            SEQ,
            ORDER_STATUS,
            STATUS_DT
            <!-- ,INSERT_ID -->
        ) VALUES
        <foreach collection="list" item="item" separator=",">
        (
            (SELECT A.CONTROL_SEQ
             FROM TBL_CONTROL A
             WHERE A.CONTROL_NUM = #{item.CONTROL_NUM}),
            NEXTVAL(SEQ_CONTROL_PROGRESS),
            #{item.STATUS},
            NOW()
            <!-- ,NULL -->
        )
        </foreach>
    </insert>

    <insert id="insertControlPartProgress" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_PART_PROGRESS (
            CONTROL_SEQ,
            CONTROL_DETAIL_SEQ,
            SEQ,
            PART_STATUS,
            STATUS_DT
        <!-- ,INSERT_ID, -->
        ) VALUES (
            #{CONTROL_SEQ},
            #{CONTROL_DETAIL_SEQ},
            NEXTVAL(SEQ_CONTROL_PART_PROGRESS),
            #{PART_STATUS},
            NOW()
        )
    </insert>

    <insert id="insertControlPartProgressList" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_PART_PROGRESS (
            CONTROL_SEQ,
            CONTROL_DETAIL_SEQ,
            SEQ,
            PART_STATUS,
            STATUS_DT
        <!-- ,INSERT_ID, -->
        ) VALUES
        <foreach collection="list" item="item" separator=",">
        (
            (SELECT A.CONTROL_SEQ
            FROM TBL_CONTROL A
            WHERE A.CONTROL_NUM = #{item.CONTROL_NUM}),
            (SELECT B.CONTROL_DETAIL_SEQ
            FROM TBL_CONTROL_PART B
                INNER JOIN TBL_CONTROL C ON B.CONTROL_SEQ = C.CONTROL_SEQ
            WHERE C.CONTROL_NUM = #{item.CONTROL_NUM}
                  AND B.CONTROL_DETAIL_SEQ NOT IN (SELECT D.CONTROL_DETAIL_SEQ
                                                   FROM TBL_CONTROL_PART_PROGRESS D
                                                   WHERE D.CONTROL_SEQ = B.CONTROL_SEQ)
            ORDER BY B.CONTROL_DETAIL_SEQ
            LIMIT 1),
            NEXTVAL(SEQ_CONTROL_PART_PROGRESS),
            #{item.STATUS},
            NOW()
        )
        </foreach>
    </insert>

    <update id="updateControlMaster" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL
        SET
            CONTROL_NUM = #{CONTROL_NUM},
            CONTROL_VER = #{CONTROL_VER},
            COMP_CD = #{COMP_CD},
            ORDER_COMP_CD = #{ORDER_COMP_CD},
            ORDER_STAFF_SEQ = #{ORDER_STAFF_SEQ},
            DESIGNER_NM = #{DESIGNER_NM},
            NOTE = #{NOTE},
            MODULE_NM = #{MODULE_NM},
            MAIN_INSPECTION = #{MAIN_INSPECTION},
            EMERGENCY_YN = #{EMERGENCY_YN},
            CONTROL_STATUS = #{CONTROL_STATUS},
            STATUS_DT = NOW(),
            UPDATE_DT = NOW()
            <!-- ,UPDATE_ID = NULL -->
        WHERE
            CONTROL_SEQ = #{CONTROL_SEQ}
    </update>

    <update id="updateControlPart" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART
        SET
            PART_NUM = #{PART_NUM},
            DRAWING_NUM = #{DRAWING_NUM},
            DRAWING_VER = #{DRAWING_VER},
            PREV_DRAWING_NUM = #{PREV_DRAWING_NUM},
            ITEM_NM = #{ITEM_NM},
            WORK_TYPE = #{WORK_TYPE},
            OUTSIDE_YN = #{OUTSIDE_YN},
            WORK_FACTORY = #{WORK_FACTORY},
            MATERIAL_SUPPLY_YN = #{MATERIAL_SUPPLY_YN},
            INNER_DUE_DT = #{INNER_DUE_DT},
            SIZE_TXT = #{SIZE_TXT},
            SIZE_TYPE = SF_GET_SIZE_TXT('SIZE_TYPE', #{SIZE_TXT}),
            SIZE_W = SF_GET_SIZE_TXT('SIZE_W', #{SIZE_TXT}),
            SIZE_H = SF_GET_SIZE_TXT('SIZE_H', #{SIZE_TXT}),
            SIZE_T = SF_GET_SIZE_TXT('SIZE_T', #{SIZE_TXT}),
            SIZE_D = SF_GET_SIZE_TXT('SIZE_D', #{SIZE_TXT}),
            SIZE_L = SF_GET_SIZE_TXT('SIZE_L', #{SIZE_TXT}),
            MATERIAL_KIND = #{MATERIAL_KIND},
            MATERIAL_TYPE = #{MATERIAL_TYPE},
            MATERIAL_DETAIL = #{MATERIAL_DETAIL},
            SURFACE_TREAT = #{SURFACE_TREAT},
            MATERIAL_FINISH_HEAT = #{MATERIAL_FINISH_HEAT},
            PART_UNIT_QTY = #{PART_UNIT_QTY},
            ORIGINAL_SIDE_QTY = #{ORIGINAL_SIDE_QTY},
            OTHER_SIDE_QTY = #{OTHER_SIDE_QTY},
            PART_STATUS = #{PART_STATUS},
            STATUS_DT = NOW(),
            UPDATE_DT = NOW()
            <!--              ,UPDATE_ID #{UPDATE_ID} -->
        WHERE CONTROL_SEQ = #{CONTROL_SEQ}
              AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </update>

    <update id="updateControlPartOrder" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART_ORDER
        SET
            ORDER_NUM = #{ORDER_NUM},
            ORDER_QTY = #{ORDER_QTY},
            ORDER_DUE_DT = #{ORDER_DUE_DT},
            DELIVERY_DT = #{DELIVERY_DT},
            UPDATE_DT = NOW()
            <!-- ,UPDATE_ID = NULL -->
        WHERE CONTROL_SEQ = #{CONTROL_SEQ}
              AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
              AND ORDER_SEQ = #{ORDER_SEQ}
    </update>

    <select id="selectConfirmOrderList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <include refid="controlManage" />
        WHERE 1 = 1
            AND A.CONTROL_STATUS = 'ORD001'
            AND B.OUTSIDE_YN NOT IN ('Y')
        <if test="ORDER_COMP_CD != null and ORDER_COMP_CD != ''">
            AND A.ORDER_COMP_CD = #{ORDER_COMP_CD}
        </if>
        <if test="MATERIAL_TYPE != null and MATERIAL_TYPE != ''">
        	AND B.MATERIAL_TYPE = #{MATERIAL_TYPE}
        </if>
        GROUP BY B.CONTROL_DETAIL_SEQ
        ORDER BY
        <if test="EMERGENCY_YN != null and EMERGENCY_YN != ''">
            A.EMERGENCY_YN DESC,
        </if>
            A.CONTROL_SEQ,
            B.PART_NUM
        <choose>
            <when test="SORT_BY == 'OCM00'">
                ,C.ORDER_DUE_DT <if test="DESCENDING != null and DESCENDING != ''">DESC</if>
            </when>
            <when test="SORT_BY == 'OCM01'">
                ,B.INNER_DUE_DT <if test="DESCENDING != null and DESCENDING != ''">DESC</if>
            </when>
        </choose>
    </select>

    <update id="updateControlStatus" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL
        SET
            CONTROL_STATUS = #{CONTROL_STATUS},
            STATUS_DT = NOW(),
            UPDATE_DT = NOW()
        WHERE CONTROL_SEQ = #{CONTROL_SEQ}
    </update>

    <update id="updateControlPartStatus" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART
        SET
            PART_STATUS = #{PART_STATUS},
            STATUS_DT = NOW(),
            UPDATE_DT = NOW()
        WHERE CONTROL_SEQ = #{CONTROL_SEQ}
              AND CONTROL_DETAIL_SEQ  = #{CONTROL_DETAIL_SEQ}
    </update>

    <select id="selectProcessConfirmList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <include refid="controlManage"/>
        WHERE 1 = 1
            AND A.CONTROL_STATUS = 'ORD001'
            AND B.PART_STATUS = 'PRO002'
            AND B.WORK_TYPE NOT IN ('WTP020')
            AND B.OUTSIDE_YN NOT IN ('Y')
        <if test="ORDER_COMP_CD != null and ORDER_COMP_CD != ''">
            AND A.ORDER_COMP_CD = #{ORDER_COMP_CD}
        </if>
        <if test="MATERIAL_KIND != null and MATERIAL_KIND != ''">
            AND B.MATERIAL_KIND = #{MATERIAL_KIND}
        </if>
        ORDER BY
        <if test="EMERGENCY_YN != null and EMERGENCY_YN != ''">
            A.EMERGENCY_YN DESC,
        </if>
            A.CONTROL_SEQ,
            B.PART_NUM
        <choose>
            <when test="SORT_BY == 'OCM00'">
                ,C.ORDER_DUE_DT <if test="DESCENDING != null and DESCENDING != ''">DESC</if>
            </when>
            <when test="SORT_BY == 'OCM01'">
                ,B.INNER_DUE_DT <if test="DESCENDING != null and DESCENDING != ''">DESC</if>
            </when>
        </choose>
    </select>

    <select id="selectOutsourcingProcessingList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <include refid="controlManage"/>
        WHERE 1 = 1
              AND B.PART_STATUS = 'ORD001'
              AND B.WORK_TYPE NOT IN ('WTP020')
              AND B.OUTSIDE_YN = 'Y'
        <if test="ORDER_COMP_CD != null and ORDER_COMP_CD != ''">
            AND C.ORDER_COMP_CD = #{ORDER_COMP_CD}
        </if>
        <if test="MATERIAL_TYPE != null and MATERIAL_KIND != ''">
            AND B.MATERIAL_TYPE = #{MATERIAL_TYPE}
        </if>
        ORDER BY
            C.CONTROL_SEQ,
            B.PART_NUM
        <choose>
            <when test="SORT_BY == 'OCM00'">
                ,C.ORDER_DUE_DT <if test="DESCENDING != null and DESCENDING != ''">DESC</if>
            </when>
            <when test="SORT_BY == 'OCM01'">
                ,B.INNER_DUE_DT <if test="DESCENDING != null and DESCENDING != ''">DESC</if>
            </when>
        </choose>
    </select>

    <select id="selectControlCadFiles" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            C.CONTROL_SEQ,
            C.CONTROL_STATUS,
            B.CONTROL_DETAIL_SEQ,
            C.CONTROL_NUM, <!-- 관리번호 -->
            B.ITEM_NM, <!-- 품명 -->
            B.PART_NUM, <!-- Part -->
            B.DRAWING_NUM,
            'N' AS DEL_YN,
            #{FILE_NM} AS FILE_NM,
            #{DWG_GFILE_SEQ} AS DWG_GFILE_SEQ,
            #{DXF_GFILE_SEQ} AS DXF_GFILE_SEQ,
            #{PDF_GFILE_SEQ} AS PDF_GFILE_SEQ,
            #{IMG_GFILE_SEQ} AS IMG_GFILE_SEQ,
            #{DWG_GFILE_SIZE} AS DWG_GFILE_SIZE,
            #{DXF_GFILE_SIZE} AS DXF_GFILE_SIZE,
            #{PDF_GFILE_SIZE} AS PDF_GFILE_SIZE,
            #{IMG_GFILE_SIZE} AS IMG_GFILE_SIZE,
            CASE WHEN C.CONTROL_STATUS = 'ORD001' THEN '확정완료 대상은 업로드 불가'  <!-- 상태완료 이후인 경우는 업로드 불가  -->
                WHEN IMG_GFILE_SEQ IS NOT NULL THEN '이미 등록됨, Save 후 교체됨.'  <!-- 이미 등록된 Save시 교체 진행  메시지 처리 -->
                ELSE ''
            END AS UPLOAD_MESSAGE
        FROM TBL_CONTROL C
            INNER JOIN TBL_CONTROL_PART B ON C.CONTROL_SEQ = B.CONTROL_SEQ
        WHERE 1 = 1
            AND IFNULL(C.CONTROL_STATUS, 'ORD002') IN ('ORD001', 'ORD002')
            AND #{ORGINAL_FILE_NM} LIKE CONCAT(B.DRAWING_NUM, '%')
    </select>

    <select id="selectCloseHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <include refid="controlManage"/>
        WHERE 1 = 1
            AND A.CONTROL_STATUS = 'ORD003'
        <if test="COMP_CD != null and COMP_CD != ''">
            AND A.COMP_CD = #{COMP_CD}
        </if>
        <if test="ORDER_COMP_CD != null and ORDER_COMP_CD != ''">
            AND A.ORDER_COMP_CD = #{ORDER_COMP_CD}
        </if>
        <if test="DRAWING_NUM != null and DRAWING_NUM != ''">
            AND B.DRAWING_NUM = #{DRAWING_NUM}
        </if>
        <if test="ITEM_NM != null and ITEM_NM != ''">
            AND B.ITEM_NM = #{ITEM_NM}
        </if>
        <if test="MATERIAL_KIND != null and MATERIAL_KIND != ''">
            AND B.MATERIAL_KIND = #{MATERIAL_KIND}
        </if>
        <if test="CONTROL_SEQ != null and CONTROL_SEQ != ''">
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
        </if>
        <if test="MODULE_NM != null and MODULE_NM != ''">
            AND A.C.MODULE_NM = #{MODULE_NM}
        </if>
        ORDER BY
        <if test="EMERGENCY_YN != null and EMERGENCY_YN != ''">
            A.EMERGENCY_YN DESC,
        </if>
        A.CONTROL_SEQ,
        B.PART_NUM
        <choose>
            <when test="SORT_BY == 'OCM00'">
                ,C.ORDER_DUE_DT <if test="DESCENDING != null and DESCENDING != ''">DESC</if>
            </when>
            <when test="SORT_BY == 'OCM01'">
                ,B.INNER_DUE_DT <if test="DESCENDING != null and DESCENDING != ''">DESC</if>
            </when>
        </choose>
    </select>

    <select id="selectSalesClosingHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.COMP_CD,
            SF_GET_COMP_NM(A.COMP_CD) AS COMP_NM,
            SUBSTR(D.CLOSE_MONTH, 1, 4) AS YEAR,
            CASE
                <![CDATA[
                WHEN CAST(SUBSTR(D.CLOSE_MONTH, 5) AS INTEGER) <= 3 THEN '1분기'
                WHEN CAST(SUBSTR(D.CLOSE_MONTH, 5) AS INTEGER) <= 6 THEN '2분기'
                WHEN CAST(SUBSTR(D.CLOSE_MONTH, 5) AS INTEGER) <= 9 THEN '3분기'
                WHEN CAST(SUBSTR(D.CLOSE_MONTH, 5) AS INTEGER) <= 12 THEN '4분기'
                ]]>
            END AS QUATER,
            CONCAT(SUBSTR(D.CLOSE_MONTH, 5), '월') AS FINISH_MONTH,
            CONCAT(D.CLOSE_VER, '차') AS CLOSE_VER, <!-- 차수 -->
            A.ORDER_COMP_CD,
            SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
            SUM(C.ORDER_QTY) AS ITEM_NUMBER,
            SUM(B.UNIT_FINAL_AMT) AS UNIT_FINAL_AMT,
            SUM(B.UNIT_FINAL_AMT) * 0.1 AS VAT_AMOUNT,
            SUM(B.UNIT_FINAL_AMT) + SUM(B.UNIT_FINAL_AMT) * 0.1 AS TOTAL_AMOUNT,
            D.CLOSE_NOTE
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ
                                                   AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_CONTROL_CLOSE D ON A.CONTROL_SEQ = D.CONTROL_SEQ
        GROUP BY
            A.COMP_CD,
            A.ORDER_COMP_CD,
            D.CLOSE_MONTH, <!-- 마감월 -->
            D.CLOSE_VER
    </select>

    <select id="selectMonthSaleStatusList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.COMP_CD,
            A.COMP_NM,
            B.COMP_CD AS ORDER_COMP_CD,
            B.COMP_NM AS ORDER_COMP_NM,
            C.YYYY,
            C.MM,
            QUARTER(C.DT) AS QUARTER,
            X.OUTPUT_AMT, <!-- 매출현황 -->
            Y.DEPOSIT_AMT <!-- 입금현황 -->
        FROM TBL_COMPANY A
            INNER JOIN TBL_COMPANY B ON B.ORDER_COMPANY_YN = 'Y'
            CROSS JOIN TBL_YYYYMMDD C
            <!-- 매출현황 -->
            LEFT OUTER JOIN (SELECT
                                 C.CLOSE_MONTH,
                                 A.COMP_CD,
                                 A.ORDER_COMP_CD,
                                 SUM(B.UNIT_FINAL_AMT * D.ORDER_QTY) AS OUTPUT_AMT
                             FROM TBL_CONTROL A
                                 INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                                 INNER JOIN TBL_CONTROL_CLOSE C ON B.CONTROL_SEQ = C.CONTROL_SEQ
                                 INNER JOIN TBL_CONTROL_PART_ORDER D ON B.CONTROL_SEQ = D.CONTROL_SEQ
                                                                        AND B.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
                             GROUP BY A.COMP_CD,
                                      A.ORDER_COMP_CD) X ON A.COMP_CD = X.COMP_CD
                                                            AND B.COMP_CD = X.ORDER_COMP_CD
                                                            AND CONCAT(C.YYYY, C.MM) = X.CLOSE_MONTH
            <!-- 입금현황 -->
            LEFT OUTER JOIN(SELECT
                                COMP_CD,
                                ORDER_COMP_CD,
                                SUBSTR(DATE_FORMAT(STR_TO_DATE(DEPOSIT_DT, '%Y%m%d'), '%Y%m%d'), 1, 4) AS YEAR,
                                SUBSTR(DATE_FORMAT(STR_TO_DATE(DEPOSIT_DT, '%Y%m%d'), '%Y%m%d'), 5, 2) AS MONTH,
                                DEPOSIT_AMT
                            FROM TBL_MONEY_DEPOSIT) Y ON A.COMP_CD = Y.COMP_CD
                                                         AND B.COMP_CD = Y.ORDER_COMP_CD
                                                         AND C.YYYY = Y.YEAR
                                                         AND C.MM = Y.MONTH
        WHERE
            A.FAMILY_COMPANY_YN = 'Y'
            AND C.YYYY = 2020
        GROUP BY
            A.COMP_CD,
            B.COMP_CD,
            C.YYYY,
            C.MM
    </select>

</mapper>