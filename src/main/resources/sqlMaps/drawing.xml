<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="drawingMapper">

    <select id="selectDrawingAreaList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        	A.CODE_CD, B.CODE_NM
        FROM TBL_CODE A
        	INNER JOIN TBL_CODE_LANG B ON A.HIGH_CD = B.HIGH_CD AND A.CODE_CD = B.CODE_CD AND B.LANG_CD = CASE WHEN UPPER(#{LOGIN_LOCALE}) = 'KO' THEN 'KR' ELSE 'EN' END
        WHERE 1 = 1
        	AND A.HIGH_CD = '1005'
        	AND A.ETC3 = 'D'
        ORDER BY A.SORT_NUM
    </select>

    <select id="selectDrawingEquipment" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT EQUIP_SEQ, EQUIP_NM, FACTORY_AREA
        FROM TBL_EQUIP
        WHERE 1 = 1
            AND EQUIP_KIND = '1'
          	AND PROCESS_TYPE IN ('MPR010', 'MPR020', 'MPR030', 'MPR040')
            AND DEL_YN ='N'
            AND FACTORY_AREA = #{FACTORY_AREA}
    </select>

    <select id="selectDrawingWorkerGroupList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.CODE_CD, B.CODE_NM
        FROM TBL_CODE A
            INNER JOIN TBL_CODE_LANG B ON A.HIGH_CD = B.HIGH_CD AND A.CODE_CD = B.CODE_CD AND B.LANG_CD = CASE WHEN UPPER(#{LOGIN_LOCALE}) = 'KO' THEN 'KR' ELSE 'EN' END
        WHERE 1 = 1
            AND A.HIGH_CD = '1061'
        ORDER BY A.SORT_NUM
    </select>

    <select id="selectDrawingErrorReasonList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.CODE_CD, B.CODE_NM
        FROM TBL_CODE A
            INNER JOIN TBL_CODE_LANG B ON A.HIGH_CD = B.HIGH_CD AND A.CODE_CD = B.CODE_CD AND B.LANG_CD = CASE WHEN UPPER(#{LOGIN_LOCALE}) = 'KO' THEN 'KR' ELSE 'EN' END
        WHERE 1 = 1
            AND A.HIGH_CD = '1015'
        ORDER BY A.SORT_NUM
    </select>



    <select id="selectDrawingUser" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.USER_ID, A.USER_NM, IFNULL(A.PHOTO_GFILE_SEQ, SPACE(0)) AS PHOTO_GFILE_SEQ
        FROM TBL_USER A
        WHERE 1=1
            AND A.DEPARTMENT = #{DEPARTMENT}
    </select>

    <select id="selectDrawingBoardLastWork" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        -- 최근 작업 내용
        SELECT
            'LAST' AS DATA_TYPE, A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.MCT_WORK_SEQ,
        	SF_GET_DRAWING_WORK_TIME('WORK', A.MCT_WORK_SEQ) AS WORK_TIME,
        	SF_GET_DRAWING_WORK_TIME('STOP', A.MCT_WORK_SEQ) AS STOP_TIME,
        	CASE WHEN D.EMERGENCY_YN = 'Y' THEN D.EMERGENCY_YN ELSE SPACE(0) END AS EMERGENCY_YN, -- 긴급 -->
        	CASE WHEN D.MAIN_INSPECTION = 'Y' THEN D.MAIN_INSPECTION ELSE SPACE(0) END AS MAIN_INSPECTION, -- 주요 검사품 -->
        	IFNULL(jmes.SF_GET_DATE_F(A.WORK_START_DT, '', 'M'), SPACE(0)) AS WORK_START_DT,
        	IFNULL(jmes.SF_GET_DATE_F(A.WORK_FINISH_DT, '', 'M'), SPACE(0)) AS WORK_FINISH_DT,
        	D.CONTROL_NUM,
        	IFNULL(C.PART_NUM, SPACE(0)) AS PART_NUM, -- PART 번호 -->
        	jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS ORDER_QTY, -- 수량 -->
        	jmes.SF_GET_DATE_F(C.INNER_DUE_DT, '', '') AS INNER_DUE_DT, -- 내부가공납기 -->
        	E.NOTE, F.BARCODE_NUM
        FROM TBL_MCT_WORK A
            INNER JOIN TBL_CONTROL_PART C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_CONTROL D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND D.DEL_YN = 'N'
            INNER JOIN TBL_CONTROL_BARCODE F ON C.CONTROL_SEQ = F.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ
                        	AND F.CONTROL_VER = D.CONTROL_VER AND IFNULL(C.DRAWING_VER, SPACE(0)) = IFNULL(F.DRAWING_VER, SPACE(0))
            LEFT OUTER JOIN TBL_CAM E ON C.CONTROL_SEQ = E.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
        	AND A.MCT_WORK_SEQ = (SELECT MAX(H.MCT_WORK_SEQ) FROM TBL_MCT_WORK H
        							WHERE A.EQUIP_SEQ = H.EQUIP_SEQ AND H.DEL_YN = 'N' AND H.WORK_FINISH_DT IS NOT NULL
        								AND H.WORK_START_DT IS NOT NULL)
        	AND A.DEL_YN = 'N'
        	AND A.WORK_START_DT IS NOT NULL
        	AND A.WORK_FINISH_DT IS NOT NULL
            AND A.EQUIP_SEQ = #{EQUIP_SEQ}
    </select>

    <select id="selectDrawingBoardCurrentWork" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        -- 현재 작업 진행 중 내용
        SELECT
            'CUR' AS DATA_TYPE, A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.MCT_WORK_SEQ,
            SF_GET_DRAWING_WORK_TIME('WORK', A.MCT_WORK_SEQ) AS WORK_TIME,
            SF_GET_DRAWING_WORK_TIME('STOP', A.MCT_WORK_SEQ) AS STOP_TIME,
            CASE WHEN D.EMERGENCY_YN = 'Y' THEN D.EMERGENCY_YN ELSE SPACE(0) END AS EMERGENCY_YN, -- 긴급 -->
            CASE WHEN D.MAIN_INSPECTION = 'Y' THEN D.MAIN_INSPECTION ELSE SPACE(0) END AS MAIN_INSPECTION, -- 주요 검사품 -->
            IFNULL(jmes.SF_GET_DATE_F(A.WORK_START_DT, '', 'M'), SPACE(0)) AS WORK_START_DT,
            IFNULL(jmes.SF_GET_DATE_F(A.WORK_FINISH_DT, '', 'M'), SPACE(0)) AS WORK_FINISH_DT,
            D.CONTROL_NUM,
            IFNULL(C.PART_NUM, SPACE(0)) AS PART_NUM, -- PART 번호 -->
            jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS ORDER_QTY, -- 수량 -->
            jmes.SF_GET_DATE_F(C.INNER_DUE_DT, '', '') AS INNER_DUE_DT, -- 내부가공납기 -->
            E.NOTE, F.BARCODE_NUM
        FROM TBL_MCT_WORK A
            INNER JOIN TBL_CONTROL_PART C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_CONTROL D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND D.DEL_YN = 'N'
            INNER JOIN TBL_CONTROL_BARCODE F ON C.CONTROL_SEQ = F.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ
                                    	AND F.CONTROL_VER = D.CONTROL_VER AND IFNULL(C.DRAWING_VER, SPACE(0)) = IFNULL(F.DRAWING_VER, SPACE(0))
            LEFT OUTER JOIN TBL_CAM E ON C.CONTROL_SEQ = E.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
            AND A.MCT_WORK_SEQ = (SELECT MAX(H.MCT_WORK_SEQ) FROM TBL_MCT_WORK H
                                    WHERE A.EQUIP_SEQ = H.EQUIP_SEQ AND H.DEL_YN = 'N' AND H.WORK_FINISH_DT IS NULL
                                        AND H.WORK_START_DT IS NOT NULL)
            AND A.DEL_YN = 'N'
            AND A.WORK_START_DT IS NOT NULL
            AND A.WORK_FINISH_DT IS NULL
            AND A.EQUIP_SEQ = #{EQUIP_SEQ}
    </select>

    <select id="selectDrawingBoardWorkPlanList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        	A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ,
        	C.CONTROL_NUM, -- 관리 번호 -->
        	IFNULL(D.PART_NUM, SPACE(0)) AS PART_NUM, -- PART 번호 -->
            jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS ORDER_QTY, -- 수량 -->
            jmes.SF_GET_DATE_F(D.INNER_DUE_DT, '', '') AS INNER_DUE_DT -- 내부가공납기 -->
        FROM jmes.TBL_MCT_PLAN A
        	INNER JOIN jmes.TBL_EQUIP B ON A.EQUIP_SEQ = B.EQUIP_SEQ AND B.EQUIP_KIND = '1'
                  	AND B.PROCESS_TYPE IN ('MPR010', 'MPR020', 'MPR030', 'MPR040')
                    AND B.DEL_YN ='N'
           	INNER JOIN jmes.TBL_CONTROL C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND C.DEL_YN = 'N'
           	INNER JOIN jmes.TBL_CONTROL_PART D ON A.CONTROL_SEQ = D.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
        WHERE A.EQUIP_SEQ = #{EQUIP_SEQ}
        	AND A.DEL_YN = 'N'
    </select>

    <select id="selectDrawingBoardPopList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ,
            B.CONTROL_NUM, -- 관리 번호 -->
            IFNULL(A.PART_NUM, SPACE(0)) AS PART_NUM, -- PART 번호 -->
            jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS ORDER_QTY, -- 수량 -->
            jmes.SF_GET_DATE_F(A.INNER_DUE_DT, '', '') AS INNER_DUE_DT -- 내부가공납기 -->
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_POP C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                AND C.POP_SEQ = (SELECT MAX(E.POP_SEQ) FROM TBL_POP E WHERE C.CONTROL_SEQ = E.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ) -- 현재 POP -->
            INNER JOIN jmes.TBL_CODE D ON D.HIGH_CD = '1009' AND C.POP_POSITION = D.CODE_CD AND D.DEL_YN = 'N'
            	AND D.REF_CD = #{FACTORY_AREA}
        WHERE 1=1
    </select>

    <insert id="insertMctWorkStart"  parameterType="java.util.HashMap" >
        INSERT INTO jmes.TBL_MCT_WORK
            (MCT_WORK_SEQ, EQUIP_SEQ, CONTROL_SEQ, CONTROL_DETAIL_SEQ, WORK_USER_ID, WORK_STATUS, WORK_START_DT, WORK_RESTART_DT, DEL_YN, INSERT_ID)
        VALUES
            (NEXTVAL(SEQ_MCT_WORK), #{machineInfo.EQUIP_SEQ}, #{CONTROL_SEQ}, #{CONTROL_DETAIL_SEQ}, #{userInfo.USER_ID}, #{WORK_STATUS}, NOW(), NOW(), 'N', #{userInfo.USER_ID})
    </insert>


    <update id="updateMctWork"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_MCT_WORK
        SET
            WORK_STATUS = #{WORK_STATUS},
            <if test="DEL_YN != null and DEL_YN != ''">
                DEL_YN = #{DEL_YN},
            </if>
            UPDATE_DT = NOW(),
            UPDATE_ID = #{userInfo.USER_ID}
        WHERE 1 = 1
            AND DEL_YN = 'N'
            AND MCT_WORK_SEQ = #{MCT_WORK_SEQ}
    </update>

    <update id="updateStopMctWork"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_MCT_WORK
        SET
            WORK_TEMP_STOP_DT = NOW(),
            WORK_RESTART_DT = NULL,
            WORK_STATUS = #{WORK_STATUS},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{userInfo.USER_ID}
        WHERE 1 = 1
            AND DEL_YN = 'N'
            AND MCT_WORK_SEQ = #{MCT_WORK_SEQ}
    </update>

    <update id="updateRestartMctWork"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_MCT_WORK
        SET
            WORK_RESTART_DT = NOW(),
            WORK_TEMP_STOP_DT = NULL,
            WORK_STATUS = #{WORK_STATUS},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{userInfo.USER_ID}
        WHERE 1 = 1
            AND DEL_YN = 'N'
            AND MCT_WORK_SEQ = #{MCT_WORK_SEQ}
    </update>

    <update id="updateCompleteMctWork"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_MCT_WORK
        SET
            WORK_FINISH_DT = NOW(),
            WORK_TEMP_STOP_DT = NULL,
            WORK_STATUS = #{WORK_STATUS},
            FINISH_QTY = #{FINISH_QTY},
            ERROR_QTY = #{ERROR_QTY},
            ERROR_REASON = #{ERROR_REASON},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{userInfo.USER_ID}
        WHERE 1 = 1
            AND DEL_YN = 'N'
            AND MCT_WORK_SEQ = #{MCT_WORK_SEQ}
    </update>

    <insert id="insertMctWorkTime"  parameterType="java.util.HashMap" >
        INSERT INTO jmes.TBL_MCT_WORK_TIME
            (MCT_WORK_SEQ, SEQ, WORK_START_DT, WORK_STOP_DT, INSERT_ID)
        SELECT
            A.MCT_WORK_SEQ, NEXTVAL(SEQ_MCT_WORK_TIME), A.WORK_RESTART_DT, NOW(), #{userInfo.USER_ID}
        FROM jmes.TBL_MCT_WORK A
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            AND A.MCT_WORK_SEQ = #{MCT_WORK_SEQ}
    </insert>

    <update id="deleteFristMctPlan"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_MCT_PLAN A
            SET
                A.DEL_YN = 'Y',
                A.UPDATE_DT = NOW(),
                A.UPDATE_ID = #{userInfo.USER_ID}
        WHERE 1 = 1
            AND IFNULL(A.DEL_YN, 'N') = 'N'
            <!-- AND A.EQUIP_SEQ = #{machineInfo.EQUIP_SEQ} -->
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
            AND A.MCT_PLAN_SEQ = (SELECT MIN(B.MCT_PLAN_SEQ) FROM jmes.TBL_MCT_PLAN B WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
                        AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND IFNULL(B.DEL_YN, 'N') = 'N')
    </update>

    <insert id="createDrawingBoardControlPartProgress" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_PART_PROGRESS (
            CONTROL_SEQ,
            CONTROL_DETAIL_SEQ,
            SEQ,
            PART_STATUS,
            STATUS_DT,
            INSERT_ID
        ) VALUES (
            #{CONTROL_SEQ},
            #{CONTROL_DETAIL_SEQ},
            NEXTVAL(SEQ_CONTROL_PART_PROGRESS),
            #{PART_STATUS},
            NOW(),
            #{userInfo.USER_ID}
        )
    </insert>

    <update id="updateDrawingBoardControlPartStatusMapping" parameterType="java.util.HashMap" >
        UPDATE TBL_CONTROL_PART A
            INNER JOIN  TBL_CONTROL_PART_PROGRESS B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                AND B.SEQ = (SELECT MAX(C.SEQ) FROM TBL_CONTROL_PART_PROGRESS C WHERE C.CONTROL_SEQ = B.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ)
        SET
            A.PART_STATUS = B.PART_STATUS,
            A.STATUS_DT = B.STATUS_DT,
            A.UPDATE_DT = NOW(),
            A.UPDATE_ID = #{userInfo.USER_ID}
        WHERE 1 = 1
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND A.CONTROL_DETAIL_SEQ  = #{CONTROL_DETAIL_SEQ}
    </update>

    <!-- Barcode 스캔 이후 정보를 이용하여 작업 시작, 및 작업 종료 처리 한다. -->
    <select id="selectDrawingBarcodeScanInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, B.CONTROL_NUM, -- 관리 번호 -->
            IFNULL(A.PART_NUM, SPACE(0)) AS PART_NUM, -- PART 번호 -->
            jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS ORDER_QTY, -- 수량 -->
            jmes.SF_GET_DATE_F(A.INNER_DUE_DT, '', '') AS INNER_DUE_DT -- 내부가공납기 -->
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.CONTROL_STATUS = 'ORD001' <!-- 주문확정 -->
                AND B.OUT_FINISH_DT IS NULL
            INNER JOIN TBL_CONTROL_BARCODE C ON C.CONTROL_SEQ = A.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ AND C.CONTROL_VER = B.CONTROL_VER
            	AND IFNULL(C.DRAWING_VER, SPACE(0)) = IFNULL(A.DRAWING_VER, SPACE(0)) AND C.BARCODE_NUM = #{BARCODE_NUM}
        WHERE 1 = 1
            AND A.PART_STATUS NOT IN ('PRO001', 'PRO003', 'PRO004', 'PRO012', 'PRO014')
   </select>

</mapper>