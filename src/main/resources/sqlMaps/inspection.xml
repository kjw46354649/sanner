<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="inspection">

    <select id="selectInspectionList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT T.*
        FROM (  SELECT X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ, X.MCT_WORK_SEQ, X.INSPECT_SEQ,
                Z.INSPECT_TYPE, Z.INSPECT_GRADE
        , jmes.SF_GET_DATE_F(X.INNER_DUE_DT,'YY','') AS INNER_DUE_DT
        , jmes.SF_GET_CODE_NM('1009', X.POP_SEQ, 'KR') AS POP_NM
        , ( SELECT M.COMP_NM FROM jmes.TBL_COMPANY M WHERE M.COMP_CD = X.OUTSIDE_COMP_CD) AS OUTSIDE_COMP_NM
        , jmes.SF_GET_CODE_NM('1013', X.PART_STATUS, 'KR') AS PART_STATUS_NM
        , X.CONTROL_NUM
        , X.PART_NUM
        , X.DRAWING_NUM
        , jmes.SF_GET_CODE_NM('1027', X.MATERIAL_DETAIL, 'KR') AS MATERIAL_DETAIL_NM
        , jmes.SF_GET_CODE_NM('1033', X.WORK_TYPE, 'KR') AS WORK_TYPE_NM
        , jmes.SF_GET_CODE_NM('1035', X.MATERIAL_TYPE, 'KR') AS MATERIAL_TYPE_NM
        , ( SELECT SUM(M.ORDER_QTY) * X.PART_UNIT_QTY
            FROM jmes.TBL_CONTROL_PART_ORDER M
            WHERE M.CONTROL_SEQ = X.CONTROL_SEQ
            AND M.CONTROL_DETAIL_SEQ = X.CONTROL_DETAIL_SEQ
          ) AS ORDER_QTY
        , X.SIZE_TXT
        , jmes.SF_GET_DATE_F(Y.WORK_START_DT,'YY','M') AS MCT_WORK_DT        -- 변경 확인필요
        , (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = Y.WORK_USER_ID) AS WORK_USER_NM
        , (SELECT M.EQUIP_NM FROM jmes.TBL_EQUIP M WHERE M.EQUIP_SEQ = Y.EQUIP_SEQ) AS EQUIP_NM
        , (SELECT NOTE FROM jmes.TBL_CAM M WHERE M.CONTROL_SEQ = X.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = X.CONTROL_DETAIL_SEQ) AS CAM_NOTE
        , X.NOTE
        , (SELECT COUNT(*) FROM jmes.TBL_INSPECT M WHERE M.CONTROL_SEQ = X.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = X.CONTROL_DETAIL_SEQ) AS Q_SEQ
        , (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = Z.INSPECT_USER_ID) AS Q_INSPECT_USER_NM
        , jmes.SF_GET_CODE_NM('1060', Z.INSPECT_METHOD, 'KR') AS Q_INSPECT_METHOD_NM
        , jmes.SF_GET_CODE_NM('1040', Z.INSPECT_GRADE, 'KR') AS Q_INSPECT_GRADE_NM
        , (SELECT NOTE FROM jmes.TBL_CODE WHERE HIGH_CD = '1040' AND CODE_CD = Z.INSPECT_GRADE) AS Q_INSPECT_GRADE_NOTE
        , Z.ERROR_QTY AS Q_ERROR_QTY
        , CASE WHEN Z.INSPECT_TYPE = '2' THEN jmes.SF_GET_DATE_F(Z.INSERT_DT,'YY','') END AS Q_RETURN_DT
        , CASE WHEN Z.INSPECT_TYPE = '1' THEN CASE WHEN Z.INSPECT_GRADE = 'GRD040' THEN jmes.SF_GET_CODE_NM('1020', Z.INSPECT_RESULT, 'KR') ELSE jmes.SF_GET_CODE_NM('1019', Z.INSPECT_RESULT, 'KR') END
            WHEN Z.INSPECT_TYPE = '2' THEN jmes.SF_GET_CODE_NM('1021', Z.INSPECT_RESULT, 'KR')
            END AS Q_INSPECT_RESULT_NM
        , Z.INSPECT_DESC AS Q_INSPECT_DESC
        , jmes.SF_GET_CODE_NM('1010', Z.ERROR_PROCESS, 'KR') AS Q_ERROR_PROCESS_NM
        , jmes.SF_GET_CODE_NM('1032', Z.ERROR_REASON, 'KR') AS Q_ERROR_REASON_NM
        , jmes.SF_GET_CODE_NM('1025', Z.ERROR_ACTION, 'KR') AS Q_ERROR_ACTION_NM
        , Z.ERROR_NOTE AS Q_ERROR_NOTE
        , jmes.SF_GET_DATE_F(Z.INSERT_DT,'YY','M') AS Q_DT
        FROM (  SELECT B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ
                , B.INNER_DUE_DT, B.OUTSIDE_COMP_CD, B.PART_STATUS
                , A.CONTROL_NUM, B.PART_NUM, B.DRAWING_NUM
                , B.MATERIAL_DETAIL, B.WORK_TYPE, B.MATERIAL_TYPE
                , B.PART_UNIT_QTY, B.SIZE_TXT, A.NOTE
                , (SELECT MAX(M.MCT_WORK_SEQ) FROM jmes.TBL_MCT_WORK M WHERE M.CONTROL_SEQ = B.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND M.DEL_YN = 'N') AS MCT_WORK_SEQ
                , (SELECT MAX(M.INSPECT_SEQ) FROM jmes.TBL_INSPECT M WHERE M.CONTROL_SEQ = B.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ) AS INSPECT_SEQ
                , (SELECT MAX(M.POP_SEQ) FROM jmes.TBL_POP M WHERE M.CONTROL_SEQ = B.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ) AS POP_SEQ
                FROM jmes.TBL_CONTROL A
                , jmes.TBL_CONTROL_PART B
                WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
                AND A.DEL_YN = 'N'
                AND B.PART_STATUS IN ('PRO009','PRO010','PRO011')  -- 상태확인 필요
                <if test="SEL_ORDER_COMP_CD !='' and SEL_ORDER_COMP_CD != null">
                    AND A.ORDER_COMP_CD = #{SEL_ORDER_COMP_CD}
                </if>
                <if test="SEL_CONTROL_NUM !='' and SEL_CONTROL_NUM != null">
                    AND A.CONTROL_NUM LIKE CONCAT('%', #{SEL_CONTROL_NUM}, '%')
                </if>
                <if test="SEL_DRAWING_NUM !='' and SEL_DRAWING_NUM != null">
                    AND B.DRAWING_NUM = #{SEL_DRAWING_NUM}
                </if>
                <if test="SEL_OUTSIDE_COMP_CD !='' and SEL_OUTSIDE_COMP_CD != null">
                    AND B.OUTSIDE_COMP_CD = #{SEL_OUTSIDE_COMP_CD}
                </if>
                <if test="SEL_OUTSIDE_YN or SEL_OUTSIDE_YN == true">
                    AND IFNULL(B.OUTSIDE_YN,0) = 'N'  -- 외주대상 제외 체크하면
                </if>
        ) X LEFT OUTER JOIN jmes.TBL_MCT_WORK Y ON Y.MCT_WORK_SEQ = X.MCT_WORK_SEQ
        LEFT OUTER JOIN jmes.TBL_INSPECT Z ON Z.INSPECT_SEQ = X.INSPECT_SEQ
        ) T
        WHERE 1=1
        <if test="SEL_POP_SEQ !='' and SEL_POP_SEQ != null">
            AND X.POP_SEQ = #{SEL_POP_SEQ}
        </if>
        <if test="SEL_INSPECT_GRADE or SEL_INSPECT_GRADE == true">
            AND (T.INSPECT_GRADE IS NULL OR T.INSPECT_GRADE NOT IN ('GRD010','GRD020','GRD030'))  -- 검사완료품 제외를 체크하면
        </if>
        ORDER BY T.INNER_DUE_DT, T.CONTROL_SEQ, T.CONTROL_DETAIL_SEQ
    </select>
    <select id="selectInspectionPopInfoBasic" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ
          , A.CONTROL_NUM
          , B.DRAWING_NUM
          , CONCAT(jmes.SF_GET_DATE_F(B.INNER_DUE_DT,'YYYY',''), CASE WHEN A.EMERGENCY_YN = 'Y' THEN ' (긴급)' ELSE ' ' END) AS INNER_DUE_DT
          , B.ITEM_NM
          , jmes.SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, 'KR') AS MATERIAL_DETAIL_NM
          , ( SELECT SUM(M.ORDER_QTY) * IFNULL(B.PART_UNIT_QTY,1)
              FROM jmes.TBL_CONTROL_PART_ORDER M
              WHERE M.CONTROL_SEQ = B.CONTROL_SEQ
                AND M.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
            ) AS ORDER_QTY
          , B.SIZE_TXT
          , jmes.SF_GET_CODE_NM('1039', B.SURFACE_TREAT, 'KR') AS SURFACE_TREAT_NM
          , jmes.SF_GET_CODE_NM('1033', B.WORK_TYPE, 'KR') AS WORK_TYPE_NM
          , jmes.SF_GET_CODE_NM('1013', B.PART_STATUS, 'KR') AS PART_STATUS_NM
          , ( SELECT M.COMP_NM
              FROM jmes.TBL_COMPANY M
              WHERE M.COMP_CD = A.ORDER_COMP_CD
            ) AS ORDER_COMP_NM
          , ( SELECT M.COMP_NM
              FROM jmes.TBL_COMPANY M
              WHERE M.COMP_CD = B.OUTSIDE_COMP_CD
            ) AS OUTSIDE_COMP_NM
          , (SELECT COUNT(*) + 1 FROM jmes.TBL_INSPECT M WHERE M.CONTROL_SEQ = B.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ) AS Q_SEQ
        FROM jmes.TBL_CONTROL A
          , jmes.TBL_CONTROL_PART B
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
          AND B.CONTROL_SEQ = #{CONTROL_SEQ}
            AND B.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </select>
    <select id="selectInspectionPopInfoList1" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select 1 from dual
    </select>
    <select id="selectInspectionPopInfoList2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ROW_NUMBER() OVER(ORDER BY A.INSPECT_SEQ) AS Q_SEQ
          , (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = A.INSPECT_USER_ID) AS Q_INSPECT_USER_NM
          , jmes.SF_GET_CODE_NM('1060', A.INSPECT_METHOD, 'KR') AS Q_INSPECT_METHOD_NM
          , CASE WHEN A.INSPECT_TYPE = '2' THEN jmes.SF_GET_DATE_F(A.INSERT_DT,'YY','M') END AS Q_RETURN_DT
          , (SELECT NOTE FROM jmes.TBL_CODE WHERE HIGH_CD = '1040' AND CODE_CD = A.INSPECT_GRADE) AS Q_INSPECT_GRADE_NOTE
          , CASE WHEN A.INSPECT_TYPE = '1' THEN ( SELECT IFNULL(SUM(N.ORDER_QTY) * M.PART_UNIT_QTY,0)
                                                  FROM jmes.TBL_CONTROL_PART M, jmes.TBL_CONTROL_PART_ORDER N
                                                  WHERE M.CONTROL_SEQ = N.CONTROL_SEQ
                                                    AND M.CONTROL_DETAIL_SEQ = N.CONTROL_DETAIL_SEQ
                                                    AND M.CONTROL_SEQ = #{CONTROL_SEQ}
                                                    AND M.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
                                                ) - IFNULL(A.ERROR_QTY,0)
            END AS Q_OK_QTY
          , A.ERROR_QTY AS Q_ERROR_QTY
          , CASE WHEN A.INSPECT_TYPE = '1' THEN CASE WHEN A.INSPECT_GRADE = 'GRD040' THEN jmes.SF_GET_CODE_NM('1020', A.INSPECT_RESULT, 'KR') END
                 WHEN A.INSPECT_TYPE = '2' THEN jmes.SF_GET_CODE_NM('1021', A.INSPECT_RESULT, 'KR')
            END AS Q_INSPECT_RESULT_NM
          , A.INSPECT_DESC AS Q_INSPECT_DESC
          , jmes.SF_GET_CODE_NM('1032', A.ERROR_REASON, 'KR') AS Q_ERROR_REASON_NM
          , jmes.SF_GET_CODE_NM('1025', A.ERROR_ACTION, 'KR') AS Q_ERROR_ACTION_NM
          , A.ERROR_NOTE AS Q_ERROR_NOTE
          , jmes.SF_GET_DATE_F(A.INSERT_DT,'YY','M') AS Q_DT
        FROM jmes.TBL_INSPECT A
        WHERE A.CONTROL_SEQ = #{CONTROL_SEQ}
          AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
        ORDER BY 1 DESC
    </select>
    <insert id="insertInspectionMaster" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_INSPECT (INSPECT_SEQ, CONTROL_SEQ, CONTROL_DETAIL_SEQ
                                      , INSPECT_METHOD, INSPECT_USER_ID, INSPECT_GRADE, INSPECT_RESULT, INSPECT_DESC
                                      , ERROR_QTY, ERROR_PROCESS, ERROR_REASON, ERROR_ACTION, ERROR_NOTE
                                      , INSERT_ID, INSPECT_TYPE )
        VALUES (    NEXTVAL(SEQ_INSPECT)
                  , #{CONTROL_SEQ}, #{CONTROL_DETAIL_SEQ}
                  , #{INSPECT_METHOD}, #{INSPECT_USER_ID}, #{INSPECT_GRADE}, #{INSPECT_RESULT}, #{INSPECT_DESC}
                  , #{ERROR_QTY}, #{ERROR_PROCESS}, #{ERROR_REASON}, #{ERROR_ACTION}, #{ERROR_NOTE}
                  , #{LOGIN_USER_ID}, '1'
                )
    </insert>
    <delete id="deleteInspectionMaster" parameterType="java.util.HashMap">
       DELETE FROM jmes.TBL_INSPECT WHERE INSPECT_SEQ = #{INSPECT_SEQ} AND INSPECT_TYPE = '1'
    </delete>
    <select id="selectInspectionPopInfoGrid01" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select 1 from dual
    </select>
    <select id="selectInspectionPopInfoGrid02" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select 1 from dual
    </select>


    <select id="selectCommItemDetailInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select 2 AS SEQ from dual
    </select>
    <select id="selectCommItemDetailInfoGrid1" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select 3 AS SEQ from dual
    </select>
    <select id="selectCommItemDetailInfoGrid2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select 4 AS SEQ from dual
    </select>
    <select id="selectCommItemDetailInfoGrid3" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select 5 AS SEQ from dual
    </select>
    <select id="selectCommItemDetailInfoGrid4" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select 6 AS SEQ from dual
    </select>
    <select id="selectCommItemDetailInfoGrid5" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        select 7 AS SEQ from dual
    </select>

    <select id="selectOutgoingList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
              C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ, C.ORDER_SEQ
            , A.CONTROL_NUM, B.PART_NUM
            , C.ORDER_NUM, C.PACKING_CNT
        FROM jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B, jmes.TBL_CONTROL_PART_ORDER C
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
        AND B.CONTROL_SEQ = C.CONTROL_SEQ
        AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
    </select>

    <select id="selectOutgoingOutType1" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 그리드 출고버튼시 */
        SELECT
              X.*
              ,X.ORDER_QTY - X.OUT_QTY AS NEW_OUT_QTY
        FROM(
            SELECT C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ, C.ORDER_SEQ
            , A.CONTROL_NUM
            , B.DRAWING_NUM
            , C.ORDER_NUM
            , C.ORDER_QTY
            , (SELECT IFNULL(SUM(M.OUT_QTY),0) FROM TBL_OUT M WHERE M.CONTROL_SEQ = C.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ AND M.ORDER_SEQ = C.ORDER_SEQ) AS OUT_QTY
            FROM jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B, jmes.TBL_CONTROL_PART_ORDER C
            WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
            AND B.CONTROL_SEQ = C.CONTROL_SEQ
            AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND B.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
            AND C.ORDER_SEQ = #{ORDER_SEQ}
        )X
    </select>

    <insert id="insertOutgoingOutType1" parameterType="java.util.HashMap">
        /* 그리드 출고버튼시 */
        INSERT INTO jmes.TBL_OUT (OUT_SEQ, CONTROL_SEQ, CONTROL_DETAIL_SEQ, ORDER_SEQ, OUT_QTY, INSERT_ID)
        SELECT NEXTVAL(jmes.OUT_SEQ) AS OUT_SEQ
        , A.CONTROL_SEQ
        , A.CONTROL_DETAIL_SEQ
        , A.ORDER_SEQ
        , #{NEW_OUT_QTY} AS NEW_OUT_QTY
        , #{LOGIN_USER_ID} AS INSERT_ID
        FROM jmes.TBL_CONTROL_PART_ORDER A
        WHERE A.CONTROL_SEQ = #{CONTROL_SEQ}
        AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
        AND A.ORDER_SEQ = #{ORDER_SEQ}
    </insert>
    <insert id="insertOutgoingOutType2" parameterType="java.util.HashMap">
    /* 그리드 출고버튼시 */
        INSERT INTO jmes.TBL_OUT (OUT_SEQ, CONTROL_SEQ, CONTROL_DETAIL_SEQ, ORDER_SEQ, OUT_QTY, INSERT_ID)
        SELECT NEXTVAL(jmes.OUT_SEQ) AS OUT_SEQ
          , A.CONTROL_SEQ
          , A.CONTROL_DETAIL_SEQ
          , A.ORDER_SEQ
          , A.ORDER_QTY - (SELECT IFNULL(SUM(M.OUT_QTY),0) FROM jmes.TBL_OUT M WHERE M.CONTROL_SEQ = A.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ AND M.ORDER_SEQ = A.ORDER_SEQ) AS OUT_QTY
          , #{LOGIN_USER_ID} AS INSERT_ID
        FROM jmes.TBL_CONTROL_PART_ORDER A
        WHERE (A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.ORDER_SEQ) IN (${DYNAMIC_PARAM})
    </insert>
    <update id="updateControlPartOrderPackingCnt" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_CONTROL_PART_ORDER SET PACKING_CNT = #{PACKING_CNT}
        , UPDATE_DT = NOW()
        , UPDATE_ID = #{LOGIN_USER_ID}
        WHERE CONTROL_SEQ = #{CONTROL_SEQ}
        AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
        AND ORDER_SEQ = #{ORDER_SEQ}
    </update>

    <select id="selectOutgoingOutType3" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* 도면 바코드 입력시 정보  */
        SELECT
              X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ
            , X.CONTROL_NUM
            , X.DRAWING_NUM
            , CONCAT(X.ORDER_QTY - X.OUT_QTY, '/', X.ORDER_QTY) AS QTY_INFO
            , X.ORDER_QTY - X.OUT_QTY AS PLAN_QTY
        FROM (  SELECT B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ
                    , A.CONTROL_NUM
                    , B.DRAWING_NUM
                    , jmes.SF_GET_CONTROL_ORDER_QTY(A.CONTROL_SEQ, 0) AS ORDER_QTY
                    , (SELECT IFNULL(SUM(M.OUT_QTY),0) FROM jmes.TBL_OUT M WHERE M.CONTROL_SEQ = B.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ) AS OUT_QTY
                FROM jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B
                WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
                AND B.CONTROL_SEQ = #{CONTROL_SEQ}
                AND B.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
        ) X
    </select>
    <insert id="insertOutgoingOutType3" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_OUT (OUT_SEQ, CONTROL_SEQ, CONTROL_DETAIL_SEQ, ORDER_SEQ, OUT_QTY, INSERT_ID)
        SELECT NEXTVAL(jmes.OUT_SEQ) AS OUT_SEQ
          , A.CONTROL_SEQ
          , A.CONTROL_DETAIL_SEQ
          , A.ORDER_SEQ
          , A.ORDER_QTY - (SELECT IFNULL(SUM(M.OUT_QTY),0) FROM jmes.TBL_OUT M WHERE M.CONTROL_SEQ = A.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ AND M.ORDER_SEQ = A.ORDER_SEQ) AS OUT_QTY
          , #{LOGIN_USER_ID} AS INSERT_ID
        FROM jmes.TBL_CONTROL_PART_ORDER A
        WHERE A.CONTROL_SEQ = #{CONTROL_SEQ}
          AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </insert>

    <select id="selectOutgoingOutType4" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ, X.ORDER_SEQ
          , X.CONTROL_NUM
          , X.DRAWING_NUM
          , X.ORDER_NUM
          , CONCAT(X.ORDER_QTY,'(',X.PACKING_CNT,')') AS QTY_INFO
          , X.PACKING_CNT - X.OUT_PACKING_CNT - 1 AS REMAIN_PACKING_CNT
          , CONCAT(X.PACKING_CNT,'-',X.PACKING_NUM) AS MY_PACKING_NUM
        FROM (  SELECT T.CONTROL_SEQ, T.CONTROL_DETAIL_SEQ, T.ORDER_SEQ
                  , A.CONTROL_NUM
                  , B.DRAWING_NUM
                  , C.ORDER_NUM
                  , jmes.SF_GET_CONTROL_ORDER_QTY(T.CONTROL_SEQ, T.ORDER_SEQ) AS ORDER_QTY
                  , C.PACKING_CNT
                  , T.PACKING_NUM
                  , (SELECT IFNULL(COUNT(PACKING_NUM),0) FROM jmes.TBL_OUT M WHERE M.CONTROL_SEQ = T.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = T.CONTROL_DETAIL_SEQ AND M.ORDER_SEQ = T.ORDER_SEQ) AS OUT_PACKING_CNT
                FROM jmes.TBL_OUT_BARCODE T
                  , jmes.TBL_CONTROL A
                  , jmes.TBL_CONTROL_PART B
                  , jmes.TBL_CONTROL_PART_ORDER C
                WHERE T.CONTROL_SEQ = A.CONTROL_SEQ
                  AND T.CONTROL_SEQ = B.CONTROL_SEQ
                  AND T.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                  AND T.CONTROL_SEQ = C.CONTROL_SEQ
                  AND T.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                  AND T.ORDER_SEQ = C.ORDER_SEQ
                  AND T.BARCODE_NUM = #{BARCODE_NUM}
                  AND T.DEL_YN = 'N'
            ) X
    </select>
    <insert id="insertOutgoingOutType4" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_OUT (OUT_SEQ, CONTROL_SEQ, CONTROL_DETAIL_SEQ, ORDER_SEQ, PACKING_NUM, INSERT_ID)
        SELECT NEXTVAL(jmes.OUT_SEQ) AS OUT_SEQ
          , A.CONTROL_SEQ
          , A.CONTROL_DETAIL_SEQ
          , A.ORDER_SEQ
          , A.PACKING_NUM
          , #{LOGIN_USER_ID} AS INSERT_ID
        FROM jmes.TBL_OUT_BARCODEL A
        WHERE A.BARCODE_NUM = #{BARCODE_NUM}
          AND IFNULL(DEL_YN,'N') = 'N'
          AND NOT EXISTS (SELECT 1 FROM jmes.TBL_OUT M WHERE M.CONTROL_SEQ = A.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ AND M.ORDER_SEQ = A.ORDER_SEQ AND M.PACKING_NUM IS NULL)

    </insert>
</mapper>