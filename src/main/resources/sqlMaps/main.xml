<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="main">

    <select id="selectMainTodayMCTList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER() OVER() AS ROW_NUM,
            A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ,
            CASE WHEN A.EMERGENCY_YN = 'Y' THEN '긴급' ELSE '' END EMERGENCY_YN_NM,
            '' as FAIL_STATUS,
            DATE_FORMAT(STR_TO_DATE(B.INNER_DUE_DT, '%Y%m%d'), '%m-%d') as INNER_DUE_DT,
            F.EQUIP_SEQ AS LAST_MCT_PLAN,
            A.ORDER_COMP_CD, SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
            A.CONTROL_NUM, B.PART_NUM, B.MATERIAL_TYPE,
            IFNULL(SF_GET_CODE_NM(1035, B.MATERIAL_TYPE, 'KR'), SPACE(0)) AS MATERIAL_TYPE_NM,
            CASE WHEN B.PART_NUM IS NOT NULL THEN B.PART_UNIT_QTY * SF_GET_CONTROL_ORDER_QTY(A.CONTROL_SEQ, '') ELSE C.ORDER_QTY END AS ORDER_QTY,
            CASE WHEN D.POP_POSITION = 'POP090' THEN DATE_FORMAT(STR_TO_DATE(D.POP_DT, '%Y%m%d'), '%Y-%m-%d') ELSE NULL END AS LAST_PRODUCT_COMPLETE_DT,
            SF_GET_CODE_NM('1009', D.POP_POSITION, 'EN') AS LAST_POP_POSITION,
            SF_GET_CODE_NM('1013', B.PART_STATUS, 'EN') AS PART_STATUS,
            A.DELIVERY_COMP_NM
        FROM TBL_CONTROL A
                 INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                 INNER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                 LEFT OUTER JOIN TBL_POP D ON B.CONTROL_SEQ = D.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            AND D.POP_SEQ = (SELECT MAX(E.POP_SEQ) FROM TBL_POP E WHERE D.POP_SEQ = E.POP_SEQ)
                 LEFT OUTER JOIN TBL_MCT_PLAN F ON B.CONTROL_SEQ = F.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ AND F.DEL_YN = 'N'
            AND F.MCT_PLAN_SEQ = (SELECT MAX(G.MCT_PLAN_SEQ) FROM TBL_MCT_PLAN G WHERE G.CONTROL_SEQ = F.CONTROL_SEQ AND G.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ )
        WHERE 1 = 1
          AND NOT EXISTS (SELECT * FROM TBL_OUT H WHERE H.CONTROL_SEQ = B.CONTROL_SEQ AND H.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND OUT_DT IS NOT NULL)
    </select>

</mapper>