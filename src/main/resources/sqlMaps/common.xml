<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="common">

    <insert id="insertFileGroup" parameterType="java.util.HashMap">
        <selectKey keyProperty="GFILE_SEQ" resultType="int" order="BEFORE">
            SELECT NEXTVAL(SEQ_GFILE) FROM DUAL
        </selectKey>
        INSERT INTO jmes.TBL_FILE_GROUP (GFILE_SEQ,
            <if test="GFILE_TYPE != null and GFILE_TYPE != ''">
                GFILE_TYPE,
            </if>
            INSERT_ID)
        VALUES(#{GFILE_SEQ},
            <if test="GFILE_TYPE != null and GFILE_TYPE != ''">
                #{GFILE_TYPE},
            </if>
            #{LOGIN_USER_ID})
    </insert>

    <delete id="deleteFileGroup" parameterType="java.util.HashMap">
        DELETE FROM jmes.TBL_FILE_GROUP
        WHERE GFILE_SEQ = #{GFILE_SEQ}
    </delete>

    <update id="updateFileGroup" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_FILE_GROUP
        SET
            <if test="GFILE_TYPE != null and GFILE_TYPE != ''">
                GFILE_TYPE = #{GFILE_TYPE},
            </if>
            UPDATE_DT = NOW(),
            UPDATE_ID = 'admin'
        WHERE GFILE_SEQ = #{GFILE_SEQ}
    </update>

    <insert id="insertFile" parameterType="java.util.HashMap">
        <selectKey keyProperty="FILE_SEQ" resultType="int" order="BEFORE">
            SELECT NEXTVAL(SEQ_FILE) FROM DUAL
        </selectKey>
        INSERT INTO jmes.TBL_FILE
        (FILE_SEQ, FILE_NM, FILE_PATH, TIME_PATH, ORGINAL_FILE_NM, FILE_TYPE, FILE_EXT, FILE_SIZE,
            FILE_KIND, GFILE_SEQ, INSERT_ID)
        VALUES
        (#{FILE_SEQ}, #{FILE_NM}, #{FILE_PATH}, #{TIME_PATH}, #{ORGINAL_FILE_NM}, #{FILE_TYPE}, #{FILE_EXT}, #{FILE_SIZE},
            CASE WHEN UPPER(#{FILE_EXT}) IN ('MC7', 'MC9', 'MCAM') THEN 'EXC'
                 WHEN UPPER(#{FILE_EXT}) = 'NC' THEN 'EXN' ELSE SPACE(0) END,
            #{GFILE_SEQ}, #{LOGIN_USER_ID})
    </insert>

    <update id="updateFile" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_FILE
        SET
            FILE_NM = #{FILE_NM},
            FILE_PATH = #{FILE_PATH},
            TIME_PATH = #{TIME_PATH},
            ORGINAL_FILE_NM = #{ORGINAL_FILE_NM},
            FILE_TYPE = #{FILE_TYPE},
            FILE_EXT = #{FILE_EXT},
            FILE_SIZE = #{FILE_SIZE},
            UPDATE_DT = NOW(),
            UPDATE_ID = 'admin'
        WHERE FILE_SEQ = #{FILE_SEQ}
    </update>

    <delete id="deleteGFileKey" parameterType="java.util.HashMap">
        DELETE FROM jmes.TBL_FILE
        WHERE GFILE_SEQ = #{GFILE_SEQ}
    </delete>

    <delete id="deleteFileKey" parameterType="java.util.HashMap">
        DELETE FROM jmes.TBL_FILE
        WHERE FILE_SEQ = #{FILE_SEQ}
    </delete>

    <select id="selectGfileFileImageInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.GFILE_SEQ, B.FILE_SEQ, B.ORGINAL_FILE_NM, B.FILE_PATH, TIME_PATH, B.FILE_SIZE,
            SF_GET_DATE_F(B.INSERT_DT,'YYYY','') AS INSERT_DT,
            CASE WHEN UPPER(B.FILE_PATH) LIKE UPPER('/home/admin/datadir/upload/etc%') THEN 'ETC'
                 ELSE 'CAD'
                END PHOTO_TYPE
        FROM jmes.TBL_FILE_GROUP A
            INNER JOIN jmes.TBL_FILE B ON A.GFILE_SEQ = B.GFILE_SEQ
        WHERE A.GFILE_SEQ  = #{GFILE_SEQ}
    </select>

    <select id="selectQuickGfileFileImageInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.GFILE_SEQ, B.FILE_SEQ, B.ORGINAL_FILE_NM, CONCAT(B.FILE_PATH, '.thumbnail.png') AS FILE_PATH,
            TIME_PATH, B.FILE_SIZE, SF_GET_DATE_F(B.INSERT_DT,'YYYY','') AS INSERT_DT,
            CASE WHEN UPPER(B.FILE_PATH) LIKE UPPER('/home/admin/datadir/upload/etc%') THEN 'ETC'
                 ELSE 'CAD'
                END PHOTO_TYPE
        FROM jmes.TBL_FILE_GROUP A
            INNER JOIN jmes.TBL_FILE B ON A.GFILE_SEQ = B.GFILE_SEQ
        WHERE A.GFILE_SEQ  = #{GFILE_SEQ}
    </select>

    <select id="selectGfileFileSingleInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.GFILE_SEQ, B.FILE_SEQ, B.ORGINAL_FILE_NM, B.FILE_PATH, TIME_PATH, B.FILE_SIZE,
            SF_GET_DATE_F(B.INSERT_DT,'YYYY','') AS INSERT_DT
        FROM jmes.TBL_FILE_GROUP A
            INNER JOIN jmes.TBL_FILE B ON A.GFILE_SEQ = B.GFILE_SEQ
        WHERE A.GFILE_SEQ  = #{GFILE_SEQ}
    </select>

    <select id="selectGfileFileList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.GFILE_SEQ AS DXF_GFILE_SEQ, B.FILE_SEQ, B.TIME_PATH, B.FILE_PATH, REPLACE(B.ORGINAL_FILE_NM, CONCAT('.',B.FILE_EXT), SPACE(0)) AS ORGINAL_FILE_NM,
            REPLACE(B.FILE_NM, CONCAT('.',B.FILE_EXT), SPACE(0)) AS FILE_NM, B.FILE_SIZE,
            SF_GET_DATE_F(B.INSERT_DT,'YYYY','') AS INSERT_DT
        FROM jmes.TBL_FILE_GROUP A
            INNER JOIN jmes.TBL_FILE B ON A.GFILE_SEQ = B.GFILE_SEQ
        WHERE A.GFILE_SEQ  IN
            <foreach collection="dxfGfileSeqList" item="bean" index="index"  open="(" close=")" separator=",">
                #{bean}
            </foreach>
    </select>

    <select id="selectFileSingleInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.GFILE_SEQ, B.FILE_SEQ, B.ORGINAL_FILE_NM, B.FILE_PATH, TIME_PATH, B.FILE_SIZE,
            SF_GET_DATE_F(B.INSERT_DT,'YYYY','') AS INSERT_DT
        FROM jmes.TBL_FILE_GROUP A
            INNER JOIN jmes.TBL_FILE B ON A.GFILE_SEQ = B.GFILE_SEQ AND B.FILE_SEQ = #{FILE_SEQ}
        WHERE 1 = 1
    </select>

    <!-- MAIL BOX 에서 호출 하여 사용한다. -->
    <select id="selectGfileFileListInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.GFILE_SEQ, B.FILE_SEQ, B.ORGINAL_FILE_NM, B.FILE_PATH, TIME_PATH, B.FILE_SIZE,
            (SELECT ROUND(SUM(B.FILE_SIZE)/1024/1024, 0) FROM TBL_FILE B WHERE A.GFILE_SEQ = B.GFILE_SEQ) AS TOTAL_FILE_SIZE, <!-- 40Mbyte over check -->
            SF_GET_DATE_F(B.INSERT_DT,'YYYY','') AS INSERT_DT
        FROM jmes.TBL_FILE_GROUP A
                 INNER JOIN jmes.TBL_FILE B ON A.GFILE_SEQ = B.GFILE_SEQ
        WHERE A.GFILE_SEQ  = #{GFILE_SEQ}
    </select>

    <select id="selectFileListForDrawingCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT B.GFILE_SEQ, B.FILE_NM, B.FILE_PATH, B.TIME_PATH, B.ORGINAL_FILE_NM, B.FILE_TYPE, B.FILE_EXT
        FROM TBL_FILE_GROUP A
             INNER JOIN TBL_FILE B ON A.GFILE_SEQ = B.GFILE_SEQ
        WHERE B.FILE_EXT = 'png'
          AND B.FILE_PATH IS NOT NULL
          AND B.TIME_PATH IS NOT NULL
          AND B.ORGINAL_FILE_NM IS NOT NULL;
--           AND B.INSERT_DT <![CDATA[ < ]]> '20210501';
    </select>

    <select id="selectControlBarcodeInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.BARCODE_NUM
            , A.CONTROL_SEQ
            , A.CONTROL_DETAIL_SEQ
            , A.CONTROL_VER
            , A.DRAWING_VER
            , A.DEL_YN
            , A.INSERT_DT
            , A.INSERT_ID
            , A.UPDATE_DT
            , A.UPDATE_ID
            , (SELECT COUNT(*) FROM TBL_CONTROL Q WHERE Q.CONTROL_SEQ = A.CONTROL_SEQ AND Q.OUT_FINISH_DT IS NOT NULL AND Q.DEL_YN = 'N') AS OUT_CNT
            , B.IMG_GFILE_SEQ
        FROM jmes.TBL_CONTROL_BARCODE A
            INNER JOIN TBL_CONTROL_PART B ON B.CONTROL_SEQ = A.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
        WHERE A.DEL_YN = 'N'
            AND BARCODE_NUM = #{BARCODE_NUM}
    </select>
    <select id="selectOutBarcodeInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
             BARCODE_NUM
            ,CONTROL_SEQ
            ,CONTROL_DETAIL_SEQ
            ,ORDER_SEQ
            ,PACKING_NUM
            ,DEL_YN
            ,INSERT_DT
            ,INSERT_ID
            ,UPDATE_DT
            ,UPDATE_ID
        FROM jmes.TBL_OUT_BARCODE
         WHERE BARCODE_NUM = #{BARCODE_NUM}
    </select>

    <select id="selectBarcodePrintInfoControl" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        -- 도면라벨
        SELECT
            CASE
                WHEN C.PART_NUM IS NULL THEN IF(B.TOTAL_SHEET IS NULL, B.CONTROL_NUM, CONCAT(B.CONTROL_NUM, ' /', B.TOTAL_SHEET))
                ELSE IF(B.TOTAL_SHEET IS NULL, CONCAT(B.CONTROL_NUM, ' #', C.PART_NUM), CONCAT(B.CONTROL_NUM, ' #', C.PART_NUM, ' /', B.TOTAL_SHEET))
            END AS CONTROL_NUM_INFO
            , B.CONTROL_VER
            , C.DRAWING_NUM
            , IFNULL(C.DRAWING_VER, SPACE(0)) AS DRAWING_VER
            , CONCAT(IFNULL(jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ), 0), ' EA') AS ORDER_QTY
            , jmes.SF_GET_SIDE_QTY(B.CONTROL_SEQ, 'ORIGINAL_SIDE_QTY') * IFNULL(C.PART_UNIT_QTY, 1) AS ORIGINAL_SIDE_QTY <!-- 대칭_원칭 -->
            , jmes.SF_GET_SIDE_QTY(B.CONTROL_SEQ, 'OTHER_SIDE_QTY') * IFNULL(C.PART_UNIT_QTY, 1) AS OTHER_SIDE_QTY <!-- 대칭_대칭 -->
            , jmes.SF_GET_DATE_F(C.INNER_DUE_DT,'','') AS INNER_DUE_DT
            , C.SIZE_TXT
            , jmes.SF_GET_CODE_NM('1035', C.MATERIAL_TYPE, #{LOGIN_LOCALE}) AS MATERIAL_TYPE_NM
            , jmes.SF_GET_CODE_NM('1033', C.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM
            , jmes.SF_GET_CODE_NM('1039', C.SURFACE_TREAT, #{LOGIN_LOCALE}) AS SURFACE_TREAT_NM
            , (SELECT M.COMP_NM FROM jmes.TBL_COMPANY M WHERE M.COMP_CD = B.ORDER_COMP_CD) AS ORDER_COMP_NM
            , CASE WHEN B.EMERGENCY_YN = 'Y' THEN '긴급' END AS EMERGENCY_NM
            , jmes.SF_GET_CODE_NM('1058', C.MATERIAL_FINISH_HEAT, #{LOGIN_LOCALE}) AS MATERIAL_FINISH_HEAT_NM
            , jmes.SF_GET_CODE_NM('1059', B.MAIN_INSPECTION, #{LOGIN_LOCALE}) AS  MAIN_INSPECTION_NM
            , (SELECT M.COMP_NM FROM jmes.TBL_COMPANY M WHERE M.COMP_CD = B.COMP_CD) AS COMP_NM
            , A.BARCODE_NUM
            , C.IMG_GFILE_SEQ
        FROM jmes.TBL_CONTROL_BARCODE A, jmes.TBL_CONTROL B, jmes.TBL_CONTROL_PART C, jmes.TBL_CONTROL_PART_ORDER_MAIN D
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
            AND A.CONTROL_SEQ = C.CONTROL_SEQ
            AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            AND C.CONTROL_SEQ = D.CONTROL_SEQ
            AND A.DEL_YN = 'N'
            AND B.DEL_YN = 'N'
            AND A.BARCODE_NUM = #{BARCODE_NUM}
    </select>

    <select id="selectBarcodePrintInfoOut" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.BARCODE_NUM
             , A.PACKING_NUM
             , B.PACKING_CNT
             , (SELECT IFNULL(M.COMP_NM2, M.COMP_NM)  FROM TBL_COMPANY M WHERE M.COMP_CD = B.COMP_CD) AS COMP_NM
             , B.ITEM_NM
             , (SELECT IFNULL(M.COMP_NM2, M.COMP_NM) FROM TBL_COMPANY M WHERE M.COMP_CD = B.ORDER_COMP_CD) AS ORDER_COMP_NM
             , B.ORIGINAL_SIDE_QTY * B.ORDER_QTY AS ORIGINAL_SIDE_QTY
             , B.OTHER_SIDE_QTY  * B.ORDER_QTY  AS OTHER_SIDE_QTY
             , B.DRAWING_NUM
             , B.IMG_GFILE_SEQ
             , B.REGIST_NUM
             , B.ORDER_NUM
             , B.MODULE_NM
             , jmes.SF_GET_DATE_F(B.ORDER_DUE_DT,'YYYY','') AS ORDER_DUE_DT
             , (SELECT GROUP_CONCAT(Y.CONTROL_NUM SEPARATOR ',' )
                FROM TBL_CONTROL_PART_ORDER X
                    INNER JOIN TBL_CONTROL Y ON X.CONTROL_SEQ = Y.CONTROL_SEQ AND Y.DEL_YN = 'N'
                WHERE X.ORDER_SEQ = A.ORDER_SEQ
                ) AS CONTROL_NUM
             , B.DELIVERY_COMP_NM
             , B.PROJECT_NM
             , CONCAT(B.SIZE_TXT, ' / ', IFNULL(B.ORDER_QTY, 0), 'EA') AS SIZE_QTY_INFO
             , B.LABEL_NOTE
        FROM TBL_OUT_BARCODE A, TBL_ORDER B
        WHERE A.ORDER_SEQ = B.ORDER_SEQ
            AND A.DEL_YN = 'N'
            AND B.DEL_YN = 'N'
            AND A.BARCODE_NUM = #{BARCODE_NUM}
        ORDER BY A.ORDER_SEQ ;
    </select>

    <select id="selectBarcodePrintInfoWareHouse" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        -- 출고라벨
        SELECT A.WAREHOUSE_CD
             , jmes.SF_GET_CODE_NM('1049', A.WAREHOUSE_CD, #{LOGIN_LOCALE}) AS WAREHOUSE_CD_NM
             , A.LOC_SEQ
             , A.LOC_USE
             , A.LOC_NM
             , CONCAT(A.WAREHOUSE_CD,'_',LPAD(A.LOC_SEQ,4,'0')) AS LOC_BARCODE
        FROM jmes.TBL_WAREHOUSE_LOCATION A
        WHERE A.DEL_YN = 'N'
            AND CONCAT('W',A.LOC_SEQ) = UPPER(#{BARCODE_NUM})
        ORDER BY A.WAREHOUSE_CD, A.LOC_SEQ
    </select>

    <select id="selectBarcodePrintControlCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        	X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ, IFNULL(X.CONTROL_STATUS, SPACE(0)) AS CONTROL_STATUS, IFNULL(X.PART_STATUS, SPACE(0)) AS PART_STATUS,
        	CASE WHEN X.CONTROL_VER_YN = 'Y' AND X.DRAWING_VER_YN = 'Y' THEN 'Y' ELSE 'N' END AS USE_YN
        FROM (
        	SELECT
        		A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, B.CONTROL_STATUS, C.PART_STATUS,
            	CASE WHEN IFNULL(A.CONTROL_VER, SPACE(0)) = IFNULL(B.CONTROL_VER, SPACE(0)) THEN 'Y' ELSE 'N' END CONTROL_VER_YN,
            	CASE WHEN IFNULL(A.DRAWING_VER, SPACE(0)) = IFNULL(C.DRAWING_VER, SPACE(0)) THEN 'Y' ELSE 'N' END DRAWING_VER_YN
         	FROM jmes.TBL_CONTROL_BARCODE A
         		INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.DEL_YN = 'N'
         		INNER JOIN jmes.TBL_CONTROL_PART C ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
         	WHERE A.BARCODE_NUM = #{BARCODE_NUM}
         		AND A.DEL_YN = 'N'
        ) X
   </select>

   <select id="selectBarcodePrintOutCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
       SELECT
        CASE WHEN A.PACKING_NUM = (SELECT B.PACKING_CNT FROM jmes.TBL_CONTROL_PART_ORDER B WHERE B.CONTROL_SEQ = A.CONTROL_SEQ  AND B.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ AND B.ORDER_SEQ = A.ORDER_SEQ ) THEN 'Y' ELSE 'N' END AS USE_YN
       FROM jmes.TBL_OUT_BARCODE A
       WHERE A.BARCODE_NUM = #{BARCODE_NUM}
       AND A.DEL_YN = 'N'
   </select>

    <select id="selectAlarmInspectionInformation" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            CONCAT('[', DATE_FORMAT(NOW(), '%m/%d %H:%i:%s'), '] ') AS CONTEXT01,
            CONCAT(B.CONTROL_NUM, CASE WHEN A.PART_NUM IS NOT NULL THEN CONCAT(' #', A.PART_NUM) ELSE SPACE(0) END) AS CONTEXT02,
            '검사완료' AS CONTEXT03,
            CONCAT('등급 ', SF_GET_CODE_NM(1040, #{INSPECT_GRADE}, #{LOGIN_LOCALE})) AS CONTEXT04
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
        WHERE 1 = 1
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </select>

    <select id="selectAlarmControlInformation" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            CONCAT('[', DATE_FORMAT(NOW(), '%m/%d %H:%i:%s'), '] ') AS CONTEXT01,
            CONCAT(B.CONTROL_NUM, CASE WHEN A.PART_NUM IS NOT NULL THEN CONCAT(' #', A.PART_NUM) ELSE SPACE(0) END) AS CONTEXT02,
            D.EQUIP_SEQ, D.EQUIP_ID, D.EQUIP_NM, D.LAYOUT_COL, D.LAYOUT_ROW, D.LAYOUT_SORT, D.FACTORY_AREA,
            A.IMG_GFILE_SEQ
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            LEFT OUTER JOIN (SELECT #{CONTROL_SEQ} AS CONTROL_SEQ, C.EQUIP_SEQ, C.EQUIP_ID, C.EQUIP_NM, C.LAYOUT_COL, C.LAYOUT_ROW, C.LAYOUT_SORT, C.FACTORY_AREA
                FROM TBL_EQUIP C WHERE C.EQUIP_SEQ = #{EQUIP_SEQ} AND C.DEL_YN = 'N'
            ) D ON D.CONTROL_SEQ = A.CONTROL_SEQ
        WHERE 1 = 1
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </select>

    <select id="selectAlarmUserInformation" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.USER_ID, A.USER_NM, A.PHOTO_GFILE_SEQ,
            D.EQUIP_SEQ, D.EQUIP_ID, D.EQUIP_NM, D.LAYOUT_COL, D.LAYOUT_ROW, D.LAYOUT_SORT, D.FACTORY_AREA
        FROM TBL_USER A
            LEFT OUTER JOIN (SELECT #{USER_ID} AS USER_ID, C.EQUIP_SEQ, C.EQUIP_ID, C.EQUIP_NM, C.LAYOUT_COL, C.LAYOUT_ROW, C.LAYOUT_SORT, C.FACTORY_AREA
                FROM TBL_EQUIP C WHERE C.EQUIP_SEQ = #{EQUIP_SEQ} AND C.DEL_YN = 'N'
            ) D ON D.USER_ID = A.USER_ID
        WHERE 1=1
            AND A.USER_ID = #{USER_ID}
    </select>

    <select id="selectMultiDownloadList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
<!--        SELECT A.CONTROL_SEQ-->
<!--            , A.CONTROL_DETAIL_SEQ-->
<!--            , A.ORDER_NUM-->
<!--            , A.DRAWING_NUM-->
<!--            , SF_GET_CODE_NM('1033', B.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM-->
<!--            , CASE-->
<!--                WHEN B.PART_NUM IS NULL THEN C.CONTROL_NUM-->
<!--                ELSE CONCAT(C.CONTROL_NUM, '#', B.PART_NUM)-->
<!--              END AS CONTROL_PART_INFO-->
<!--            , A.IMG_GFILE_SEQ-->
<!--            , A.DXF_GFILE_SEQ-->
<!--        FROM TBL_CONTROL_PART_ORDER A-->
<!--            INNER JOIN TBL_CONTROL_PART B ON B.CONTROL_SEQ = A.CONTROL_SEQ-->
<!--            INNER JOIN TBL_CONTROL C ON C.CONTROL_SEQ  = B.CONTROL_SEQ-->
<!--        WHERE C.DEL_YN = 'N'-->
<!--            AND A.CONTROL_SEQ = #{CONTROL_SEQ}-->
<!--            <if test="CONTROL_DETAIL_SEQ !='' and CONTROL_DETAIL_SEQ != null">-->
<!--                AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}-->
<!--            </if>-->

        SELECT A.CONTROL_SEQ
             , B.CONTROL_DETAIL_SEQ
             , IFNULL(C.ORDER_NUM, SPACE(0)) AS ORDER_NUM
             , IFNULL(C.REGIST_NUM, SPACE(0)) AS REGIST_NUM
             , SF_GET_CODE_NM('1033', B.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM
             , CASE
                 WHEN C.IMG_GFILE_SEQ IS NOT NULL THEN C.IMG_GFILE_SEQ
                 WHEN B.IMG_GFILE_SEQ IS NOT NULL THEN B.IMG_GFILE_SEQ
               END AS IMG_GFILE_SEQ
            , CASE
                WHEN C.DXF_GFILE_SEQ IS NOT NULL THEN C.DXF_GFILE_SEQ
                WHEN B.DXF_GFILE_SEQ IS NOT NULL THEN B.DXF_GFILE_SEQ
              END AS DXF_GFILE_SEQ
            , CASE
                WHEN C.DRAWING_NUM IS NOT NULL THEN C.DRAWING_NUM
                WHEN B.DRAWING_NUM IS NOT NULL THEN B.DRAWING_NUM
              END AS DRAWING_NUM
            , CASE
                WHEN B.PART_NUM IS NULL THEN A.CONTROL_NUM
                ELSE CONCAT(A.CONTROL_NUM, '#', B.PART_NUM)
              END AS CONTROL_PART_INFO
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B on B.CONTROL_SEQ  = B.CONTROL_SEQ AND B.CONTROL_SEQ = #{CONTROL_SEQ}
            LEFT OUTER JOIN TBL_CONTROL_PART_ORDER C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
        WHERE A.DEL_YN = 'N'
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
        ORDER BY A.CONTROL_NUM, B.PART_NUM, C.ORDER_SEQ
    </select>

    <select id="selectDummyNextSequence" parameterType="java.util.HashMap" resultType="integer">
        SELECT NEXTVAL(SEQ_DUMMY) AS SEQ_DUMMY FROM DUAL
    </select>

    <insert id="insertErrorLog" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_ERROR_LOG (
            LOG_SEQ, REQUEST_URL, ERROR_NAME, ERROR_MSG, REQUEST_PARAM, INSERT_ID
        )
        VALUES (
            NEXTVAL(SEQ_LOG), #{REQUEST_URL}, #{ERROR_NAME}, #{ERROR_MSG}, #{REQUEST_PARAM}, #{LOGIN_USER_ID}
        )
    </insert>

    <select id="selectHealthCheck" parameterType="java.util.HashMap" resultType="string">
        SELECT NOW() FROM DUAL
    </select>
</mapper>