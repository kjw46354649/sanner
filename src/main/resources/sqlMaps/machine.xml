<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="machine">

    <select id="selectMachineList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
            SELECT
                  A.EQUIP_SEQ
                , A.EQUIP_ID
                , A.PHOTO_GFILE_SEQ
                , jmes.SF_GET_FILE_ORGINAL_NM(A.PHOTO_GFILE_SEQ, '1') as PHOTO_GFILE_SEQ_NM
                , A.EQUIP_NM
                , jmes.SF_GET_CODE_NM('1010', A.PROCESS_TYPE, #{LOGIN_LOCALE}) AS PROCESS_TYPE_NM
                , jmes.SF_GET_CODE_NM('1012', A.EQUIP_TYPE, #{LOGIN_LOCALE}) AS EQUIP_TYPE_NM
                <!-- , jmes.SF_GET_CODE_NM('1034', A.EQUIP_SIZE, #{LOGIN_LOCALE}) AS EQUIP_SIZE_NM -->
                , A.EQUIP_SIZE
                , jmes.SF_GET_CODE_NM('1037', A.EQUIP_COMP_CD, #{LOGIN_LOCALE}) AS EQUIP_COMP_NM
                , jmes.SF_GET_CODE_NM('1022', A.RESELLER_CD, #{LOGIN_LOCALE}) AS RESELLER_NM
                , jmes.SF_GET_CODE_NM('1005', A.FACTORY_AREA, #{LOGIN_LOCALE}) AS FACTORY_AREA_NM
                , jmes.SF_GET_CODE_NM('1014', (SELECT REF_CD FROM jmes.TBL_CODE WHERE HIGH_CD = '1005' AND CODE_CD = A.FACTORY_AREA), #{LOGIN_LOCALE}) AS FACTORY_NM
                , jmes.SF_GET_DATE_F(A.PURCHASE_DT,'YY','') AS PURCHASE_DT
                , (SELECT USER_NM FROM jmes.TBL_USER WHERE USER_ID = A.MAIN_USER_ID) AS MAIN_USER_NM
                , (SELECT USER_NM FROM jmes.TBL_USER WHERE USER_ID = A.SUB_USER_ID) AS SUB_USER_NM
                , (SELECT CONCAT(FLOOR(SUM(TIMESTAMPDIFF(MINUTE, Y.WORK_START_DT, Y.WORK_STOP_DT) / 60)),'H ', MOD(SUM(TIMESTAMPDIFF(MINUTE, Y.WORK_START_DT, Y.WORK_STOP_DT)), 60), 'M')
                    FROM jmes.TBL_MCT_WORK X, jmes.TBL_MCT_WORK_TIME Y
                    WHERE X.MCT_WORK_SEQ = Y.MCT_WORK_SEQ
                        AND X.DEL_YN = 'N'
                        AND Y.WORK_STOP_DT IS NOT NULL
                        AND X.EQUIP_SEQ = A.EQUIP_SEQ) AS WORKING_TIME
                , (SELECT jmes.SF_GET_DATE_F(MAX(REPAIR_END_DT),'YY','') FROM jmes.TBL_EQUIP_REPAIR WHERE EQUIP_SEQ = A.EQUIP_SEQ) AS LAST_REPAIR_DT
                , (SELECT jmes.SF_GET_DATE_F(MAX(M.WORK_FINISH_DT),'YY','') FROM jmes.TBL_MCT_WORK M WHERE M.EQUIP_SEQ = A.EQUIP_SEQ) AS LAST_WORK_FINISH_DT
                , ( SELECT Y.CONTROL_NUM
                    FROM jmes.TBL_MCT_WORK X, jmes.TBL_CONTROL Y
                    WHERE X.CONTROL_SEQ = Y.CONTROL_SEQ
                        AND X.EQUIP_SEQ = A.EQUIP_SEQ
                    ORDER BY X.MCT_WORK_SEQ DESC
                    LIMIT 1) AS LAST_CONTROL_NUM
                , A.NOTE
                , A.MODEL_NUM, A.SERIAL_NUM
            FROM jmes.TBL_EQUIP A
            WHERE A.EQUIP_KIND = #{SEL_EQUIP_KIND}
            AND A.DEL_YN = 'N'
            <if test="SEL_EQUIP_TYPE !='' and SEL_EQUIP_TYPE != null">
                AND A.EQUIP_TYPE = #{SEL_EQUIP_TYPE}
            </if>
            <if test="SEL_EQUIP_SIZE !='' and SEL_EQUIP_SIZE != null">
                AND A.EQUIP_SIZE = #{SEL_EQUIP_SIZE}
            </if>
            <if test="SEL_EQUIP_NM !='' and SEL_EQUIP_NM != null">
                AND A.EQUIP_SEQ = #{SEL_EQUIP_NM}
            </if>
            <if test="SEL_FACTORY_AREA !='' and SEL_FACTORY_AREA != null">
                AND A.FACTORY_AREA = #{SEL_FACTORY_AREA}
            </if>
            <if test="SEL_MAIN_USER_ID !='' and SEL_MAIN_USER_ID != null">
                AND EXISTS (  SELECT 1
                                FROM jmes.TBL_USER
                                WHERE USER_ID IN (A.MAIN_USER_ID, A.SUB_USER_ID)
                                AND USER_NM LIKE CONCAT('%', #{SEL_MAIN_USER_ID}, '%')
                           )
            </if>
<!--            <if test="SEL_TERM_DT_USE or SEL_TERM_DT_USE ==true">-->
                <if test='SEL_DAY_TYPE == "1"'>
                    AND A.PURCHASE_DT >= REPLACE(#{SEL_ST_DT},'/',space(0))
                    AND A.PURCHASE_DT <![CDATA[ <= ]]> REPLACE(#{SEL_END_DT},'/',space(0))
                </if>
<!--            </if>-->
            <if test="SEL_MAIN_USER_ID !='' and SEL_MAIN_USER_ID != null">
                AND (A.MAIN_USER_ID = #{SEL_MAIN_USER_ID} OR SUB_USER_ID = #{SEL_MAIN_USER_ID})
            </if>
            ORDER BY A.EQUIP_ID
        </select>

    <select id="selectMachineInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.EQUIP_SEQ, A.EQUIP_ID
            , jmes.SF_GET_CODE_NM('1051', A.EQUIP_KIND, #{LOGIN_LOCALE}) AS EQUIP_KIND_NM
            , A.PHOTO_GFILE_SEQ
            , A.EQUIP_NM
            , A.PROCESS_TYPE
            , A.EQUIP_TYPE
            , A.EQUIP_SIZE
            , A.EQUIP_COMP_CD
            , A.FACTORY_AREA
            , A.MAIN_USER_ID
            , A.SUB_USER_ID
            , jmes.SF_GET_DATE_F(A.PURCHASE_DT,'YYYY','') AS PURCHASE_DT
            , A.RESELLER_CD
            , A.ETC_GFILE_SEQ
            , jmes.SF_GET_FILE_ORGINAL_NM(A.ETC_GFILE_SEQ, '1') as ETC_GFILE_SEQ_NM
            , A.NOTE
            , A.MODEL_NUM, A.SERIAL_NUM
        FROM jmes.TBL_EQUIP A
        WHERE A.EQUIP_SEQ = #{EQUIP_SEQ}
    </select>
    <select id="selectMachineSeq" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT NEXTVAL(jmes.SEQ_EQUIP) AS SEQ FROM dual
    </select>

    <insert id="insertMachineMaster" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_EQUIP (EQUIP_SEQ, EQUIP_ID, EQUIP_KIND, EQUIP_NM
                              , PROCESS_TYPE, EQUIP_TYPE, EQUIP_SIZE
                              , EQUIP_COMP_CD, FACTORY_AREA
                              , MAIN_USER_ID, SUB_USER_ID, PURCHASE_DT, RESELLER_CD, NOTE
                              , PHOTO_GFILE_SEQ, ETC_GFILE_SEQ, INSERT_ID, MODEL_NUM, SERIAL_NUM)
        VALUES (  #{EQUIP_SEQ}, #{EQUIP_ID}, #{EQUIP_KIND}, #{EQUIP_NM}
                , #{PROCESS_TYPE, jdbcType=VARCHAR}, #{EQUIP_TYPE}, #{EQUIP_SIZE}
                , #{EQUIP_COMP_CD}, #{FACTORY_AREA}
                , #{MAIN_USER_ID}, #{SUB_USER_ID}, REPLACE(#{PURCHASE_DT},'/',space(0)), #{RESELLER_CD}, #{NOTE}
                , #{PHOTO_GFILE_SEQ}, #{ETC_GFILE_SEQ}, #{LOGIN_USER_ID}, #{MODEL_NUM}, #{SERIAL_NUM} )
    </insert>
    <update id="updateMachineMaster" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_EQUIP
        SET EQUIP_ID = #{EQUIP_ID}
              , EQUIP_NM = #{EQUIP_NM}
              , PROCESS_TYPE = #{PROCESS_TYPE, jdbcType=VARCHAR}
              , EQUIP_TYPE = #{EQUIP_TYPE}
              , EQUIP_SIZE = #{EQUIP_SIZE}
              , EQUIP_COMP_CD = #{EQUIP_COMP_CD}
              , FACTORY_AREA = #{FACTORY_AREA}
              , MAIN_USER_ID = #{MAIN_USER_ID}
              , SUB_USER_ID = #{SUB_USER_ID}
              , PURCHASE_DT = REPLACE(#{PURCHASE_DT},'/',space(0))
              , RESELLER_CD = #{RESELLER_CD}
              , NOTE = #{NOTE}
              , MODEL_NUM = #{MODEL_NUM}
              , SERIAL_NUM = #{SERIAL_NUM}
            <if test="PHOTO_GFILE_SEQ != null and PHOTO_GFILE_SEQ != ''">
                  , PHOTO_GFILE_SEQ = #{PHOTO_GFILE_SEQ}
            </if>
            <if test="ETC_GFILE_SEQ != null and ETC_GFILE_SEQ != ''">
              , ETC_GFILE_SEQ = #{ETC_GFILE_SEQ}
            </if>
              , UPDATE_DT = NOW()
              , UPDATE_ID = #{LOGIN_USER_ID}
        WHERE EQUIP_SEQ = #{EQUIP_SEQ}
    </update>
    <delete id="deleteMachineMaster" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_EQUIP
        SET DEL_YN = 'Y'
          , UPDATE_DT = NOW()
          , UPDATE_ID = #{LOGIN_USER_ID}
        WHERE EQUIP_SEQ = #{EQUIP_SEQ}
    </delete>

    <select id="selectMachineLogList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT ROW_NUMBER() OVER(ORDER BY A.MCT_WORK_SEQ) AS RNUM
          , B.PROCESS_TYPE, jmes.SF_GET_CODE_NM('1010', B.PROCESS_TYPE, #{LOGIN_LOCALE}) AS PROCESS_TYPE_NM
          , B.EQUIP_NM
          , jmes.SF_GET_CODE_NM('1079', A.WORK_STATUS, #{LOGIN_LOCALE}) AS WORK_STATUS
          , jmes.SF_GET_DATE_F(A.WORK_START_DT,'','M') AS WORK_START_DT
          , jmes.SF_GET_DATE_F(A.WORK_FINISH_DT,'','M') AS WORK_FINISH_DT
          , (SELECT SUM(TIMESTAMPDIFF(MINUTE, M.WORK_START_DT, M.WORK_STOP_DT)) FROM jmes.TBL_MCT_WORK_TIME M WHERE M.MCT_WORK_SEQ = A.MCT_WORK_SEQ) AS WORKING_TIME     -- 확인
          , (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = A.WORK_USER_ID) AS WORK_USER
          , A.FINISH_QTY
          , A.ERROR_QTY
        FROM jmes.TBL_MCT_WORK A, jmes.TBL_EQUIP B
        WHERE A.EQUIP_SEQ = B.EQUIP_SEQ
          AND A.DEL_YN = 'N'
          AND A.EQUIP_SEQ = #{EQUIP_SEQ}
        ORDER BY 1 DESC
    </select>
    <select id="selectMachineHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.EQUIP_SEQ
          , A.SEQ
          , A.REPAIR_TYPE
          , SF_GET_CODE_NM('1036', REPAIR_TYPE, #{LOGIN_LOCALE}) AS REPAIR_TYPE_NM
          , A.REPAIR_DESC
          , jmes.SF_GET_DATE_F(A.REPAIR_START_DT,'YYYY','M') AS REPAIR_START_DT
          , jmes.SF_GET_DATE_F(A.REPAIR_END_DT,'YYYY','M') AS REPAIR_END_DT
          , CONCAT(DATEDIFF(A.REPAIR_END_DT, A.REPAIR_START_DT) * 24 + HOUR(TIMEDIFF(A.REPAIR_END_DT, A.REPAIR_START_DT)), 'H ', MINUTE(TIMEDIFF(A.REPAIR_END_DT, A.REPAIR_START_DT)),'M') AS REPAIR_TIME
          , A.NOTE
          , A.BEFORE_GFILE_SEQ
          , A.AFTER_GFILE_SEQ
        FROM jmes.TBL_EQUIP_REPAIR A
        WHERE A.EQUIP_SEQ = #{EQUIP_SEQ}
    </select>
    <insert id="insertMachineMasterHistory" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_EQUIP_REPAIR ( EQUIP_SEQ, SEQ, REPAIR_TYPE
                                            , REPAIR_START_DT, REPAIR_END_DT
                                            , REPAIR_DESC, NOTE, BEFORE_GFILE_SEQ, AFTER_GFILE_SEQ, INSERT_ID)
        VALUES (#{EQUIP_SEQ},NEXTVAL(jmes.SEQ_DUMMY),#{REPAIR_TYPE}
                , STR_TO_DATE(#{REPAIR_START_DT},'%Y/%m/%d %H:%i'), STR_TO_DATE(#{REPAIR_END_DT},'%Y/%m/%d %H:%i')
                , #{REPAIR_DESC}, #{NOTE}, #{BEFORE_GFILE_SEQ}, #{AFTER_GFILE_SEQ}, #{LOGIN_USER_ID})
    </insert>
    <update id="updateMachineMasterHistory" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_EQUIP_REPAIR
        SET  REPAIR_TYPE = #{REPAIR_TYPE}
            , REPAIR_START_DT = STR_TO_DATE(#{REPAIR_START_DT},'%Y/%m/%d %H:%i')
            , REPAIR_END_DT = STR_TO_DATE(#{REPAIR_END_DT},'%Y/%m/%d %H:%i')
            , REPAIR_DESC = #{REPAIR_DESC}
            , NOTE = #{NOTE}
            , BEFORE_GFILE_SEQ = #{BEFORE_GFILE_SEQ}
            , AFTER_GFILE_SEQ = #{AFTER_GFILE_SEQ}
            , UPDATE_DT = NOW()
            , UPDATE_ID = #{LOGIN_USER_ID}
        WHERE EQUIP_SEQ = #{EQUIP_SEQ}
            AND SEQ = #{SEQ}
    </update>
    <delete id="deleteMachineMasterHistory" parameterType="java.util.HashMap">
        DELETE FROM jmes.TBL_EQUIP_REPAIR
        WHERE EQUIP_SEQ = #{EQUIP_SEQ}
            AND SEQ = #{SEQ}
    </delete>
    <select id="selectEquipId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            EQUIP_SEQ,
            EQUIP_ID,
            EQUIP_NM,
            LAYOUT_ROW,
            LAYOUT_COL
        FROM TBL_EQUIP
        WHERE 1 = 1
            AND FACTORY_AREA = #{FACTORY_AREA}
            AND PROCESS_TYPE = 'MPR010'
    </select>
    <select id="selectProcessPlanGridInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.EQUIP_SEQ,
            A.EQUIP_NM,
            B.MCT_WORK_SEQ,
            B.WORK_START_DT,
            B.WORK_FINISH_DT,
            CASE
                WHEN B.WORK_START_DT IS NOT NULL AND B.WORK_FINISH_DT IS NULL THEN '진행중'
                WHEN B.WORK_START_DT IS NOT NULL AND B.WORK_FINISH_DT IS NOT NULL AND WORK_TEMP_STOP_DT IS NOT NULL THEN '임시중지'
                WHEN B.WORK_START_DT IS NOT NULL AND B.WORK_FINISH_DT IS NOT NULL THEN '완료'
                WHEN B.WORK_START_DT IS NOT NULL AND B.WORK_STATUS = 'DBS030' THEN '취소'
            END AS EQUIP_STATUS,
            B.WORK_USER_ID,
            SF_GET_USER_NM(B.WORK_USER_ID) AS WORK_USER_NM,
            CASE WHEN C.PART_NUM IS NULL THEN D.CONTROL_NUM ELSE CONCAT(D.CONTROL_NUM, ' #', C.PART_NUM) END AS CONTROL_NUM, <!-- 관리번호 -->
            C.MATERIAL_TYPE,
            SUBSTRING(SF_GET_CODE_NM('1035', C.MATERIAL_TYPE, #{LOGIN_LOCALE}), 1, 2) AS MATERIAL_TYPE_NM_SUBSTR, <!-- 재질 -->
            SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY,
            CONCAT(SF_GET_DRAWING_WORK_TIME('W_MINUTE', B.MCT_WORK_SEQ), '\'') AS WORK_TIME
        FROM TBL_EQUIP A
            LEFT OUTER JOIN TBL_MCT_WORK B ON A.EQUIP_SEQ = B.EQUIP_SEQ
                AND B.MCT_WORK_SEQ = (SELECT MAX(MCT_WORK_SEQ) FROM TBL_MCT_WORK WHERE EQUIP_SEQ = TRIM(#{EQUIP_SEQ}) AND DEL_YN = 'N')
            LEFT OUTER JOIN TBL_CONTROL_PART C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_CONTROL D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND D.DEL_YN = 'N'
        WHERE 1 = 1
            AND A.EQUIP_SEQ = TRIM(#{EQUIP_SEQ})
            AND A.DEL_YN = 'N'
    </select>
    <select id="selectProcessPlanGridList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER(ORDER BY A.SORT_NUM) AS ROW_NUM,
            A.MCT_PLAN_SEQ,
            E.EQUIP_SEQ,
            A.SORT_NUM,
            B.IMG_GFILE_SEQ,
            B.CONTROL_SEQ,
            B.CONTROL_DETAIL_SEQ,
            SF_GET_DATE_F(B.INNER_DUE_DT,'','') AS INNER_DUE_DT, <!-- 납기 -->
            CASE WHEN B.PART_NUM IS NULL THEN C.CONTROL_NUM ELSE CONCAT(C.CONTROL_NUM, ' # ', B.PART_NUM) END AS CONTROL_NUM, <!-- 관리번호 -->
            SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY, <!-- 수량 -->
            B.MATERIAL_TYPE, <!-- 재질 -->
            SUBSTRING(SF_GET_CODE_NM('1035', B.MATERIAL_TYPE, #{LOGIN_LOCALE}), 1, 2) AS MATERIAL_TYPE_NM_SUBSTR, <!-- 재질 -->
            A.WORKING_TIME <!-- 예상 시간(분) -->
        FROM TBL_MCT_PLAN A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_CONTROL C ON B.CONTROL_SEQ = C.CONTROL_SEQ
            LEFT OUTER JOIN TBL_EQUIP E ON A.EQUIP_SEQ = E.EQUIP_SEQ
        WHERE 1 = 1
            AND E.EQUIP_SEQ = #{EQUIP_SEQ}
            AND A.DEL_YN = 'N'
        ORDER BY A.SORT_NUM
    </select>

    <insert id="insertMctPlan"  parameterType="java.util.HashMap" >
        INSERT INTO TBL_MCT_PLAN (
            MCT_PLAN_SEQ,
            EQUIP_SEQ,
            CONTROL_SEQ,
            CONTROL_DETAIL_SEQ,
            WORKING_TIME,
            SORT_NUM,
            INSERT_DT,
            INSERT_ID
        ) VALUES(
            IFNULL(#{MCT_PLAN_SEQ}, NEXTVAL(SEQ_MCT_PLAN)),
            #{EQUIP_SEQ},
            #{CONTROL_SEQ},
            #{CONTROL_DETAIL_SEQ},
            #{WORKING_TIME},
            (SELECT IFNULL(MAX(SORT_NUM), 0) + 1 FROM TBL_MCT_PLAN AS A WHERE 1 = 1 AND EQUIP_SEQ = #{EQUIP_SEQ} AND DEL_YN = 'N'),
            NOW(),
            #{LOGIN_USER_ID}
        ) ON DUPLICATE KEY
            UPDATE
                EQUIP_SEQ = #{EQUIP_SEQ},
                WORKING_TIME = #{WORKING_TIME},
                UPDATE_DT = NOW(),
                UPDATE_ID = #{LOGIN_USER_ID}
    </insert>
    <update id="updateMctPlan"  parameterType="java.util.HashMap" >
        UPDATE TBL_MCT_PLAN
        SET
            EQUIP_SEQ = #{EQUIP_SEQ},
            WORKING_TIME = #{WORKING_TIME},
            SORT_NUM = #{SORT_NUM},
            UPDATE_DT = NOW()
        WHERE MCT_PLAN_SEQ = #{MCT_PLAN_SEQ}
    </update>
    <delete id="deleteMctPlan" parameterType="java.util.HashMap">
        UPDATE TBL_MCT_PLAN
        SET
            UPDATE_DT = NOW(),
            <!-- UPDATE_ID = NULL, -->
            DEL_YN = 'Y'
        WHERE
            MCT_PLAN_SEQ = #{MCT_PLAN_SEQ}
    </delete>
    <delete id="deleteMctWork" parameterType="java.util.HashMap">
        UPDATE TBL_MCT_WORK
        SET
            UPDATE_DT = NOW(),
            <!-- UPDATE_ID = NULL, -->
            DEL_YN = 'Y'
        WHERE
            MCT_WORK_SEQ = (SELECT MCT_WORK_SEQ
                            FROM TBL_MCT_WORK
                            WHERE
                                DEL_YN = 'N'
                                AND CONTROL_SEQ = #{CONTROL_SEQ}
                                AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
                                AND EQUIP_SEQ = #{EQUIP_SEQ})
    </delete>

<!--    <select id="selectProcessTargetList" parameterType="java.util.HashMap" resultType="java.util.HashMap">-->
<!--        SELECT-->
<!--            ROW_NUMBER () OVER () AS ROWNUM,-->
<!--            A.CONTROL_SEQ,-->
<!--            A.CONTROL_DETAIL_SEQ,-->
<!--            A.IMG_GFILE_SEQ,-->
<!--            SF_GET_DATE_F(A.INNER_DUE_DT, 'YYYY', '') AS INNER_DUE_DT, &lt;!&ndash; 납기 &ndash;&gt;-->
<!--            CASE WHEN B.EMERGENCY_YN = 'Y' THEN '긴' END AS EMERGENCY_YN, &lt;!&ndash; 긴급 &ndash;&gt;-->
<!--            CASE WHEN B.MAIN_INSPECTION = 'Y' THEN '주' END AS MAIN_INSPECTION, &lt;!&ndash; 주요 검사품 &ndash;&gt;-->
<!--            CASE WHEN A.WORK_TYPE = 'WTP030' THEN '수' WHEN A.WORK_TYPE = 'WTP040' THEN '재' END AS WORK_NM, &lt;!&ndash; 형태 &ndash;&gt;-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 1, 'MCT_PLAN_SEQ') AS MCT_PLAN_SEQ_1,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 1, 'EQUIP_SEQ') AS EQUIP_SEQ_1,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 1, 'WORKING_TIME') AS WORKING_TIME_1,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 1, 'STATUS') AS STATUS_1,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 2, 'MCT_PLAN_SEQ') AS MCT_PLAN_SEQ_2,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 2, 'EQUIP_SEQ')  AS EQUIP_SEQ_2,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 2, 'WORKING_TIME') AS WORKING_TIME_2,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 2, 'STATUS') AS STATUS_2,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 3, 'MCT_PLAN_SEQ') AS MCT_PLAN_SEQ_3,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 3, 'EQUIP_SEQ')  AS EQUIP_SEQ_3,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 3, 'WORKING_TIME') AS WORKING_TIME_3,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 3, 'STATUS') AS STATUS_3,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 4, 'MCT_PLAN_SEQ') AS MCT_PLAN_SEQ_4,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 4, 'EQUIP_SEQ')  AS EQUIP_SEQ_4,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 4, 'WORKING_TIME') AS WORKING_TIME_4,-->
<!--            SF_GET_MCT_WORK(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 4, 'STATUS') AS STATUS_4,-->
<!--            SF_GET_CODE_NM(1009, H.POP_POSITION, #{LOGIN_LOCALE}) AS POP_POSITION, &lt;!&ndash; 현재위치 &ndash;&gt;-->
<!--            SF_GET_CODE_NM(1013, A.PART_STATUS, #{LOGIN_LOCALE}) AS PART_STATUS, &lt;!&ndash; 진행상태 &ndash;&gt;-->
<!--            SUM(CASE WHEN G.PROCESS_TYPE = 'MPR010' THEN 1 ELSE NULL END) AS PROCESS_PROGRESS_NC,	&lt;!&ndash; 가공진행현황_NC &ndash;&gt;-->
<!--            CASE WHEN G.PROCESS_TYPE = 'MPR010' AND MIN(F.WORK_STATUS) = 'DBS030' THEN 'BLUE'-->
<!--                 WHEN G.PROCESS_TYPE = 'MPR010' AND MIN(F.WORK_STATUS) IS NOT NULL THEN 'GREEN' ELSE SPACE(0) END AS PROCESS_NC_COLOR,-->
<!--            SUM(CASE WHEN G.PROCESS_TYPE = 'MPR020' THEN 1 ELSE NULL END) AS PROCESS_PROGRESS_MILLING, &lt;!&ndash; 가공진행현황_밀링 &ndash;&gt;-->
<!--            CASE WHEN G.PROCESS_TYPE = 'MPR020' AND MIN(F.WORK_STATUS) = 'DBS030' THEN 'BLUE'-->
<!--                 WHEN G.PROCESS_TYPE = 'MPR020' AND MIN(F.WORK_STATUS) IS NOT NULL THEN 'GREEN' ELSE SPACE(0) END AS PROCESS_MILLING_COLOR,-->
<!--            SUM(CASE WHEN G.PROCESS_TYPE = 'MPR030' THEN 1 ELSE NULL END) AS PROCESS_PROGRESS_RACK, &lt;!&ndash; 가공진행현황_선반 &ndash;&gt;-->
<!--            CASE WHEN G.PROCESS_TYPE = 'MPR030' AND MIN(F.WORK_STATUS) = 'DBS030' THEN 'BLUE'-->
<!--                 WHEN G.PROCESS_TYPE = 'MPR030' AND MIN(F.WORK_STATUS) IS NOT NULL THEN 'GREEN' ELSE SPACE(0) END AS PROCESS_RACK_COLOR,-->
<!--            SUM(CASE WHEN G.PROCESS_TYPE = 'MPR040' THEN 1 ELSE NULL END) AS PROCESS_PROGRESS_GRINDING, &lt;!&ndash; 가공진행현황_연마 &ndash;&gt;-->
<!--            CASE WHEN G.PROCESS_TYPE = 'MPR040' AND  MIN(F.WORK_STATUS) = 'DBS030' THEN 'BLUE'-->
<!--                 WHEN G.PROCESS_TYPE = 'MPR040' AND MIN(F.WORK_STATUS) IS NOT NULL THEN 'GREEN' ELSE SPACE(0) END AS PROCESS_GRINDING_COLOR,-->
<!--            B.CONTROL_NUM, &lt;!&ndash; 관리번호 &ndash;&gt;-->
<!--            A.PART_NUM, &lt;!&ndash; Part &ndash;&gt;-->
<!--            A.MATERIAL_DETAIL, &lt;!&ndash; 소재종류 상세 &ndash;&gt;-->
<!--            IFNULL(SF_GET_CODE_NM(1027, A.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM, &lt;!&ndash; 소재 종류 &ndash;&gt;-->
<!--            SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS ORDER_QTY, &lt;!&ndash; 수량 &ndash;&gt;-->
<!--            A.SIZE_TXT AS STANDARD_SIZE, &lt;!&ndash; 규격 &ndash;&gt;-->
<!--            SF_GET_MATERIAL_SIZE_TXT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERAIL_ORDER_SIZE, &lt;!&ndash; 소재 주문 규격 &ndash;&gt;-->
<!--            CONCAT(IFNULL(B.NOTE, SPACE(0)), IFNULL(D.ORDER_NOTE, SPACE(0))) AS NOTE, &lt;!&ndash; 비고 기록사항 &ndash;&gt;-->
<!--            SF_GET_MCT_WORK_TIME(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MCT_WORK_TIME,	&lt;!&ndash; 예상가공 시간(분) (계획 + 실행) &ndash;&gt;-->
<!--            A.MCT_NOTE, &lt;!&ndash; 가공계획 비고 &ndash;&gt;-->
<!--            A.MCT_WORK_TYPE, &lt;!&ndash; 작업 구분 &ndash;&gt;-->
<!--            H.POP_PREV_POSITION, &lt;!&ndash; 이전 위치 &ndash;&gt;-->
<!--            (SELECT TRUE-->
<!--            FROM TBL_MCT_WORK-->
<!--            WHERE-->
<!--                CONTROL_SEQ <![CDATA[<>]]> A.CONTROL_SEQ-->
<!--                AND CONTROL_DETAIL_SEQ  <![CDATA[<>]]> A.CONTROL_DETAIL_SEQ-->
<!--                AND NOT EXISTS (SELECT CONTROL_SEQ, CONTROL_DETAIL_SEQ-->
<!--                                FROM TBL_CONTROL_PART tcp-->
<!--                                WHERE-->
<!--                                    DRAWING_NUM = A.DRAWING_NUM-->
<!--                                    AND INSERT_DT >= DATE_SUB(NOW(), INTERVAL 6 MONTH))) AS PAST_WORKER_BOOL, &lt;!&ndash; 과거 경험(NC설계 기준) &ndash;&gt;-->
<!--            (SELECT WORK_USER_ID-->
<!--            FROM TBL_MCT_WORK-->
<!--            WHERE-->
<!--                (CONTROL_SEQ, CONTROL_DETAIL_SEQ) IN (SELECT CONTROL_SEQ, CONTROL_DETAIL_SEQ-->
<!--                                                      FROM TBL_CONTROL_PART-->
<!--                                                      WHERE-->
<!--                                                          DRAWING_NUM = A.DRAWING_NUM-->
<!--                                                          AND INSERT_DT >= DATE_SUB(NOW(), INTERVAL 6 MONTH))-->
<!--                AND CONTROL_SEQ <![CDATA[<>]]> A.CONTROL_SEQ-->
<!--                AND CONTROL_DETAIL_SEQ  <![CDATA[<>]]> A.CONTROL_DETAIL_SEQ-->
<!--            ORDER BY INSERT_DT DESC-->
<!--            LIMIT 1) AS PAST_WORKER, &lt;!&ndash; 과거 경험(NC설계 기준) &ndash;&gt;-->
<!--            SF_GET_DATE_F(A.STATUS_DT,'YYYY','M') AS SATAUS_DT, &lt;!&ndash; 확정 일시 &ndash;&gt;-->
<!--            SF_GET_DATE_F(D.IN_DT,'YYYY','M') AS MATERIAL_INNER_DT &lt;!&ndash; 소재 입고 일시 &ndash;&gt;-->
<!--        FROM TBL_CONTROL_PART A-->
<!--            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ-->
<!--            INNER JOIN TBL_CONTROL_PART_ORDER C ON A.CONTROL_SEQ = C.CONTROL_SEQ-->
<!--                                                   AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ-->
<!--            LEFT OUTER JOIN TBL_MATERIAL_ORDER D ON A.CONTROL_SEQ = D.CONTROL_SEQ-->
<!--                                                    AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ-->
<!--         	LEFT OUTER JOIN TBL_MCT_PLAN E ON A.CONTROL_SEQ = E.CONTROL_SEQ-->
<!--         	                                  AND A.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ-->
<!--         	LEFT OUTER JOIN TBL_MCT_WORK F ON A.CONTROL_SEQ = F.CONTROL_SEQ-->
<!--         	                                  AND A.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ-->
<!--         	LEFT OUTER JOIN TBL_EQUIP G ON E.EQUIP_SEQ = G.EQUIP_SEQ-->
<!--                                           AND F.EQUIP_SEQ = G.EQUIP_SEQ-->
<!--            LEFT OUTER JOIN TBL_POP H ON A.CONTROL_SEQ = H.CONTROL_SEQ-->
<!--                                         AND A.CONTROL_DETAIL_SEQ = H.CONTROL_DETAIL_SEQ-->
<!--        WHERE 1 = 1-->
<!--            AND B.CONTROL_STATUS = 'ORD001' &lt;!&ndash; 주문확정 &ndash;&gt;-->
<!--            AND A.PART_STATUS IN ('PRO002', 'PRO004', 'PRO005', 'PRO006', 'PRO007', 'PRO008', 'PRO008')-->
<!--        <if test="POP_POSITION != null and POP_POSITION != ''">-->
<!--            AND H.POP_POSITION = #{POP_POSITION}-->
<!--        </if>-->
<!--        <if test="MATERIAL_DETAIL != null and MATERIAL_DETAIL != ''">-->
<!--            AND A.MATERIAL_DETAIL = #{MATERIAL_DETAIL}-->
<!--        </if>-->
<!--        <if test="PROGRESS != null and PROGRESS != ''">-->
<!--            AND A.PART_STATUS = #{PROGRESS}-->
<!--        </if>-->
<!--        <if test="MCT_WORK_TYPE != null and MCT_WORK_TYPE!= ''">-->
<!--            AND A.MCT_WORK_TYPE = #{MCT_WORK_TYPE}-->
<!--        </if>-->
<!--        GROUP BY-->
<!--            A.CONTROL_SEQ,-->
<!--            A.CONTROL_DETAIL_SEQ-->
<!--        ORDER BY-->
<!--            B.CONTROL_NUM,-->
<!--            IFNULL(A.PART_NUM, 0),-->
<!--            A.INNER_DUE_DT-->
<!--    </select>-->

    <select id="selectWorkPlanGridList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, B.CONTROL_NUM, A.DRAWING_NUM, A.DXF_GFILE_SEQ, A.PDF_GFILE_SEQ, A.IMG_GFILE_SEQ,
            CASE WHEN A.PART_NUM IS NULL THEN B.CONTROL_NUM ELSE CONCAT(B.CONTROL_NUM, ' #', A.PART_NUM) END AS CONTROL_NUM_PART_NUM,
            jmes.SF_GET_DATE_F(A.INNER_DUE_DT, '', '') AS INNER_DUE_DT, <!-- 내부가공납기 -->
            CASE WHEN IFNULL(B.EMERGENCY_YN, 'N') = 'Y' THEN '긴' ELSE SPACE(0) END AS EMERGENCY_YN, <!-- 긴급 -->
            CASE WHEN IFNULL(B.MAIN_INSPECTION, 'N') = 'Y' THEN '주' ELSE SPACE(0) END AS MAIN_INSPECTION, <!-- 주요 검사품 -->
            CASE WHEN A.WORK_TYPE = 'WTP030' THEN '수' WHEN A.WORK_TYPE = 'WTP040' THEN '재' ELSE SPACE(0) END AS WORK_NM, <!-- 형태 -->
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 'MCT_PLAN_SEQ') AS MCT_PLAN_SEQ,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 'EQUIP_SEQ') AS EQUIP_SEQ,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 'EQUIP_ID') AS EQUIP_NM,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 'WORKING_TIME') AS WORKING_TIME,  <!-- MCT 계획 시간 -->
            <!-- C.POP_POSITION_NM AS POP_POSITION,  현재위치 -->
            SF_GET_CODE_NM('1009', C.POP_POSITION, #{LOGIN_LOCALE}) AS POP_POSITION, <!-- 현재위치 -->
            SF_GET_CODE_NM('1013', A.PART_STATUS, #{LOGIN_LOCALE}) AS PART_STATUS, <!-- 진행상태 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            A.PART_NUM, <!-- Part -->
            A.MATERIAL_DETAIL, <!-- 소재종류 상세 -->
            IFNULL(SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM, <!-- 소재 종류 -->
            jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS ORDER_QTY, <!-- 수량 -->
            A.SIZE_TXT AS STANDARD_SIZE, <!-- 규격 -->
            jmes.SF_GET_MATERIAL_SIZE_TXT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERAIL_ORDER_SIZE, <!-- 소재 주문 규격 -->
            B.NOTE AS CONTROL_NOTE, <!-- 비고 기록사항(주문 확정 비고) -->
            A.MCT_NOTE, <!-- 가공계획 비고 -->
            A.MCT_WORK_TYPE, <!-- MCT 작업 구분 -->
            IFNULL(SF_GET_CODE_NM('1011', A.MCT_WORK_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS MCT_WORK_TYPE_NM, <!-- MCT 작업 구분 이름 -->
            <!-- N.POP_POSITION_NM AS POP_PREV_POSITION, 이전 위치 -->
            SF_GET_CODE_NM('1009', N.POP_POSITION, #{LOGIN_LOCALE}) AS POP_PREV_POSITION, <!-- 이전 위치 -->
            <!-- SF_GET_POP_PREV_POSITION(2, 'NM', A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS POP_PREV_POSITION,  이전 위치 -->
            (
                SELECT CONCAT(CEILING(SF_GET_MCT_WORK_TIME(I.CONTROL_SEQ, I.CONTROL_DETAIL_SEQ) / SF_GET_CONTROL_PART_QTY(I.CONTROL_SEQ, I.CONTROL_DETAIL_SEQ)), '분')
                FROM jmes.TBL_CONTROL H, jmes.TBL_CONTROL_PART I, jmes.TBL_MCT_WORK J
                WHERE 1 = 1
                    AND H.CONTROL_SEQ = I.CONTROL_SEQ
                    AND H.DEL_YN = 'N'
                    AND I.CONTROL_SEQ = J.CONTROL_SEQ
                    AND I.CONTROL_DETAIL_SEQ = J.CONTROL_DETAIL_SEQ
                    AND I.DRAWING_NUM = A.DRAWING_NUM
                    AND H.OUT_FINISH_DT IS NOT NULL
                GROUP BY I.DRAWING_NUM
                ORDER BY J.MCT_WORK_SEQ DESC
                LIMIT 1
            ) AS LAST_UNIT_LEAD_TIME,
            (
                SELECT SF_GET_DATE_F(J.WORK_START_DT,'YY','M')
                FROM jmes.TBL_CONTROL H, jmes.TBL_CONTROL_PART I, jmes.TBL_MCT_WORK J
                WHERE 1 = 1
                    AND H.CONTROL_SEQ = I.CONTROL_SEQ
                    AND H.DEL_YN = 'N'
                    AND I.CONTROL_SEQ = J.CONTROL_SEQ
                    AND I.CONTROL_DETAIL_SEQ = J.CONTROL_DETAIL_SEQ
                    AND I.DRAWING_NUM = A.DRAWING_NUM
                    AND H.OUT_FINISH_DT IS NOT NULL
                GROUP BY I.DRAWING_NUM
                ORDER BY J.MCT_WORK_SEQ DESC
                LIMIT 1
            ) AS LAST_MCT_START_DT,
            (
            	SELECT K.USER_NM
            	FROM jmes.TBL_CONTROL H, jmes.TBL_CONTROL_PART I, jmes.TBL_MCT_WORK J, jmes.TBL_USER K
        		WHERE H.CONTROL_SEQ = I.CONTROL_SEQ AND H.DEL_YN = 'N'
        			AND I.CONTROL_SEQ = J.CONTROL_SEQ AND I.CONTROL_DETAIL_SEQ = J.CONTROL_DETAIL_SEQ
        			AND J.UPDATE_ID = K.USER_ID AND I.DRAWING_NUM = A.DRAWING_NUM
        			AND H.OUT_FINISH_DT IS NOT NULL
        		GROUP BY I.DRAWING_NUM
        		ORDER BY J.MCT_WORK_SEQ DESC
        		LIMIT 1
            ) AS LAST_MCT_WORK_USER,
            jmes.SF_GET_DATE_F(A.STATUS_DT, '', '') AS CONTROL_STATUS_DT, <!-- 확정 일시 -->
            jmes.SF_GET_MATERIAL_RECEIPT_DT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERIAL_RECEIPT_DT <!-- 소재 입고 일시 -->
        FROM jmes.TBL_CONTROL_PART A
            INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                 AND B.DEL_YN = 'N' AND B.CONTROL_STATUS = 'ORD001' AND B.OUT_FINISH_DT IS NULL
            LEFT OUTER JOIN jmes.TBL_POP C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                <if test="POP_POSITION != null and POP_POSITION != ''">
                    AND C.POP_POSITION = #{POP_POSITION}
                </if>
                AND C.POP_SEQ = (SELECT MAX(K.POP_SEQ) FROM jmes.TBL_POP K WHERE K.CONTROL_SEQ = C.CONTROL_SEQ
                                   AND K.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ GROUP BY K.CONTROL_SEQ, K.CONTROL_DETAIL_SEQ
                )
             LEFT OUTER JOIN jmes.TBL_POP N ON A.CONTROL_SEQ = N.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = N.CONTROL_DETAIL_SEQ
                                                AND N.POP_SEQ = (   SELECT LAG(O.POP_SEQ, 1) OVER(PARTITION BY O.CONTROL_SEQ, O.CONTROL_DETAIL_SEQ ORDER BY O.POP_SEQ) AS POP_SEQ
                                                                    FROM jmes.TBL_POP O
                                                				    WHERE N.CONTROL_SEQ = O.CONTROL_SEQ
                                                                        AND N.CONTROL_DETAIL_SEQ = O.CONTROL_DETAIL_SEQ ORDER BY O.POP_SEQ DESC LIMIT 1
                                                                )
             LEFT OUTER JOIN (
                SELECT
                    A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, C.EQUIP_NM, A.WORK_USER_ID,
                    IFNULL(SF_GET_CODE_NM('1010', C.PROCESS_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS NC_WORK_TYPE,
                    IFNULL(SF_GET_DRAWING_WORK_TIME('WORK', A.MCT_WORK_SEQ), 0) AS WORKING_TIME
                FROM TBL_MCT_WORK A
                    INNER JOIN jmes.TBL_EQUIP C ON A.EQUIP_SEQ = C.EQUIP_SEQ AND C.PROCESS_TYPE = 'MPR010'
                WHERE 1 = 1
                    AND A.WORK_FINISH_DT IS NOT NULL
                    AND A.DEL_YN = 'N'
                    AND A.MCT_WORK_SEQ IN (SELECT MAX(X.MCT_WORK_SEQ) FROM TBL_MCT_WORK X
                                           WHERE  X.DEL_YN = 'N' AND X.WORK_FINISH_DT IS NOT NULL
                                           GROUP BY X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ)
             ) Z ON A.CONTROL_SEQ = Z.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = Z.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
            AND IFNULL(A.WORK_TYPE, SPACE(0)) != 'WTP020' <!-- 조립이 아닌경우 -->
            <if test="EQUIP_SEQ != null and EQUIP_SEQ != ''">
                AND EXISTS (SELECT 1 FROM jmes.TBL_MCT_WORK D, jmes.TBL_EQUIP E WHERE A.CONTROL_SEQ = D.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ AND D.DEL_YN = 'N'
                    AND E.EQUIP_SEQ = D.EQUIP_SEQ AND E.DEL_YN = 'N'
                    AND E.EQUIP_SEQ = #{EQUIP_SEQ}
                )
            </if>
            <choose>
                <when  test="INCLUDE_PROCESSING !='' and INCLUDE_PROCESSING != null">
                    AND A.PART_STATUS IN ('PRO002', 'PRO004', 'PRO005', 'PRO006', 'PRO007', 'PRO008', 'PRO009', 'PRO019', 'PRO012', 'PRO013', 'PRO014', 'PRO015', 'PRO018', 'PRO019')
                </when>
                <otherwise>
                    AND A.PART_STATUS IN ('PRO002', 'PRO004', 'PRO005', 'PRO006', 'PRO007', 'PRO008', 'PRO019')
                </otherwise>
            </choose>
            AND B.CONTROL_STATUS = 'ORD001' <!-- 확정 -->
            <if test="WORK_FACTORY != null and WORK_FACTORY!= ''">
                AND A.WORK_FACTORY = #{WORK_FACTORY}
            </if>
            <if test="MATERIAL_DETAIL != null and MATERIAL_DETAIL != ''">
                AND A.MATERIAL_DETAIL = #{MATERIAL_DETAIL}
            </if>
            <if test="PART_STATUS != null and PART_STATUS != ''">
                AND A.PART_STATUS = #{PART_STATUS}
            </if>
            <if test="MCT_WORK_TYPE != null and MCT_WORK_TYPE!= ''">
                AND A.MCT_WORK_TYPE = #{MCT_WORK_TYPE}
            </if>
            <if test="PLAN_ONLY != null and PLAN_ONLY != ''">
                AND (A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) IN ( SELECT Q.CONTROL_SEQ, Q.CONTROL_DETAIL_SEQ
                                                               FROM TBL_CONTROL_PART Q
                                                                    INNER JOIN TBL_MCT_PLAN R ON Q.CONTROL_SEQ = R.CONTROL_SEQ
                                                                                                     AND Q.CONTROL_DETAIL_SEQ = R.CONTROL_DETAIL_SEQ
                                                                                                     AND R.DEL_YN = 'N'
                                                                    GROUP BY Q.CONTROL_SEQ, Q.CONTROL_DETAIL_SEQ)
                AND (A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) NOT IN (  SELECT Q.CONTROL_SEQ, Q.CONTROL_DETAIL_SEQ
                                                                    FROM TBL_CONTROL_PART Q
                                                                        INNER JOIN TBL_MCT_WORK R ON Q.CONTROL_SEQ = R.CONTROL_SEQ
                                                                                                     AND Q.CONTROL_DETAIL_SEQ = R.CONTROL_DETAIL_SEQ
                                                                                                     AND R.WORK_STATUS IS NOT NULL
                                                                                                     AND R.DEL_YN = 'N'
                                                                    GROUP BY Q.CONTROL_SEQ, Q.CONTROL_DETAIL_SEQ)
            </if>
            <if test="INCLUDE_OUTSIDE == null">
                AND A.OUTSIDE_YN = 'N' <!-- 외주 요청이 아닌경우 -->
            </if>
        GROUP BY A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ
        ORDER BY B.CONTROL_NUM, IFNULL(A.PART_NUM, 0), A.INNER_DUE_DT
    </select>

    <update id="updateMctTarget"  parameterType="java.util.HashMap" >
        UPDATE TBL_CONTROL_PART
        SET
            MCT_NOTE = #{MCT_NOTE},
            MCT_WORK_TYPE = #{MCT_WORK_TYPE}
        WHERE
            CONTROL_SEQ = #{CONTROL_SEQ}
            AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </update>

    <update id="updateMctPlanFromTarget"  parameterType="java.util.HashMap" >
        UPDATE TBL_MCT_PLAN
        SET
            WORKING_TIME = #{WORKING_TIME},
            UPDATE_DT = NOW()
        WHERE MCT_PLAN_SEQ = #{MCT_PLAN_SEQ}
    </update>

    <select id="selectCamWorkHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!-- Group by 확인필요 !!!-->
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.DXF_GFILE_SEQ, A.PDF_GFILE_SEQ, A.IMG_GFILE_SEQ,
            jmes.SF_GET_DATE_F(A.INNER_DUE_DT, 'YY', '') AS INNER_DUE_DT, <!-- 내부가공납기 -->
            jmes.SF_GET_DATE_F(A.INNER_WORK_FINISH_DT, 'YY', '') AS INNER_WORK_FINISH_DT, <!-- 가공납기 -->
            CASE WHEN IFNULL(B.EMERGENCY_YN, 'N') = 'Y' THEN '긴' ELSE SPACE(0) END AS EMERGENCY_YN, <!-- 긴급 -->
            CASE WHEN IFNULL(B.MAIN_INSPECTION, 'N') = 'Y' THEN '주' ELSE SPACE(0) END AS MAIN_INSPECTION, <!-- 주요 검사품 -->
            CASE WHEN A.WORK_TYPE = 'WTP030' THEN '수' WHEN A.WORK_TYPE = 'WTP040' THEN '재' END AS WORK_NM, <!-- 형태 -->
            R.ITEM_NM, <!-- 품명 -->
            jmes.SF_GET_CODE_NM('1009', C.POP_POSITION, #{LOGIN_LOCALE}) AS POP_POSITION, <!-- 현재위치 -->
            jmes.SF_GET_CODE_NM('1013', A.PART_STATUS, #{LOGIN_LOCALE}) AS PART_STATUS, <!-- 진행상태 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            IFNULL(A.PART_NUM, SPACE(0)) AS PART_NUM, <!-- Part -->
            A.MATERIAL_DETAIL, <!-- 소재종류 상세 -->
            IFNULL(SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM, <!-- 소재 종류 -->
            IFNULL(jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ), 0) AS ORDER_QTY, <!-- 수량 -->
            IFNULL(A.DRAWING_NUM, SPACE(0)) AS DRAWING_NUM, <!-- 도면번호 -->
            IFNULL(A.DRAWING_VER, SPACE(0)) AS DRAWING_VER, <!-- 도면번호 버전 -->
            A.SIZE_TXT AS STANDARD_SIZE, <!-- 규격 -->
            jmes.SF_GET_MATERIAL_SIZE_TXT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERAIL_ORDER_SIZE,	<!-- 소재 주문 규격 -->
            IFNULL(H.SEQ, SPACE(0)) AS CAM_STEP, <!-- CAM 스탭 -->
            SF_GET_CODE_NM('1080', H.WORK_DIRECTION, #{LOGIN_LOCALE}) AS WORK_DIRECTION, <!-- CAM 가공위치 -->
            H.WORK_DESC, -- CAM 작업 내용 -->
            CASE WHEN G.START_DT IS NOT NULL AND G.FINISH_DT IS NOT NULL THEN 'CWS030'
                WHEN G.START_DT IS NOT NULL AND G.FINISH_DT IS NULL THEN 'CWS020'
                ELSE 'CWS010'
            END CAM_STATUS, <!-- CAM 상태 -->
            (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = H.WORK_USER_ID) AS WORK_USER_NM, <!-- CAM 작업자 -->
            CASE WHEN H.CAM_GFILE_SEQ IS NOT NULL THEN (SELECT FILE_SEQ FROM TBL_FILE I WHERE H.CAM_GFILE_SEQ = I.GFILE_SEQ AND I.FILE_KIND = 'EXC') ELSE SPACE(0) END CAM_FILE_SEQ, -- CAM FILE -->
            CASE WHEN H.CAM_GFILE_SEQ IS NOT NULL THEN (SELECT FILE_SEQ FROM TBL_FILE I WHERE H.CAM_GFILE_SEQ = I.GFILE_SEQ AND I.FILE_KIND = 'EXN') ELSE SPACE(0) END NC_FILE_SEQ, -- NC FILE -->
            CONCAT(IFNULL(G.HISTORY_NOTE, SPACE(0)), IFNULL(G.NOTE, SPACE(0))) AS CAM_WORK_NOTE,    <!-- CAM 작업 기록 및 비고 공유 사항 -->
            Z.EQUIP_NM, Z.WORKING_TIME, Z.NC_WORK_TYPE,
            (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = Z.WORK_USER_ID) AS NC_WORK_USER_NM <!-- CAM 작업자 -->
        FROM jmes.TBL_CONTROL_PART A
            INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.CONTROL_STATUS = 'ORD001' <!-- 주문확정 -->
			INNER JOIN jmes.TBL_CONTROL_PART_ORDER_MAIN R ON B.CONTROL_SEQ = R.CONTROL_SEQ
            LEFT OUTER JOIN jmes.TBL_POP C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                AND C.POP_SEQ = (SELECT MAX(C.POP_SEQ) FROM jmes.TBL_POP K WHERE K.CONTROL_SEQ = C.CONTROL_SEQ
                                                                             AND K.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ GROUP BY C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ
            )
            INNER JOIN jmes.TBL_CAM G ON G.CONTROL_SEQ = A.CONTROL_SEQ AND G.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ AND G.FINISH_DT IS NOT NULL
            INNER JOIN jmes.TBL_CAM_DETAIL H ON G.CAM_SEQ = H.CAM_SEQ AND H.SEQ = (SELECT MAX(I.SEQ) FROM jmes.TBL_CAM_DETAIL I WHERE H.CAM_SEQ = I.CAM_SEQ GROUP BY I.CAM_SEQ)
            LEFT OUTER JOIN (
                SELECT
                    A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, C.EQUIP_NM, A.WORK_USER_ID,
                    IFNULL(SF_GET_CODE_NM('1010', C.PROCESS_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS NC_WORK_TYPE,
                    IFNULL(SF_GET_DRAWING_WORK_TIME('WORK', A.MCT_WORK_SEQ), 0) AS WORKING_TIME
                FROM TBL_MCT_WORK A
                    INNER JOIN jmes.TBL_EQUIP C ON A.EQUIP_SEQ = C.EQUIP_SEQ
                        AND C.PROCESS_TYPE = 'MPR010'
                WHERE 1 = 1
                    AND A.WORK_FINISH_DT IS NOT NULL
                    AND A.DEL_YN = 'N'
                    AND A.MCT_WORK_SEQ IN (SELECT MAX(X.MCT_WORK_SEQ) FROM TBL_MCT_WORK X
                                            WHERE  X.DEL_YN = 'N' AND X.WORK_FINISH_DT IS NOT NULL
                                          GROUP BY X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ
                    )
            ) Z ON A.CONTROL_SEQ = Z.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = Z.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
            <if test="FACTORY_AREA != null and FACTORY_AREA != ''">
                AND E.FACTORY_AREA = #{FACTORY_AREA}
            </if>
            <if test="EQUIP_SEQ != null and EQUIP_SEQ != ''">
                AND E.EQUIP_SEQ = #{EQUIP_SEQ}
            </if>
            <if test="MATERIAL_DETAIL != null and MATERIAL_DETAIL != ''">
                AND A.MATERIAL_DETAIL = #{MATERIAL_DETAIL}
            </if>
            <if test="SURFACE_TREAT != null and SURFACE_TREAT != ''">
                AND A.SURFACE_TREAT = #{SURFACE_TREAT}
            </if>
            <if test="MATERIAL_TYPE != null and MATERIAL_TYPE != ''">
                AND A.MATERIAL_TYPE = #{MATERIAL_TYPE}
            </if>
            <if test="CONTROL_NUM != null and CONTROL_NUM != ''">
                AND UPPER(B.CONTROL_NUM) LIKE CONCAT('%', UPPER(#{CONTROL_NUM}), '%')
            </if>
            <if test="DRAWING_NUM != null and DRAWING_NUM != ''">
                AND UPPER(A.DRAWING_NUM) LIKE CONCAT('%', UPPER(#{DRAWING_NUM}), '%')
            </if>
            <if test="MATERIAL_KIND != null and MATERIAL_KIND != ''">
                AND A.MATERIAL_KIND = #{MATERIAL_KIND}
            </if>
            <if test="WORK_TYPE != null and WORK_TYPE != ''">
                AND A.WORK_TYPE = #{WORK_TYPE}
            </if>
            <if test="WORK_USER_ID != null and WORK_USER_ID != ''">
                AND D.WORK_USER_ID = #{WORK_USER_ID}
            </if>
            <choose>
                <when test="CAM_WORK_HISTORY_CONDITION == 1">
                    AND A.UPDATE_DT BETWEEN STR_TO_DATE(#{mct_nc_execute_history_start_dt}, '%Y/%m/%d') AND STR_TO_DATE(#{mct_nc_execute_history_end_dt}, '%Y/%m/%d')
                </when>
                <when test="CAM_WORK_HISTORY_CONDITION == 2">
                    AND EXISTS (SELECT 1 FROM TBL_CONTROL_PART_PROGRESS P
                        WHERE A.CONTROL_SEQ = P.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = P.CONTROL_DETAIL_SEQ AND P.PART_STATUS = 'PRO002' <!-- 가공 확정 존재 유무 주문 -->
                            AND P.STATUS_DT BETWEEN STR_TO_DATE(#{mct_nc_execute_history_start_dt}, '%Y/%m/%d') AND STR_TO_DATE(#{mct_nc_execute_history_end_dt}, '%Y/%m/%d')
                            AND P.SEQ > IFNULL((SELECT MAX(E.SEQ) FROM TBL_CONTROL_PART_PROGRESS E
                                WHERE P.CONTROL_SEQ = E.CONTROL_SEQ AND P.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ AND E.PART_STATUS IS NULL), 0
                            )
                    )
                </when>
            </choose>
        GROUP BY A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ
        ORDER BY B.CONTROL_NUM, IFNULL(A.PART_NUM, 0), A.INNER_DUE_DT
    </select>

    <select id="selectCamWorkHistoryList_BACKUP" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.DXF_GFILE_SEQ, A.PDF_GFILE_SEQ, A.IMG_GFILE_SEQ,
            jmes.SF_GET_DATE_F(A.INNER_DUE_DT, 'YY', '') AS INNER_DUE_DT, <!-- 내부가공납기 -->
            CASE WHEN IFNULL(B.EMERGENCY_YN, 'N') = 'Y' THEN '긴' ELSE SPACE(0) END AS EMERGENCY_YN, <!-- 긴급 -->
            CASE WHEN IFNULL(B.MAIN_INSPECTION, 'N') = 'Y' THEN '주' ELSE SPACE(0) END AS MAIN_INSPECTION, <!-- 주요 검사품 -->
            CASE WHEN A.WORK_TYPE = 'WTP030' THEN '수' WHEN A.WORK_TYPE = 'WTP040' THEN '재' END AS WORK_NM, <!-- 형태 -->
            A.ITEM_NM, <!-- 품명 -->
            SF_GET_CODE_NM('1009', C.POP_POSITION, #{LOGIN_LOCALE}) AS POP_POSITION, <!-- 현재위치 -->
            SF_GET_CODE_NM('1013', A.PART_STATUS, #{LOGIN_LOCALE}) AS PART_STATUS, <!-- 진행상태 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            IFNULL(A.PART_NUM, SPACE(0)) AS PART_NUM, <!-- Part -->
            A.MATERIAL_DETAIL, <!-- 소재종류 상세 -->
            IFNULL(SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM, <!-- 소재 종류 -->
            IFNULL(jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ), 0) AS ORDER_QTY, <!-- 수량 -->
            IFNULL(A.ORIGINAL_SIDE_QTY, SPACE(0)) AS ORIGINAL_SIDE_QTY, <!-- 대칭_원칭 -->
            IFNULL(A.OTHER_SIDE_QTY, SPACE(0)) AS OTHER_SIDE_QTY, <!-- 대칭_대칭 -->
            IFNULL(A.DRAWING_NUM, SPACE(0)) AS DRAWING_NUM, <!-- 도면번호 -->
            IFNULL(A.DRAWING_VER, SPACE(0)) AS DRAWING_VER, <!-- 도면번호 버전 -->
            A.SIZE_TXT AS STANDARD_SIZE, <!-- 규격 -->
            jmes.SF_GET_MATERIAL_SIZE_TXT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERAIL_ORDER_SIZE,	<!-- 소재 주문 규격 -->
            A.SURFACE_TREAT, <!-- 표면처리 -->
            SF_GET_CODE_NM('1039', A.SURFACE_TREAT, #{LOGIN_LOCALE}) AS SURFACE_TREAT_NM,  <!-- 표면 처리 -->
            B.NOTE AS CONTROL_NOTE, <!-- 주문 확정 비고 -->
            jmes.SF_GET_MCT_WORK_TIME(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MCT_WORK_TIME,	<!-- 작업 시간 (계획 + 실행) -->
            A.MCT_WORK_TYPE, <!-- MCT 작업 구분 -->
            A.MCT_NOTE, <!-- MCT 가공계획 비고 -->
            IFNULL(SF_GET_CODE_NM('1011', A.MCT_WORK_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS MCT_WORK_TYPE_NM, <!-- MCT 작업 구분 이름 -->
            CASE WHEN G.START_DT IS NOT NULL AND G.FINISH_DT IS NOT NULL THEN 'CWS030'
                WHEN G.START_DT IS NOT NULL AND G.FINISH_DT IS NULL THEN 'CWS020'
                ELSE 'CWS010'
            END CAM_STATUS, <!-- CAM 상태 -->
            G.CAM_SEQ, <!-- CAM 마스터 번호 -->
            IFNULL(H.SEQ, SPACE(0)) AS CAM_STEP, <!-- CAM 스탭 -->
            SF_GET_CODE_NM('1080', H.WORK_DIRECTION, #{LOGIN_LOCALE}) AS WORK_DIRECTION, <!-- CAM 가공위치 -->
            H.WORK_DESC, <!-- CAM 작업 내용 -->
            (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = H.WORK_USER_ID) AS WORK_USER_NM, <!-- CAM 작업자 -->
            CASE WHEN H.CAM_GFILE_SEQ IS NOT NULL THEN (SELECT FILE_SEQ FROM TBL_FILE I WHERE H.CAM_GFILE_SEQ = I.GFILE_SEQ AND I.FILE_KIND = 'EXC') ELSE SPACE(0) END CAM_FILE_SEQ, <!-- CAM FILE -->
            CASE WHEN H.CAM_GFILE_SEQ IS NOT NULL THEN (SELECT FILE_SEQ FROM TBL_FILE I WHERE H.CAM_GFILE_SEQ = I.GFILE_SEQ AND I.FILE_KIND = 'EXN') ELSE SPACE(0) END NC_FILE_SEQ, <!-- NC FILE -->
            G.HISTORY_NOTE,  <!-- CAM 기록사항 -->
            G.NOTE, <!-- CAM 비고 및 공유사항 -->
            CONCAT(IFNULL(G.HISTORY_NOTE, SPACE(0)), IFNULL(G.NOTE, SPACE(0))) AS CAM_WORK_NOTE,    <!-- CAM 작업 기록 및 비고 공유 사항 -->
            jmes.SF_GET_DATE_F(G.START_DT, '', 'M') AS CAM_START_DT, <!-- CAM 시작 일시, -->
            jmes.SF_GET_DATE_F(G.FINISH_DT, '', 'M') AS CAM_FINISH_DT, <!-- CAM 종료 일시, -->
            <!-- N.POP_POSITION_NM AS POP_PREV_POSITION, 이전 위치 -->
            SF_GET_CODE_NM('1009', C.POP_PREV_POSITION, #{LOGIN_LOCALE}) AS POP_PREV_POSITION, <!-- 이전 위치 -->
            <!-- SF_GET_POP_PREV_POSITION(2, 'NM', A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS POP_PREV_POSITION,  이전 위치 -->
            jmes.SF_GET_DATE_F(A.STATUS_DT, '', 'M') AS SATAUS_DT, <!-- 확정 일시 -->
            jmes.SF_GET_MATERIAL_RECEIPT_DT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERIAL_RECEIPT_DT, <!-- 소재 입고 일시 -->
            J.INSPECT_SEQ AS INSPECT_STEP, <!-- 품질 스탭 -->
            SF_GET_CODE_NM('1040', J.INSPECT_GRADE, #{LOGIN_LOCALE}) AS INSPECT_GRADE,
            CASE WHEN J.INSPECT_RESULT LIKE 'QCC%' THEN SF_GET_CODE_NM('1019', J.INSPECT_RESULT, #{LOGIN_LOCALE})
                 WHEN J.INSPECT_RESULT LIKE 'QCD%' THEN SF_GET_CODE_NM('1020', J.INSPECT_RESULT, #{LOGIN_LOCALE})
                 ELSE SPACE(0)
                END AS INSPECT_RESULT,	<!-- 불량 코드 -->
            J.ERROR_QTY, <!-- 불량 수량 -->
            SF_GET_CODE_NM('1032', J.ERROR_REASON, #{LOGIN_LOCALE}) AS ERROR_REASON, <!-- 불량 원인 -->
            J.ERROR_NOTE, <!-- 불량 조치방안 -->
            jmes.SF_GET_DATE_F(J.INSERT_DT, '', '') AS INSPECT_DT, <!-- 품질현황 -->
            K.MCT_PLAN_SEQ, <!-- 계획 장비 번호 -->
            K.EQUIP_SEQ, <!-- 계획 장비 번호 -->
            L.EQUIP_ID, <!-- 계획 장비 아이디 -->
            L.EQUIP_NM AS MCT_PLAN_EQUIP_NM, <!-- 계획 장비 -->
            K.WORKING_TIME AS WORKING_TIME, <!-- MCT 계획 시간 -->
            ( SELECT CONCAT(jmes.SF_GET_DATE_F(Q.INSERT_DT,'YYYY',''),' / ',(SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = Q.WORK_USER_ID))
              FROM jmes.TBL_CAM P, jmes.TBL_CAM_DETAIL Q, jmes.TBL_CONTROL_PART R
              WHERE P.CAM_SEQ = Q.CAM_SEQ
                AND P.CONTROL_SEQ = R.CONTROL_SEQ
                AND P.CONTROL_DETAIL_SEQ = R.CONTROL_DETAIL_SEQ
                AND R.DRAWING_NUM = A.DRAWING_NUM
              ORDER BY Q.SEQ DESC
              LIMIT 1
            ) AS WORK_HISTORY_INFO <!-- 과거 경험 -->
        FROM jmes.TBL_CONTROL_PART A
            INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.CONTROL_STATUS = 'ORD001' <!-- 주문확정 -->
            LEFT OUTER JOIN jmes.TBL_POP C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                AND C.POP_SEQ = (SELECT MAX(C.POP_SEQ) FROM jmes.TBL_POP K WHERE K.CONTROL_SEQ = C.CONTROL_SEQ
                                                                             AND K.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ GROUP BY C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ
                )
            LEFT OUTER JOIN jmes.TBL_MCT_WORK D ON A.CONTROL_SEQ = D.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ AND D.DEL_YN = 'N'
                AND D.WORK_FINISH_DT IS NOT NULL
            LEFT OUTER JOIN jmes.TBL_EQUIP E ON E.EQUIP_SEQ = D.EQUIP_SEQ
            LEFT OUTER JOIN jmes.TBL_CODE F ON F.CODE_CD = D.WORK_STATUS AND F.HIGH_CD = '1079'
            INNER JOIN jmes.TBL_CAM G ON G.CONTROL_SEQ = A.CONTROL_SEQ AND G.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ AND G.FINISH_DT IS NOT NULL
            INNER JOIN jmes.TBL_CAM_DETAIL H ON G.CAM_SEQ = H.CAM_SEQ AND H.SEQ = (SELECT MAX(I.SEQ) FROM jmes.TBL_CAM_DETAIL I WHERE H.CAM_SEQ = I.CAM_SEQ GROUP BY I.CAM_SEQ)
            LEFT OUTER JOIN jmes.TBL_INSPECT J ON A.CONTROL_SEQ = J.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = J.CONTROL_DETAIL_SEQ AND J.INSPECT_TYPE = '1'
                AND J.INSPECT_SEQ = (SELECT MAX(INSPECT_SEQ) FROM jmes.TBL_INSPECT I WHERE J.CONTROL_SEQ = I.CONTROL_SEQ AND J.CONTROL_DETAIL_SEQ = I.CONTROL_DETAIL_SEQ AND I.INSPECT_TYPE = '1')
            LEFT OUTER JOIN TBL_MCT_PLAN K ON A.CONTROL_SEQ = K.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = K.CONTROL_DETAIL_SEQ AND K.DEL_YN = 'N'
            LEFT OUTER JOIN jmes.TBL_EQUIP L ON K.EQUIP_SEQ = L.EQUIP_SEQ
        WHERE 1 = 1
            <if test="FACTORY_AREA != null and FACTORY_AREA != ''">
                AND E.FACTORY_AREA = #{FACTORY_AREA}
            </if>
            <if test="EQUIP_SEQ != null and EQUIP_SEQ != ''">
                AND E.EQUIP_SEQ = #{EQUIP_SEQ}
            </if>
            <if test="MATERIAL_DETAIL != null and MATERIAL_DETAIL != ''">
                AND A.MATERIAL_DETAIL = #{MATERIAL_DETAIL}
            </if>
            <if test="SURFACE_TREAT != null and SURFACE_TREAT != ''">
                AND A.SURFACE_TREAT = #{SURFACE_TREAT}
            </if>
            <if test="MATERIAL_TYPE != null and MATERIAL_TYPE != ''">
                AND A.MATERIAL_TYPE = #{MATERIAL_TYPE}
            </if>
            <if test="CONTROL_NUM != null and CONTROL_NUM != ''">
                AND UPPER(B.CONTROL_NUM) LIKE CONCAT('%', UPPER(#{CONTROL_NUM}), '%')
            </if>
            <if test="DRAWING_NUM != null and DRAWING_NUM != ''">
                AND UPPER(A.DRAWING_NUM) LIKE CONCAT('%', UPPER(#{DRAWING_NUM}), '%')
            </if>
            <if test="MATERIAL_KIND != null and MATERIAL_KIND != ''">
                AND A.MATERIAL_KIND = #{MATERIAL_KIND}
            </if>
            <if test="WORK_TYPE != null and WORK_TYPE != ''">
                AND A.WORK_TYPE = #{WORK_TYPE}
            </if>
            <if test="WORK_USER_ID != null and WORK_USER_ID != ''">
                AND D.WORK_USER_ID = #{WORK_USER_ID}
            </if>
            <choose>
                <when test="CAM_WORK_HISTORY_CONDITION == 1">
                    AND A.UPDATE_DT BETWEEN STR_TO_DATE(#{mct_nc_execute_history_start_dt}, '%Y/%m/%d') AND STR_TO_DATE(#{mct_nc_execute_history_end_dt}, '%Y/%m/%d')
                </when>
                <when test="CAM_WORK_HISTORY_CONDITION == 2">
                    AND EXISTS (SELECT 1 FROM TBL_CONTROL_PART_PROGRESS P
                        WHERE A.CONTROL_SEQ = P.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = P.CONTROL_DETAIL_SEQ AND P.PART_STATUS = 'PRO002' -- 가공 확정 존재 유무 주문 -->
                            AND P.STATUS_DT BETWEEN STR_TO_DATE(#{mct_nc_execute_history_start_dt}, '%Y/%m/%d') AND STR_TO_DATE(#{mct_nc_execute_history_end_dt}, '%Y/%m/%d')
                            AND P.SEQ > IFNULL((SELECT MAX(E.SEQ) FROM TBL_CONTROL_PART_PROGRESS E
                                WHERE P.CONTROL_SEQ = E.CONTROL_SEQ AND P.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ AND E.PART_STATUS IS NULL), 0
                            )
                    )
                </when>
            </choose>
        GROUP BY A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ
        ORDER BY B.CONTROL_NUM, IFNULL(A.PART_NUM, 0), A.INNER_DUE_DT
    </select>

    <!-- MCT 수행이력 관리  : NC 수행이력 -->
    <select id="selectNcPerformanceHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, IFNULL(C.PART_NUM, 0)) AS ROWNUM,
        	A.MCT_WORK_SEQ, A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ,
        	IFNULL(SF_GET_CODE_NM('1005', D.FACTORY_AREA, #{LOGIN_LOCALE}), SPACE(0)) AS FACTORY_NM,
            D.EQUIP_SEQ, D.EQUIP_ID, D.EQUIP_NM,
        	B.CONTROL_NUM, <!-- 관리번호 -->
        	C.PART_NUM, <!-- Part -->
        	C.DRAWING_NUM, <!-- 도면번호 -->
        	C.IMG_GFILE_SEQ, <!-- 도면 이미지 번호 -->
        	R.ITEM_NM, <!-- 품명 -->
        	C.WORK_TYPE, <!-- 작업형태 -->
            IFNULL(SF_GET_CODE_NM('1033', C.WORK_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS WORK_TYPE_NM, <!-- 작업형태 이름 -->
        	C.MATERIAL_DETAIL, <!-- 소재종류 상세 -->
            IFNULL(SF_GET_CODE_NM('1027', C.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM, <!-- 소재 종류 -->
            jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS ORDER_QTY, <!-- 수량 -->
            C.SIZE_TXT AS STANDARD_SIZE, <!-- 규격 -->
            jmes.SF_GET_MATERIAL_SIZE_TXT(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS MATERAIL_ORDER_SIZE,	<!-- 소재 주문 규격 -->
            jmes.SF_GET_DATE_F(A.WORK_START_DT, 'YY', 'M') AS WORK_START_DT, <!-- 확정 일시 -->
            jmes.SF_GET_DATE_F(A.WORK_FINISH_DT, 'YY', 'M') AS WORK_FINISH_DT, <!-- 확정 종료 일시 -->
            CASE WHEN A.WORK_FINISH_DT IS NOT NULL THEN CONCAT(IFNULL(jmes.SF_GET_DRAWING_WORK_TIME('S_MINUTE', A.MCT_WORK_SEQ), 0), '''') ELSE SPACE(0) END AS WORK_STOP_MINUTE, <!-- 작업 중지 전체 분 -->
            CASE WHEN A.WORK_FINISH_DT IS NOT NULL THEN CONCAT(IFNULL(jmes.SF_GET_DRAWING_WORK_TIME('W_MINUTE', A.MCT_WORK_SEQ), 0), '''') ELSE SPACE(0) END AS WORK_WORK_MINUTE, <!-- 작업 전체 분 -->
            CASE WHEN A.WORK_FINISH_DT IS NOT NULL THEN CONCAT(IFNULL(ROUND(jmes.SF_GET_DRAWING_WORK_TIME('W_MINUTE', A.MCT_WORK_SEQ) / jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ), 0), 0), '''') ELSE SPACE(0) END AS LEAD_TIME,
            jmes.SF_GET_USER_NM(A.WORK_USER_ID) AS WORK_USER_ID
        FROM TBL_MCT_WORK A
        	INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
			INNER JOIN TBL_CONTROL_PART_ORDER_MAIN R ON B.CONTROL_SEQ = R.CONTROL_SEQ
                <if test="CONTROL_NUM != null and CONTROL_NUM != ''">
                    AND UPPER(B.CONTROL_NUM) LIKE CONCAT('%', UPPER(#{CONTROL_NUM}), '%')
                </if>
        	INNER JOIN TBL_CONTROL_PART C ON C.CONTROL_SEQ = A.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
                <if test="MATERIAL_DETAIL != null and MATERIAL_DETAIL != ''">
                    AND C.MATERIAL_DETAIL = #{MATERIAL_DETAIL}
                </if>
                <if test="DRAWING_NUM != null and DRAWING_NUM != ''">
                    AND C.DRAWING_NUM LIKE CONCAT('%', #{DRAWING_NUM}, '%')
                </if>
                <if test="WORK_TYPE != null and WORK_TYPE != ''">
                    AND C.WORK_TYPE = #{WORK_TYPE}
                </if>
        	INNER JOIN TBL_EQUIP D ON A.EQUIP_SEQ = D.EQUIP_SEQ
                <if test="FACTORY_AREA != null and FACTORY_AREA != ''">
                    AND D.FACTORY_AREA = #{FACTORY_AREA}
                </if>
        WHERE 1 = 1
            AND A.DEL_YN = 'N'
            <if test="EQUIP_SEQ != null and EQUIP_SEQ != ''">
                AND A.EQUIP_SEQ = #{EQUIP_SEQ}
            </if>
            <if test="WORK_USER_ID != null and WORK_USER_ID != ''">
                AND A.WORK_USER_ID = #{WORK_USER_ID}
            </if>
            <if test="mct_dw_execute_history_start_dt != null and mct_dw_execute_history_start_dt != ''">
                AND A.WORK_FINISH_DT BETWEEN STR_TO_DATE(#{mct_dw_execute_history_start_dt}, '%Y/%m/%d') AND STR_TO_DATE(#{mct_dw_execute_history_end_dt}, '%Y/%m/%d')
            </if>
        ORDER BY A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, IFNULL(C.PART_NUM, 0)
    </select>

    <select id="selectResultManageList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<!-- Group by 확인필요 !!!-->
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.DXF_GFILE_SEQ, A.PDF_GFILE_SEQ, A.IMG_GFILE_SEQ,
            jmes.SF_GET_DATE_F(A.INNER_DUE_DT, '', '') AS INNER_DUE_DT, <!-- 내부가공납기 -->
            CASE WHEN IFNULL(B.EMERGENCY_YN, 'N') = 'Y' THEN '긴' ELSE SPACE(0) END AS EMERGENCY_YN, <!-- 긴급 -->
            CASE WHEN IFNULL(B.MAIN_INSPECTION, 'N') = 'Y' THEN '주' ELSE SPACE(0) END AS MAIN_INSPECTION, <!-- 주요 검사품 -->
            CASE WHEN A.WORK_TYPE = 'WTP030' THEN '수' WHEN A.WORK_TYPE = 'WTP040' THEN '재' END AS WORK_NM, <!-- 형태 -->
            R.ITEM_NM, <!-- 품명 -->
            jmes.SF_GET_CODE_NM('1009', C.POP_POSITION, #{LOGIN_LOCALE}) AS POP_POSITION, <!-- 현재위치 -->
            jmes.SF_GET_CODE_NM('1013', A.PART_STATUS, #{LOGIN_LOCALE}) AS PART_STATUS, <!-- 진행상태 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            IFNULL(A.PART_NUM, SPACE(0)) AS PART_NUM, <!-- Part -->
            A.MATERIAL_DETAIL, <!-- 소재종류 상세 -->
            IFNULL(SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM, <!-- 소재 종류 -->
            IFNULL(jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ), 0) AS ORDER_QTY, <!-- 수량 -->
            jmes.SF_GET_SIDE_QTY(B.CONTROL_SEQ, 'ORIGINAL_SIDE_QTY') * IFNULL(A.PART_UNIT_QTY, 1) AS ORIGINAL_SIDE_QTY, <!-- 대칭_원칭 -->
            jmes.SF_GET_SIDE_QTY(B.CONTROL_SEQ, 'OTHER_SIDE_QTY') * IFNULL(A.PART_UNIT_QTY, 1) AS OTHER_SIDE_QTY, <!-- 대칭_대칭 -->
            IFNULL(A.DRAWING_NUM, SPACE(0)) AS DRAWING_NUM, <!-- 도면번호 -->
            (SELECT GROUP_CONCAT(DRAWING_NUM separator ', ') FROM TBL_CONTROL_PART_ORDER M WHERE M.CONTROL_SEQ = R.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = R.CONTROL_DETAIL_SEQ AND M.ORDER_SEQ = R.ORDER_SEQ GROUP BY M.CONTROL_SEQ, M.CONTROL_DETAIL_SEQ) AS CONCAT_DRAWING_NUM,
            IFNULL(A.DRAWING_VER, SPACE(0)) AS DRAWING_VER, <!-- 도면번호 버전 -->
            A.ETC_GFILE_SEQ,
            A.SIZE_TXT AS STANDARD_SIZE, <!-- 규격 -->
            jmes.SF_GET_MATERIAL_SIZE_TXT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERAIL_ORDER_SIZE,	<!-- 소재 주문 규격 -->
            A.SURFACE_TREAT, <!-- 표면처리 -->
            SF_GET_CODE_NM('1039', A.SURFACE_TREAT, #{LOGIN_LOCALE}) AS SURFACE_TREAT_NM,  <!-- 표면 처리 -->
            B.NOTE AS CONTROL_NOTE, <!-- 주문 확정 비고 -->
            jmes.SF_GET_MCT_WORK_TIME(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MCT_WORK_TIME,	<!-- 작업 시간 (계획 + 실행) -->
            A.MCT_WORK_TYPE, <!-- MCT 작업 구분 -->
            A.MCT_NOTE, <!-- MCT 가공계획 비고 -->
            IFNULL(SF_GET_CODE_NM('1011', A.MCT_WORK_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS MCT_WORK_TYPE_NM, <!-- MCT 작업 구분 이름 -->
            CASE WHEN G.START_DT IS NOT NULL AND G.FINISH_DT IS NOT NULL THEN 'CWS030'
                WHEN G.START_DT IS NOT NULL AND G.FINISH_DT IS NULL THEN 'CWS020'
                ELSE 'CWS010'
            END CAM_STATUS, <!-- CAM 상태 -->
            G.CAM_SEQ, <!-- CAM 마스터 번호 -->
            H.SEQ AS CAM_STEP, <!-- CAM 스탭 -->
            SF_GET_CODE_NM('1080', H.WORK_DIRECTION, #{LOGIN_LOCALE}) AS WORK_DIRECTION, <!-- CAM 가공위치 -->
            H.WORK_DESC, <!-- CAM 작업 내용 -->
            (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = H.WORK_USER_ID) AS WORK_USER_NM, <!-- CAM 작업자 -->
            CASE WHEN H.CAM_GFILE_SEQ IS NOT NULL THEN (SELECT FILE_SEQ FROM TBL_FILE I WHERE H.CAM_GFILE_SEQ = I.GFILE_SEQ AND I.FILE_KIND = 'EXC') ELSE SPACE(0) END CAM_FILE_SEQ, <!-- CAM FILE -->
            CASE WHEN H.CAM_GFILE_SEQ IS NOT NULL THEN (SELECT FILE_SEQ FROM TBL_FILE I WHERE H.CAM_GFILE_SEQ = I.GFILE_SEQ AND I.FILE_KIND = 'EXN') ELSE SPACE(0) END NC_FILE_SEQ, <!-- NC FILE -->
            G.HISTORY_NOTE,  <!-- CAM 기록사항 -->
            G.NOTE, <!-- CAM 비고 및 공유사항 -->
            CONCAT(IFNULL(G.HISTORY_NOTE, SPACE(0)), IFNULL(G.NOTE, SPACE(0))) AS CAM_WORK_NOTE,    <!-- CAM 작업 기록 및 비고 공유 사항 -->
            jmes.SF_GET_DATE_F(G.START_DT, '', 'M') AS CAM_START_DT, <!-- CAM 시작 일시, -->
            jmes.SF_GET_DATE_F(G.FINISH_DT, '', 'M') AS CAM_FINISH_DT, <!-- CAM 종료 일시, -->
            SF_GET_CODE_NM('1009', C.POP_PREV_POSITION, #{LOGIN_LOCALE}) AS POP_PREV_POSITION, <!-- 이전 위치 -->
            jmes.SF_GET_DATE_F(A.STATUS_DT, '', 'M') AS SATAUS_DT, <!-- 확정 일시 -->
            jmes.SF_GET_MATERIAL_RECEIPT_DT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERIAL_RECEIPT_DT, <!-- 소재 입고 일시 -->
            J.INSPECT_NUM AS INSPECT_STEP, <!-- 품질 스탭 -->
            SF_GET_CODE_NM('1040', J.INSPECT_GRADE, #{LOGIN_LOCALE}) AS INSPECT_GRADE,
            CASE WHEN J.INSPECT_RESULT LIKE 'QCC%' THEN SF_GET_CODE_NM('1019', J.INSPECT_RESULT, #{LOGIN_LOCALE})
                 WHEN J.INSPECT_RESULT LIKE 'QCD%' THEN SF_GET_CODE_NM('1020', J.INSPECT_RESULT, #{LOGIN_LOCALE})
                 ELSE SPACE(0)
                END AS INSPECT_RESULT,	<!-- 불량 코드 -->
            J.ERROR_QTY, <!-- 불량 수량 -->
            SF_GET_CODE_NM('1032', J.ERROR_REASON, #{LOGIN_LOCALE}) AS ERROR_REASON, <!-- 불량 원인 -->
            J.ERROR_NOTE, <!-- 불량 조치방안 -->
            jmes.SF_GET_DATE_F(J.INSERT_DT, '', '') AS INSPECT_DT, <!-- 품질현황 -->
            K.MCT_PLAN_SEQ, <!-- 계획 장비 번호 -->
            K.EQUIP_SEQ, <!-- 계획 장비 번호 -->
            L.EQUIP_ID, <!-- 계획 장비 아이디 -->
            L.EQUIP_NM AS MCT_PLAN_EQUIP_NM, <!-- 계획 장비 -->
            K.WORKING_TIME AS PLAN_WORKING_TIME, <!-- MCT 계획 시간 -->
            ( SELECT CONCAT(jmes.SF_GET_DATE_F(Q.INSERT_DT,'YYYY',''),' / ',(SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = Q.WORK_USER_ID))
              FROM jmes.TBL_CAM P, jmes.TBL_CAM_DETAIL Q, jmes.TBL_CONTROL_PART R
              WHERE P.CAM_SEQ = Q.CAM_SEQ
                AND P.CONTROL_SEQ = R.CONTROL_SEQ
                AND P.CONTROL_DETAIL_SEQ = R.CONTROL_DETAIL_SEQ
                AND R.DRAWING_NUM = A.DRAWING_NUM
              ORDER BY Q.SEQ DESC
              LIMIT 1
            ) AS WORK_HISTORY_INFO, <!-- 과거 경험 -->
            B.SAME_SIDE_YN, <!-- 대칭 -->
            A.IMG_GFILE_SEQ, <!-- IMG 파일그룹번호 -->
            Z.EQUIP_NM, Z.WORKING_TIME, Z.NC_WORK_TYPE,
            (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = Z.WORK_USER_ID) AS NC_WORK_USER_NM <!-- CAM 작업자 -->
        FROM jmes.TBL_CONTROL_PART A
            INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.DEL_YN = 'N'
                AND B.CONTROL_STATUS IN ('ORD001', 'ORD003') AND B.OUT_FINISH_DT IS NULL
            LEFT OUTER JOIN jmes.TBL_POP C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                AND C.POP_SEQ = (SELECT MAX(K.POP_SEQ) FROM jmes.TBL_POP K WHERE K.CONTROL_SEQ = C.CONTROL_SEQ
                                                                             AND K.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ GROUP BY C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ
                )
            LEFT OUTER JOIN jmes.TBL_CAM G ON G.CONTROL_SEQ = A.CONTROL_SEQ AND G.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN jmes.TBL_CAM_DETAIL H ON G.CAM_SEQ = H.CAM_SEQ AND H.SEQ = (SELECT MAX(I.SEQ) FROM jmes.TBL_CAM_DETAIL I WHERE H.CAM_SEQ = I.CAM_SEQ GROUP BY I.CAM_SEQ)
            LEFT OUTER JOIN jmes.TBL_INSPECT J ON A.CONTROL_SEQ = J.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = J.CONTROL_DETAIL_SEQ AND J.INSPECT_TYPE = '1'
                AND J.INSPECT_SEQ = (SELECT MAX(I.INSPECT_SEQ) FROM jmes.TBL_INSPECT I WHERE J.CONTROL_SEQ = I.CONTROL_SEQ AND J.CONTROL_DETAIL_SEQ = I.CONTROL_DETAIL_SEQ AND I.INSPECT_TYPE = '1')
            LEFT OUTER JOIN jmes.TBL_MCT_PLAN K ON A.CONTROL_SEQ = K.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = K.CONTROL_DETAIL_SEQ AND K.DEL_YN = 'N'
            LEFT OUTER JOIN jmes.TBL_EQUIP L ON K.EQUIP_SEQ = L.EQUIP_SEQ
            LEFT OUTER JOIN (
                SELECT
                    A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, C.EQUIP_NM, A.WORK_USER_ID,
                    IFNULL(SF_GET_CODE_NM('1010', C.PROCESS_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS NC_WORK_TYPE,
                    IFNULL(SF_GET_DRAWING_WORK_TIME('WORK', A.MCT_WORK_SEQ), 0) AS WORKING_TIME
                FROM TBL_MCT_WORK A
                    INNER JOIN jmes.TBL_EQUIP C ON A.EQUIP_SEQ = C.EQUIP_SEQ
                        AND C.PROCESS_TYPE = 'MPR010'
                WHERE 1 = 1
                    AND A.WORK_FINISH_DT IS NOT NULL
                    AND A.DEL_YN = 'N'
                    AND A.MCT_WORK_SEQ IN (SELECT MAX(X.MCT_WORK_SEQ) FROM TBL_MCT_WORK X
                                            WHERE  X.DEL_YN = 'N' AND X.WORK_FINISH_DT IS NOT NULL
                                          GROUP BY X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ
                    )
            ) Z ON A.CONTROL_SEQ = Z.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = Z.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
            <if test='SEL_ASSEMBLY == null'>
                AND A.WORK_TYPE NOT IN ('WTP020')
            </if>
            <choose>
                <when test='SEL_OUTSIDE_YN != null'>
                    AND IFNULL(A.OUTSIDE_YN, 'N') = 'N'
                    AND A.PART_STATUS IN ('PRO001', 'PRO002', 'PRO004', 'PRO005', 'PRO006', 'PRO007', 'PRO008', 'PRO009', 'PRO012', 'PRO013', 'PRO014', 'PRO015', 'PRO018', 'PRO019')
                </when>
                <otherwise>
                    AND A.PART_STATUS IN ('PRO002', 'PRO004', 'PRO005', 'PRO006', 'PRO007', 'PRO008', 'PRO009', 'PRO012', 'PRO013', 'PRO014', 'PRO015', 'PRO018')
                </otherwise>
            </choose>
            <if test="EQUIP_SEQ != null and EQUIP_SEQ != ''">
                AND EXISTS (SELECT * FROM jmes.TBL_MCT_PLAN MP
                            WHERE A.CONTROL_SEQ = MP.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = MP.CONTROL_DETAIL_SEQ AND MP.DEL_YN = 'N'
                                AND MP.EQUIP_SEQ = #{EQUIP_SEQ}
                            )
            </if>
            <if test="CONTROL_NUM != null and CONTROL_NUM != ''">
                AND UPPER(B.CONTROL_NUM) LIKE CONCAT('%', UPPER(#{CONTROL_NUM}), '%')
            </if>
            <if test="CONTROL_DETAIL_SEQ != null and CONTROL_DETAIL_SEQ != ''">
                AND A.CONTROL_DETAIL_SEQ LIKE CONCAT('%', #{CONTROL_DETAIL_SEQ}, '%')
            </if>
            <if test="DRAWING_NUM != null and DRAWING_NUM != ''">
                AND UPPER(A.DRAWING_NUM) LIKE CONCAT('%', UPPER(#{DRAWING_NUM}), '%')
            </if>
            <if test="MATERIAL_DETAIL != null and MATERIAL_DETAIL != ''">
                AND A.MATERIAL_DETAIL = #{MATERIAL_DETAIL}
            </if>
            <if test="WORK_FACTORY != null and WORK_FACTORY != ''">
                AND A.WORK_FACTORY = #{WORK_FACTORY}
            </if>
            <if test="BARCODE_NUM != null and BARCODE_NUM != ''">
                AND EXISTS (SELECT 1 FROM jmes.TBL_CONTROL_BARCODE M
                            WHERE A.CONTROL_SEQ = M.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = M.CONTROL_DETAIL_SEQ
                                AND M.DEL_YN = 'N' AND M.BARCODE_NUM = #{BARCODE_NUM}
                )
            </if>
             <if test='SEL_COMPLETED_YN != null'>
                AND A.INNER_WORK_FINISH_DT IS NULL
            </if>
        GROUP BY A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ
        ORDER BY
            CASE CAM_STATUS WHEN 'CWS020' THEN 0 WHEN 'CWS010' THEN 1 WHEN 'CWS030' THEN 2 END,
            SATAUS_DT DESC, B.CONTROL_NUM, IFNULL(A.PART_NUM, 0), A.INNER_DUE_DT
    </select>

    <select id="selectResultManagePopInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<!-- Group by 확인필요 !!!-->
        SELECT
            A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.DXF_GFILE_SEQ, A.PDF_GFILE_SEQ, A.IMG_GFILE_SEQ,
            jmes.SF_GET_DATE_F(A.INNER_DUE_DT, '', '') AS INNER_DUE_DT, <!-- 내부가공납기 -->
            CASE WHEN IFNULL(B.EMERGENCY_YN, 'N') = 'Y' THEN '긴' ELSE SPACE(0) END AS EMERGENCY_YN, <!-- 긴급 -->
            CASE WHEN IFNULL(B.MAIN_INSPECTION, 'N') = 'Y' THEN '주' ELSE SPACE(0) END AS MAIN_INSPECTION, <!-- 주요 검사품 -->
            CASE WHEN A.WORK_TYPE = 'WTP030' THEN '수' WHEN A.WORK_TYPE = 'WTP040' THEN '재' END AS WORK_NM, <!-- 형태 -->
            R.ITEM_NM, <!-- 품명 -->
            jmes.SF_GET_CODE_NM('1009', C.POP_POSITION, #{LOGIN_LOCALE}) AS POP_POSITION, <!-- 현재위치 -->
            <!-- C.POP_POSITION_NM AS POP_POSITION, 현재위치 -->
            jmes.SF_GET_CODE_NM('1013',' A.PART_STATUS, #{LOGIN_LOCALE}) AS PART_STATUS, <!-- 진행상태 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            IFNULL(A.PART_NUM, SPACE(0)) AS PART_NUM, <!-- Part -->
            jmes.SF_GET_CODE_NM('1033', A.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM,
            A.MATERIAL_DETAIL, <!-- 소재종류 상세 -->
            IFNULL(SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM, <!-- 소재 종류 -->
            IFNULL(jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ), 0) AS ORDER_QTY, <!-- 수량 -->
            jmes.SF_GET_SIDE_QTY(B.CONTROL_SEQ, 'ORIGINAL_SIDE_QTY') * IFNULL(A.PART_UNIT_QTY, 1) AS ORIGINAL_SIDE_QTY, <!-- 대칭_원칭 -->
            jmes.SF_GET_SIDE_QTY(B.CONTROL_SEQ, 'OTHER_SIDE_QTY') * IFNULL(A.PART_UNIT_QTY, 1) AS OTHER_SIDE_QTY, <!-- 대칭_대칭 -->
            IFNULL(GROUP_CONCAT(R.DRAWING_NUM separator ', '), SPACE(0)) AS DRAWING_NUM, <!-- 도면번호 -->
            IFNULL(A.DRAWING_VER, SPACE(0)) AS DRAWING_VER, <!-- 도면번호 버전 -->
            A.SIZE_TXT AS STANDARD_SIZE, <!-- 규격 -->
            jmes.SF_GET_MATERIAL_SIZE_TXT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERAIL_ORDER_SIZE,	<!-- 소재 주문 규격 -->
            A.SURFACE_TREAT, <!-- 표면처리 -->
            SF_GET_CODE_NM('1039', A.SURFACE_TREAT, #{LOGIN_LOCALE}) AS SURFACE_TREAT_NM,  <!-- 표면 처리 -->
            B.NOTE AS CONTROL_NOTE, <!-- 주문 확정 비고 -->
            jmes.SF_GET_MCT_WORK_TIME(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MCT_WORK_TIME,	<!-- 작업 시간 (계획 + 실행) -->
            A.MCT_WORK_TYPE, <!-- MCT 작업 구분 -->
            A.MCT_NOTE, <!-- MCT 가공계획 비고 -->
            IFNULL(SF_GET_CODE_NM('1011', A.MCT_WORK_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS MCT_WORK_TYPE_NM, <!-- MCT 작업 구분 이름 -->
            CASE WHEN G.START_DT IS NOT NULL AND G.FINISH_DT IS NOT NULL THEN 'CWS030'
                WHEN G.START_DT IS NOT NULL AND G.FINISH_DT IS NULL THEN 'CWS020'
                ELSE 'CWS010'
            END CAM_STATUS, <!-- CAM 상태 -->
            G.CAM_SEQ, <!-- CAM 마스터 번호 -->
            H.SEQ AS CAM_STEP, <!-- CAM 스탭 -->
            SF_GET_CODE_NM('1080', H.WORK_DIRECTION, #{LOGIN_LOCALE}) AS WORK_DIRECTION, <!-- CAM 가공위치 -->
            H.WORK_DESC, <!-- CAM 작업 내용 -->
            (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = H.WORK_USER_ID) AS WORK_USER_NM, <!-- CAM 작업자 -->
            CASE WHEN H.CAM_GFILE_SEQ IS NOT NULL THEN (SELECT FILE_SEQ FROM TBL_FILE I WHERE H.CAM_GFILE_SEQ = I.GFILE_SEQ AND I.FILE_KIND = 'EXC') ELSE SPACE(0) END CAM_FILE_SEQ, <!-- CAM FILE -->
            CASE WHEN H.CAM_GFILE_SEQ IS NOT NULL THEN (SELECT FILE_SEQ FROM TBL_FILE I WHERE H.CAM_GFILE_SEQ = I.GFILE_SEQ AND I.FILE_KIND = 'EXN') ELSE SPACE(0) END NC_FILE_SEQ, <!-- NC FILE -->
            G.HISTORY_NOTE,  <!-- CAM 기록사항 -->
            G.NOTE, <!-- CAM 비고 및 공유사항 -->
            CONCAT(IFNULL(G.HISTORY_NOTE, SPACE(0)), IFNULL(G.NOTE, SPACE(0))) AS CAM_WORK_NOTE,    <!-- CAM 작업 기록 및 비고 공유 사항 -->
            jmes.SF_GET_DATE_F(G.START_DT, '', 'M') AS CAM_START_DT, <!-- CAM 시작 일시, -->
            jmes.SF_GET_DATE_F(G.FINISH_DT, '', 'M') AS CAM_FINISH_DT, <!-- CAM 종료 일시, -->
            SF_GET_CODE_NM('1009', N.POP_POSITION, #{LOGIN_LOCALE}) AS POP_PREV_POSITION, <!-- 이전 위치 -->
            jmes.SF_GET_DATE_F(A.STATUS_DT, '', 'M') AS SATAUS_DT, <!-- 확정 일시 -->
            jmes.SF_GET_MATERIAL_RECEIPT_DT(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS MATERIAL_RECEIPT_DT, <!-- 소재 입고 일시 -->
            K.WORKING_TIME AS WORKING_TIME, <!-- MCT 계획 시간 -->
            ( SELECT CONCAT(jmes.SF_GET_DATE_F(Q.INSERT_DT,'YYYY',''),' / ',(SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = Q.WORK_USER_ID))
              FROM jmes.TBL_CAM P, jmes.TBL_CAM_DETAIL Q, jmes.TBL_CONTROL_PART R
              WHERE P.CAM_SEQ = Q.CAM_SEQ
                AND P.CONTROL_SEQ = R.CONTROL_SEQ
                AND P.CONTROL_DETAIL_SEQ = R.CONTROL_DETAIL_SEQ
                AND R.DRAWING_NUM = A.DRAWING_NUM
              ORDER BY Q.SEQ DESC
              LIMIT 1
            ) AS WORK_HISTORY_INFO, <!-- 과거 경험 -->
            <!-- IF(A.ORIGINAL_SIDE_QTY AND A.OTHER_SIDE_QTY, TRUE, FALSE) AS SYMMETRY, 대칭 -->
            A.IMG_GFILE_SEQ <!-- IMG 파일그룹번호 -->
        FROM jmes.TBL_CONTROL_PART A
            INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.CONTROL_STATUS = 'ORD001' <!-- 주문확정 -->
			INNER JOIN jmes.TBL_CONTROL_PART_ORDER R ON B.CONTROL_SEQ = R.CONTROL_SEQ
            LEFT OUTER JOIN jmes.TBL_POP C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                AND C.POP_SEQ = (SELECT MAX(C.POP_SEQ) FROM jmes.TBL_POP K WHERE K.CONTROL_SEQ = C.CONTROL_SEQ
                                                                             AND K.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ GROUP BY C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ
                )
            LEFT OUTER JOIN jmes.TBL_CAM G ON G.CONTROL_SEQ = A.CONTROL_SEQ AND G.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN jmes.TBL_CAM_DETAIL H ON G.CAM_SEQ = H.CAM_SEQ AND H.SEQ = (SELECT MAX(I.SEQ) FROM jmes.TBL_CAM_DETAIL I WHERE H.CAM_SEQ = I.CAM_SEQ GROUP BY I.CAM_SEQ)
            LEFT OUTER JOIN jmes.TBL_INSPECT J ON A.CONTROL_SEQ = J.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = J.CONTROL_DETAIL_SEQ AND J.INSPECT_TYPE = '1'
                AND J.INSPECT_SEQ = (SELECT MAX(INSPECT_SEQ) FROM jmes.TBL_INSPECT I WHERE J.CONTROL_SEQ = I.CONTROL_SEQ AND J.CONTROL_DETAIL_SEQ = I.CONTROL_DETAIL_SEQ AND I.INSPECT_TYPE = '1')
            LEFT OUTER JOIN jmes.TBL_MCT_PLAN K ON A.CONTROL_SEQ = K.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = K.CONTROL_DETAIL_SEQ AND K.DEL_YN = 'N'
            LEFT OUTER JOIN jmes.TBL_EQUIP L ON K.EQUIP_SEQ = L.EQUIP_SEQ
            LEFT OUTER JOIN jmes.TBL_POP N ON A.CONTROL_SEQ = N.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = N.CONTROL_DETAIL_SEQ
                                                AND N.POP_SEQ = (SELECT LAG(O.POP_SEQ, 1) OVER(PARTITION BY O.CONTROL_SEQ, O.CONTROL_DETAIL_SEQ ORDER BY O.POP_SEQ) AS POP_SEQ
                                                				FROM jmes.TBL_POP O WHERE N.CONTROL_SEQ = O.CONTROL_SEQ
                                                        AND N.CONTROL_DETAIL_SEQ = O.CONTROL_DETAIL_SEQ ORDER BY O.POP_SEQ DESC LIMIT 1
                                                )
        WHERE 1 = 1
            AND A.PART_STATUS IN ('PRO001', 'PRO002', 'PRO004', 'PRO005', 'PRO006', 'PRO007', 'PRO008', 'PRO009', 'PRO012', 'PRO013', 'PRO014', 'PRO015', 'PRO018', 'PRO019')
            <if test="CONTROL_NUM != null and CONTROL_NUM != ''">
                AND UPPER(B.CONTROL_NUM) LIKE CONCAT('%', UPPER(#{CONTROL_NUM}), '%')
            </if>
            <if test="CONTROL_DETAIL_SEQ != null and CONTROL_DETAIL_SEQ != ''">
                AND A.CONTROL_DETAIL_SEQ LIKE CONCAT('%', #{CONTROL_DETAIL_SEQ}, '%')
            </if>
            <if test="BARCODE_NUM != null and BARCODE_NUM != ''">
                AND EXISTS (SELECT 1 FROM jmes.TBL_CONTROL_BARCODE M
                            WHERE A.CONTROL_SEQ = M.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = M.CONTROL_DETAIL_SEQ
                                AND M.DEL_YN = 'N' AND M.BARCODE_NUM = #{BARCODE_NUM}
                )
            </if>
        GROUP BY B.CONTROL_NUM
    </select>

    <select id="selectCamMasterInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.CAM_SEQ, A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.START_DT, A.HISTORY_NOTE, A.NOTE
        FROM jmes.TBL_CAM A
        WHERE 1 = 1
          AND A.CONTROL_SEQ = #{CONTROL_SEQ}
          AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </select>

    <select id="selectCamDetailInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        	LPAD(ROWNUM, 2, '0') AS ROWNUM,
        	Z.CONTROL_SEQ, Z.CONTROL_DETAIL_SEQ, Z.CAM_SEQ, Z.SEQ, Z.WORK_DIRECTION, Z.WORK_DESC, Z.WORK_USER_ID, Z.DESIGN_QTY, Z.WORK_TIME,
            Z.CAM_GFILE_SEQ, Z.CAM_FILE_SEQ, Z.CAM_FILE_NM, Z.NC_FILE_SEQ, Z.NC_FILE_NM
        FROM (
            SELECT
                ROW_NUMBER() OVER(ORDER BY A.CAM_SEQ, A.SEQ) AS ROWNUM,
                B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, A.CAM_SEQ, A.SEQ, A.WORK_DIRECTION, A.WORK_DESC, A.WORK_USER_ID, A.DESIGN_QTY, A.WORK_TIME,
                A.CAM_GFILE_SEQ,
                C.FILE_SEQ AS CAM_FILE_SEQ, C.ORGINAL_FILE_NM AS CAM_FILE_NM,
                D.FILE_SEQ AS NC_FILE_SEQ, D.ORGINAL_FILE_NM AS NC_FILE_NM
            FROM jmes.TBL_CAM_DETAIL A
                INNER JOIN jmes.TBL_CAM B ON A.CAM_SEQ = B.CAM_SEQ
                LEFT OUTER JOIN jmes.TBL_FILE C ON C.GFILE_SEQ = A.CAM_GFILE_SEQ AND C.FILE_KIND = 'EXC'
                LEFT OUTER JOIN jmes.TBL_FILE D ON D.GFILE_SEQ = A.CAM_GFILE_SEQ AND D.FILE_KIND = 'EXN'
            WHERE 1 = 1
              AND A.CAM_SEQ = #{CAM_SEQ}
        ) Z
        ORDER BY Z.CAM_SEQ, Z.SEQ
    </select>

    <select id="selectStartMctCamCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            CAM_SEQ, CASE WHEN A.FINISH_DT IS NULL THEN 'Y' ELSE 'N' END ALREADY_STARTED
        FROM jmes.TBL_CAM A
        WHERE 1 = 1
          AND A.CONTROL_SEQ = #{CONTROL_SEQ}
          AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </select>

    <insert id="insertCamWork"  parameterType="java.util.HashMap" >
        <selectKey keyProperty="CAM_SEQ" resultType="integer" order="BEFORE">
            SELECT NEXTVAL(SEQ_CAM) AS CAM_SEQ FROM DUAL
        </selectKey>
        INSERT INTO jmes.TBL_CAM
        (CAM_SEQ, CONTROL_SEQ, CONTROL_DETAIL_SEQ, START_DT, HISTORY_NOTE, NOTE, INSERT_ID)
        VALUES
        (#{CAM_SEQ}, #{CONTROL_SEQ}, #{CONTROL_DETAIL_SEQ}, NOW(), #{HISTORY_NOTE}, #{NOTE}, #{LOGIN_USER_ID})
    </insert>

    <insert id="updateCamWork"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_CAM
        SET
            FINISH_DT= NULL,
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
        WHERE 1 = 1
            AND CAM_SEQ = #{CAM_SEQ}
            AND CONTROL_SEQ =  #{CONTROL_SEQ}
            AND CONTROL_DETAIL_SEQ =  #{CONTROL_DETAIL_SEQ}
    </insert>

    <insert id="insertMctCamWork"  parameterType="java.util.HashMap" >
        <selectKey keyProperty="CAM_SEQ" resultType="integer" order="BEFORE">
            SELECT (CASE WHEN #{CAM_SEQ} IS NOT NULL THEN #{CAM_SEQ} ELSE NEXTVAL(SEQ_CAM) END) AS CAM_SEQ FROM DUAL
        </selectKey>
        INSERT INTO jmes.TBL_CAM
        (CAM_SEQ, CONTROL_SEQ, CONTROL_DETAIL_SEQ, START_DT, HISTORY_NOTE, NOTE, INSERT_ID)
        VALUES
        (#{CAM_SEQ}, #{CONTROL_SEQ}, #{CONTROL_DETAIL_SEQ}, NOW(), #{HISTORY_NOTE}, #{NOTE}, #{LOGIN_USER_ID})
        ON DUPLICATE KEY UPDATE
            FINISH_DT= NULL,
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <delete id="deleteMctCamWork"  parameterType="java.util.HashMap" >
        DELETE FROM jmes.TBL_CAM
        WHERE CAM_SEQ = #{CAM_SEQ}
    </delete>

    <update id="updateMctCamWork"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_CAM
        SET
            HISTORY_NOTE = #{HISTORY_NOTE},
            NOTE = #{NOTE},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
        WHERE CAM_SEQ = #{CAM_SEQ}
    </update>

    <update id="updateMctCamWorkComplete"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_CAM
        SET
            HISTORY_NOTE = #{HISTORY_NOTE},
            NOTE = #{NOTE},
            FINISH_DT = NOW(),
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
        WHERE CAM_SEQ = #{CAM_SEQ}
    </update>

    <insert id="insertMctCamDetailWork"  parameterType="java.util.HashMap" >
        INSERT INTO jmes.TBL_CAM_DETAIL
            (CAM_SEQ, SEQ, WORK_DIRECTION, WORK_DESC, WORK_USER_ID, DESIGN_QTY, CAM_GFILE_SEQ, INSERT_ID)
        VALUES
        (#{CAM_SEQ}, #{SEQ},
            #{WORK_DIRECTION}, #{WORK_DESC}, #{WORK_USER_ID}, #{DESIGN_QTY}, #{CAM_GFILE_SEQ}, #{LOGIN_USER_ID} )
        ON DUPLICATE KEY UPDATE
             WORK_DIRECTION = #{WORK_DIRECTION},
             WORK_DESC = #{WORK_DESC},
             WORK_USER_ID = #{WORK_USER_ID},
             DESIGN_QTY = #{DESIGN_QTY},
             CAM_GFILE_SEQ = #{CAM_GFILE_SEQ},
             UPDATE_DT = NOW(),
             UPDATE_ID = #{LOGIN_USER_ID}
    </insert>

    <update id="updateMctCamDetailWork"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_CAM_DETAIL
        SET
            WORK_DIRECTION = #{WORK_DIRECTION},
            WORK_DESC = #{WORK_DESC},
            WORK_USER_ID = #{WORK_USER_ID},
            DESIGN_QTY = #{DESIGN_QTY},
            CAM_GFILE_SEQ = #{CAM_GFILE_SEQ},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
        WHERE 1 = 1
            AND CAM_SEQ = #{CAM_SEQ}
            AND SEQ = #{SEQ}
    </update>

    <update id="updateMctCamDetailGfile"  parameterType="java.util.HashMap" >
        UPDATE jmes.TBL_CAM_DETAIL
        SET
            CAM_GFILE_SEQ = #{CAM_GFILE_SEQ},
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
        WHERE 1 = 1
            AND CAM_SEQ = #{CAM_SEQ}
            AND SEQ = #{SEQ}
    </update>

    <delete id="deleteMctCamAllDetailWork"  parameterType="java.util.HashMap" >
        DELETE FROM jmes.TBL_CAM_DETAIL
        WHERE 1 = 1
            AND CAM_SEQ = #{CAM_SEQ}
    </delete>

    <delete id="deleteMctCamDetailWork"  parameterType="java.util.HashMap" >
        DELETE FROM jmes.TBL_CAM_DETAIL
        WHERE 1 = 1
            AND CAM_SEQ = #{CAM_SEQ}
            AND SEQ = #{SEQ}
    </delete>

    <insert id="createCamStartControlPartProgress" parameterType="java.util.HashMap" >
        INSERT INTO TBL_CONTROL_PART_PROGRESS (
            CONTROL_SEQ,
            CONTROL_DETAIL_SEQ,
            SEQ,
            PART_STATUS,
            STATUS_DT,
            INSERT_ID
        ) VALUES (
            #{CONTROL_SEQ},
            #{CONTROL_DETAIL_SEQ},
            NEXTVAL(SEQ_CONTROL_PART_PROGRESS),
            'PRO006',
            NOW(),
            #{LOGIN_USER_ID}
        )
    </insert>

    <update id="updateCamStartControlPartStatus" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART
        SET
            PART_STATUS = 'PRO006',
            STATUS_DT = NOW(),
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
        WHERE CONTROL_SEQ = #{CONTROL_SEQ}
              AND CONTROL_DETAIL_SEQ  = #{CONTROL_DETAIL_SEQ}
    </update>

    <insert id="beforeStatusControlPartProgress" parameterType="java.util.HashMap" >
        DELETE FROM TBL_CONTROL_PART_PROGRESS
        WHERE PART_STATUS = 'PRO006'
            AND SEQ = (SELECT MAX(A.SEQ) FROM TBL_CONTROL_PART_PROGRESS A WHERE A.CONTROL_SEQ = #{CONTROL_SEQ}
                        AND A.CONTROL_DETAIL_SEQ  = #{CONTROL_DETAIL_SEQ})
            AND CONTROL_SEQ = #{CONTROL_SEQ}
            AND CONTROL_DETAIL_SEQ  = #{CONTROL_DETAIL_SEQ}
    </insert>

    <insert id="beforeStatusControlPart" parameterType="java.util.HashMap" >
        UPDATE TBL_CONTROL_PART A
            INNER JOIN  TBL_CONTROL_PART_PROGRESS B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND A.PART_STATUS != B.PART_STATUS
                AND B.SEQ = (SELECT MAX(C.SEQ) FROM TBL_CONTROL_PART_PROGRESS C WHERE C.CONTROL_SEQ = B.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ)
        SET
            A.PART_STATUS = B.PART_STATUS,
            A.STATUS_DT = B.STATUS_DT,
            A.UPDATE_DT = NOW(),
            A.UPDATE_ID = #{LOGIN_USER_ID}
        WHERE A.PART_STATUS = 'PRO006'
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND A.CONTROL_DETAIL_SEQ  = #{CONTROL_DETAIL_SEQ}
    </insert>

    <select id="selectNCMachineList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT EQUIP_SEQ AS CODE_CD, EQUIP_NM AS CODE_NM
        FROM TBL_EQUIP
        WHERE 1 = 1
            AND FACTORY_AREA IN ('ARE01', 'ARE02', 'ARE05', 'ARE06', 'ARE11')
            AND PROCESS_TYPE = 'MPR010'
        ORDER BY LAYOUT_ROW, LAYOUT_COL
    </select>

</mapper>