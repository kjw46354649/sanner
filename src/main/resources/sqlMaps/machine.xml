<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="machine">

    <select id="selectMachineList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.EQUIP_ID
            , A.PHOTO_GFILE_SEQ
            , jmes.SF_GET_FILE_ORGINAL_NM(A.PHOTO_GFILE_SEQ, NULL) as PHOTO_GFILE_SEQ_NM
            , A.EQUIP_NM
            , jmes.SF_GET_CODE_NM('1010', A.PROCESS_TYPE, 'KR') AS PROCESS_TYPE_NM
            , jmes.SF_GET_CODE_NM('1012', A.EQUIP_TYPE, 'KR') AS EQUIP_TYPE_NM
            , jmes.SF_GET_CODE_NM('1034', A.EQUIP_SIZE, 'KR') AS EQUIP_SIZE_NM
            , jmes.SF_GET_CODE_NM('1037', A.EQUIP_COMP_CD, 'KR') AS EQUIP_COMP_NM
            , jmes.SF_GET_CODE_NM('1022', A.RESELLER_CD, 'KR') AS RESELLER_NM
            , jmes.SF_GET_CODE_NM('1005', A.FACTORY_AREA, 'KR') AS FACTORY_AREA_NM
            , jmes.SF_GET_CODE_NM('1014', (SELECT REF_CD FROM jmes.TBL_CODE WHERE HIGH_CD = '1005' AND CODE_CD = A.FACTORY_AREA), 'KR') AS FACTORY_NM
            , jmes.SF_GET_DATE_F(A.PURCHASE_DT,'YY','') AS PURCHASE_DT
            , (SELECT USER_NM FROM jmes.TBL_USER WHERE USER_ID = A.MAIN_USER_ID) AS MAIN_USER_NM
            , (SELECT USER_NM FROM jmes.TBL_USER WHERE USER_ID = A.SUB_USER_ID) AS SUB_USER_NM
            , 'AFTER...' AS WORKING_TIME
            , (SELECT jmes.SF_GET_DATE_F(MAX(REPAIR_END_DT),'YY','') FROM jmes.TBL_EQUIP_REPAIR WHERE EQUIP_ID = A.EQUIP_ID) AS LAST_REPAIR_DT
            , 'AFTER...' AS LAST_CONTROL_NUM
            , A.NOTE
        FROM jmes.TBL_EQUIP A
        WHERE A.EQUIP_KIND = #{SEL_EQUIP_KIND}
        AND A.DEL_YN = 'N'
        <if test="SEL_EQUIP_TYPE !='' and SEL_EQUIP_TYPE != null">
            AND A.EQUIP_TYPE = #{SEL_EQUIP_TYPE}
        </if>
        <if test="SEL_EQUIP_SIZE !='' and SEL_EQUIP_SIZE != null">
            AND A.EQUIP_SIZE = #{SEL_EQUIP_SIZE}
        </if>
        <if test="SEL_EQUIP_NM !='' and SEL_EQUIP_NM != null">
            AND A.EQUIP_NM LIKE CONCAT('%', #{SEL_EQUIP_NM}, '%')
        </if>
        <if test="SEL_FACTORY_AREA !='' and SEL_FACTORY_AREA != null">
            AND A.FACTORY_AREA = #{SEL_FACTORY_AREA}
        </if>
        <if test="SEL_MAIN_USER_ID !='' and SEL_MAIN_USER_ID != null">
            AND EXISTS (  SELECT 1
                            FROM jmes.TBL_USER
                            WHERE USER_ID IN (A.MAIN_USER_ID, A.SUB_USER_ID)
                            AND USER_NM LIKE CONCAT('%', #{SEL_MAIN_USER_ID}, '%')
                       )
        </if>
        <if test="SEL_TERM_DT_USE or SEL_TERM_DT_USE ==true">
            <if test='SEL_DAY_TYPE == "1"'>
                AND A.PURCHASE_DT >= REPLACE(#{SEL_ST_DT},'-',space(0))
                AND A.PURCHASE_DT <![CDATA[ <= ]]> REPLACE(#{SEL_END_DT},'-',space(0))
            </if>
        </if>
        ORDER BY A.EQUIP_ID
    </select>

    <select id="selectMachineInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.EQUIP_ID
            , jmes.SF_GET_CODE_NM('1051', A.EQUIP_KIND, 'KR') AS EQUIP_KIND_NM
            , A.PHOTO_GFILE_SEQ
            , A.EQUIP_NM
            , A.PROCESS_TYPE
            , A.EQUIP_TYPE
            , A.EQUIP_SIZE
            , A.EQUIP_COMP_CD
            , A.FACTORY_AREA
            , A.MAIN_USER_ID
            , A.SUB_USER_ID
            , jmes.SF_GET_DATE_F(A.PURCHASE_DT,'YYYY','') AS PURCHASE_DT
            , A.RESELLER_CD
            , A.ETC_GFILE_SEQ
            , jmes.SF_GET_FILE_ORGINAL_NM(A.ETC_GFILE_SEQ, NULL) as ETC_GFILE_SEQ_NM
            , A.NOTE
        FROM jmes.TBL_EQUIP A
        WHERE A.EQUIP_ID = #{EQUIP_ID}
    </select>
    <select id="selectMachineSeq" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT CONCAT('NC', LPAD(NEXTVAL(jmes.SEQ_EQUIP),4,'0'))AS SEQ
        FROM dual
    </select>

    <insert id="insertMachineMaster" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_EQUIP (EQUIP_ID, EQUIP_KIND, EQUIP_NM
                              , PROCESS_TYPE, EQUIP_TYPE, EQUIP_SIZE
                              , EQUIP_COMP_CD, FACTORY_AREA
                              , MAIN_USER_ID, SUB_USER_ID, PURCHASE_DT, RESELLER_CD, NOTE
                              , PHOTO_GFILE_SEQ, ETC_GFILE_SEQ, INSERT_ID)
        VALUES (  #{EQUIP_ID}, #{EQUIP_KIND}, #{EQUIP_NM}
                , #{PROCESS_TYPE, jdbcType=VARCHAR}, #{EQUIP_TYPE}, #{EQUIP_SIZE}
                , #{EQUIP_COMP_CD}, #{FACTORY_AREA}
                , #{MAIN_USER_ID}, #{SUB_USER_ID}, REPLACE(#{PURCHASE_DT},'-',space(0)), #{RESELLER_CD}, #{NOTE}
                , #{PHOTO_GFILE_SEQ}, #{ETC_GFILE_SEQ}, #{LOGIN_USER_ID} )
    </insert>
    <update id="updateMachineMaster" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_EQUIP
        SET EQUIP_NM = #{EQUIP_NM}
              , PROCESS_TYPE = #{PROCESS_TYPE, jdbcType=VARCHAR}
              , EQUIP_TYPE = #{EQUIP_TYPE}
              , EQUIP_SIZE = #{EQUIP_SIZE}
              , EQUIP_COMP_CD = #{EQUIP_COMP_CD}
              , FACTORY_AREA = #{FACTORY_AREA}
              , MAIN_USER_ID = #{MAIN_USER_ID}
              , SUB_USER_ID = #{SUB_USER_ID}
              , PURCHASE_DT = REPLACE(#{PURCHASE_DT},'-',space(0))
              , RESELLER_CD = #{RESELLER_CD}
              , NOTE = #{NOTE}
            <if test="PHOTO_GFILE_SEQ != null and PHOTO_GFILE_SEQ != ''">
                  , PHOTO_GFILE_SEQ = #{PHOTO_GFILE_SEQ}
            </if>
            <if test="ETC_GFILE_SEQ != null and ETC_GFILE_SEQ != ''">
              , ETC_GFILE_SEQ = #{ETC_GFILE_SEQ}
            </if>
              , UPDATE_DT = NOW()
              , UPDATE_ID = #{LOGIN_USER_ID}
        WHERE EQUIP_ID = #{EQUIP_ID}
    </update>
    <delete id="deleteMachineMaster" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_EQUIP
        SET DEL_YN = 'Y'
          , UPDATE_DT = NOW()
          , UPDATE_ID = #{LOGIN_USER_ID}
        WHERE EQUIP_ID = #{EQUIP_ID}
    </delete>

    <select id="selectMachineLogList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.EQUIP_ID
          , A.SEQ
          , A.REPAIR_TYPE
          , A.REPAIR_DESC
          , jmes.SF_GET_DATE_F(A.REPAIR_START_DT,'YY','M') AS REPAIR_START_DT
          , jmes.SF_GET_DATE_F(A.REPAIR_END_DT,'YY','M') AS REPAIR_END_DT
          , CONCAT(DATEDIFF(A.REPAIR_END_DT, A.REPAIR_START_DT) * 24 + HOUR(TIMEDIFF(A.REPAIR_END_DT, A.REPAIR_START_DT)), 'H ', MINUTE(TIMEDIFF(A.REPAIR_END_DT, A.REPAIR_START_DT)),'M') AS REPAIR_TIME
          , A.NOTE
          , A.BEFORE_GFILE_SEQ
          , A.AFTER_GFILE_SEQ
        FROM jmes.TBL_EQUIP_REPAIR A
        WHERE A.EQUIP_ID = #{EQUIP_ID}
    </select>
    <select id="selectMachineHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.EQUIP_ID
          , A.SEQ
          , A.REPAIR_TYPE
          , SF_GET_CODE_NM(1036, REPAIR_TYPE, 'KR') AS REPAIR_TYPE_NM
          , A.REPAIR_DESC
          , jmes.SF_GET_DATE_F(A.REPAIR_START_DT,'YYYY','M') AS REPAIR_START_DT
          , jmes.SF_GET_DATE_F(A.REPAIR_END_DT,'YYYY','M') AS REPAIR_END_DT
          , CONCAT(DATEDIFF(A.REPAIR_END_DT, A.REPAIR_START_DT) * 24 + HOUR(TIMEDIFF(A.REPAIR_END_DT, A.REPAIR_START_DT)), 'H ', MINUTE(TIMEDIFF(A.REPAIR_END_DT, A.REPAIR_START_DT)),'M') AS REPAIR_TIME
          , A.NOTE
          , A.BEFORE_GFILE_SEQ
          , A.AFTER_GFILE_SEQ
        FROM jmes.TBL_EQUIP_REPAIR A
        WHERE A.EQUIP_ID = #{EQUIP_ID}
    </select>
    <insert id="insertMachineMasterHistory" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_EQUIP_REPAIR ( EQUIP_ID, SEQ, REPAIR_TYPE
                                            , REPAIR_START_DT, REPAIR_END_DT
                                            , REPAIR_DESC, NOTE, BEFORE_GFILE_SEQ, AFTER_GFILE_SEQ, INSERT_ID)
        VALUES (#{EQUIP_ID},NEXTVAL(jmes.SEQ_DUMMY),#{REPAIR_TYPE}
                , STR_TO_DATE(#{REPAIR_START_DT},'%Y-%m-%d %H:%i'), STR_TO_DATE(#{REPAIR_END_DT},'%Y-%m-%d %H:%i')
                , #{REPAIR_DESC}, #{NOTE}, #{BEFORE_GFILE_SEQ}, #{AFTER_GFILE_SEQ}, #{LOGIN_USER_ID})
    </insert>
    <update id="updateMachineMasterHistory" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_EQUIP_REPAIR
        SET  REPAIR_TYPE = #{REPAIR_TYPE}
            , REPAIR_START_DT = STR_TO_DATE(#{REPAIR_START_DT},'%Y-%m-%d %H:%i')
            , REPAIR_END_DT = STR_TO_DATE(#{REPAIR_END_DT},'%Y-%m-%d %H:%i')
            , REPAIR_DESC = #{REPAIR_DESC}
            , NOTE = #{NOTE}
            , BEFORE_GFILE_SEQ = #{BEFORE_GFILE_SEQ}
            , AFTER_GFILE_SEQ = #{AFTER_GFILE_SEQ}
            , UPDATE_DT = NOW()
            , UPDATE_ID = #{LOGIN_USER_ID}
        WHERE EQUIP_ID = #{EQUIP_ID}
            AND SEQ = #{SEQ}
    </update>
    <delete id="deleteMachineMasterHistory" parameterType="java.util.HashMap">
        DELETE FROM jmes.TBL_EQUIP_REPAIR
        WHERE EQUIP_ID = #{EQUIP_ID}
            AND SEQ = #{SEQ}
    </delete>
    <select id="selectEquipId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            EQUIP_ID,
            EQUIP_NM,
            LAYOUT_ROW,
            LAYOUT_COL
        FROM TBL_EQUIP
        WHERE 1 = 1
            AND FACTORY_AREA = #{FACTORY_AREA}
            AND PROCESS_TYPE = 'MPR010'
    </select>
    <select id="selectProcessPlanGridList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            E.EQUIP_ID,
            A.CONTROL_SEQ,
            A.CONTROL_DETAIL_SEQ,
            D.MCT_PLAN_SEQ,
            SF_GET_DATE_F(A.INNER_DUE_DT,'YYYY','') AS INNER_DUE_DT, <!-- 납기 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            A.PART_UNIT_QTY, <!-- Part 수량 -->
            A.MATERIAL_DETAIL, <!-- 소재 -->
            A.SIZE_TXT, <!-- 규격 -->
            C.POP_POSITION, <!-- 현재위치 -->
            D.WORKING_TIME,  <!-- 예상 시간(분) -->
            D.SORT_NUM,
            F.WORK_USER_ID,
            F.WORK_STATUS
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            LEFT OUTER JOIN TBL_POP C ON A.CONTROL_SEQ = C.CONTROL_SEQ
                                         AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_MCT_PLAN D ON A.CONTROL_SEQ = D.CONTROL_SEQ
                                         AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_EQUIP E ON D.EQUIP_ID = E.EQUIP_ID
            LEFT OUTER JOIN TBL_MCT_WORK F ON A.CONTROL_SEQ = F.CONTROL_SEQ
                                              AND A.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ
                                              AND E.EQUIP_ID = F.EQUIP_ID
        WHERE
            E.EQUIP_ID = #{EQUIP_ID}
            AND D.DEL_YN = 'N'
        ORDER BY D.SORT_NUM
    </select>
    <insert id="insertMctPlan"  parameterType="java.util.HashMap" >
        INSERT INTO TBL_MCT_PLAN (
            MCT_PLAN_SEQ,
            EQUIP_ID,
            CONTROL_SEQ,
            CONTROL_DETAIL_SEQ,
            WORKING_TIME,
            SORT_NUM
        ) VALUES(
            NEXTVAL(SEQ_MCT_PLAN),
            #{EQUIP_ID},
            #{CONTROL_SEQ},
            #{CONTROL_DETAIL_SEQ},
            #{WORKING_TIME},
            #{SORT_NUM}
        )
    </insert>
    <update id="updateMctPlan"  parameterType="java.util.HashMap" >
        UPDATE TBL_MCT_PLAN
        SET
            EQUIP_ID = #{EQUIP_ID},
            WORKING_TIME = #{WORKING_TIME},
            SORT_NUM = #{SORT_NUM},
            UPDATE_DT = NOW()
        WHERE MCT_PLAN_SEQ = #{MCT_PLAN_SEQ}
    </update>
    <delete id="deleteMctPlan" parameterType="java.util.HashMap">
        UPDATE TBL_MCT_PLAN
        SET
            UPDATE_DT = NOW(),
            <!-- UPDATE_ID = NULL, -->
            DEL_YN = 'Y'
        WHERE
            MCT_PLAN_SEQ = #{MCT_PLAN_SEQ}
    </delete>
    <delete id="deleteMctWork" parameterType="java.util.HashMap">
        UPDATE TBL_MCT_WORK
        SET
            UPDATE_DT = NOW(),
            <!-- UPDATE_ID = NULL, -->
            DEL_YN = 'Y'
        WHERE
            MCT_WORK_SEQ = (SELECT MCT_WORK_SEQ
                            FROM TBL_MCT_WORK
                            WHERE
                                DEL_YN = 'N'
                                AND CONTROL_SEQ = #{CONTROL_SEQ}
                                AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
                                AND EQUIP_ID = #{EQUIP_ID})
    </delete>
    <sql id="mctManage">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ,
            A.CONTROL_DETAIL_SEQ,
            SF_GET_DATE_F(A.INNER_DUE_DT,'YYYY','') AS INNER_DUE_DT, <!-- 납기 -->
            CASE
                WHEN B.EMERGENCY_YN = 'Y' THEN '긴'
            END AS EMERGENCY_YN, <!-- 긴급 -->
            CASE
                WHEN B.MAIN_INSPECTION = 'Y' THEN '주'
            END AS MAIN_INSPECTION, <!-- 주요 검사품 -->
            CASE
                WHEN A.WORK_TYPE = 'WTP030' THEN '수'
                WHEN A.WORK_TYPE = 'WTP040' THEN '재'
            END AS WORK_NM, <!-- 형태 -->
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 1, 'MCT_PLAN_SEQ') AS MCT_PLAN_SEQ_1,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 1, 'EQUIP_ID') AS EQUIP_ID_1,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 1, 'WORKING_TIME') AS WORKING_TIME_1,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 1, 'STATUS') AS STATUS_1,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 2, 'MCT_PLAN_SEQ') AS MCT_PLAN_SEQ_2,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 2, 'EQUIP_ID')  AS EQUIP_ID_2,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 2, 'WORKING_TIME') AS WORKING_TIME_2,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 2, 'STATUS') AS STATUS_2,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 3, 'MCT_PLAN_SEQ') AS MCT_PLAN_SEQ_3,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 3, 'EQUIP_ID')  AS EQUIP_ID_3,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 3, 'WORKING_TIME') AS WORKING_TIME_3,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 3, 'STATUS') AS STATUS_3,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 4, 'MCT_PLAN_SEQ') AS MCT_PLAN_SEQ_4,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 4, 'EQUIP_ID')  AS EQUIP_ID_4,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 4, 'WORKING_TIME') AS WORKING_TIME_4,
            SF_GET_MCT_PLAN(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, 4, 'STATUS') AS STATUS_4,
            H.POP_POSITION, <!-- 현재위치 -->
            SF_GET_CODE_NM(1013, A.PART_STATUS, 'KR') AS PART_STATUS, <!-- 진행상태 -->
            (SELECT COUNT(*)
            FROM TBL_CONTROL_PART AA
                INNER JOIN TBL_MCT_WORK BB ON AA.CONTROL_SEQ = BB.CONTROL_SEQ
                                             AND AA.CONTROL_DETAIL_SEQ = BB.CONTROL_DETAIL_SEQ
                INNER JOIN TBL_EQUIP CC ON BB.EQUIP_ID = CC.EQUIP_ID
            WHERE
                AA.CONTROL_SEQ = A.CONTROL_SEQ
                AND	AA.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
                AND BB.DEL_YN = 'N'
                AND CC.PROCESS_TYPE = 'MPR010'
            GROUP BY
                AA.CONTROL_SEQ,
                AA.CONTROL_DETAIL_SEQ) AS PROCESS_PROGRESS_NC, <!-- 가공진행현황_NC -->
            (SELECT COUNT(*)
            FROM TBL_CONTROL_PART AA
                INNER JOIN TBL_MCT_WORK BB ON AA.CONTROL_SEQ = BB.CONTROL_SEQ
                                             AND AA.CONTROL_DETAIL_SEQ = BB.CONTROL_DETAIL_SEQ
                INNER JOIN TBL_EQUIP CC ON BB.EQUIP_ID = CC.EQUIP_ID
            WHERE
                AA.CONTROL_SEQ = A.CONTROL_SEQ
                AND	AA.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
                AND BB.DEL_YN = 'N'
                AND CC.PROCESS_TYPE = 'MPR020'
            GROUP BY
                AA.CONTROL_SEQ,
                AA.CONTROL_DETAIL_SEQ) AS PROCESS_PROGRESS_MILLING, <!-- 가공진행현황_밀링 -->
            (SELECT COUNT(*)
            FROM TBL_CONTROL_PART AA
                INNER JOIN TBL_MCT_WORK BB ON AA.CONTROL_SEQ = BB.CONTROL_SEQ
                                             AND AA.CONTROL_DETAIL_SEQ = BB.CONTROL_DETAIL_SEQ
                INNER JOIN TBL_EQUIP CC ON BB.EQUIP_ID = CC.EQUIP_ID
            WHERE
                AA.CONTROL_SEQ = A.CONTROL_SEQ
                AND	AA.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
                AND BB.DEL_YN = 'N'
                AND CC.PROCESS_TYPE = 'MPR030'
            GROUP BY
                AA.CONTROL_SEQ,
                AA.CONTROL_DETAIL_SEQ) AS PROCESS_PROGRESS_RACK, <!-- 가공진행현황_선반 -->
            (SELECT COUNT(*)
            FROM TBL_CONTROL_PART AA
                INNER JOIN TBL_MCT_WORK BB ON AA.CONTROL_SEQ = BB.CONTROL_SEQ
                                             AND AA.CONTROL_DETAIL_SEQ = BB.CONTROL_DETAIL_SEQ
                INNER JOIN TBL_EQUIP CC ON BB.EQUIP_ID = CC.EQUIP_ID
            WHERE
                AA.CONTROL_SEQ = A.CONTROL_SEQ
                AND	AA.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
                AND BB.DEL_YN = 'N'
                AND CC.PROCESS_TYPE = 'MPR040'
            GROUP BY
                AA.CONTROL_SEQ,
                AA.CONTROL_DETAIL_SEQ ) AS PROCESS_PROGRESS_GRINDING, <!-- 가공진행현황_연마 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            A.PART_NUM, <!-- Part -->
            A.MATERIAL_DETAIL, <!-- 소재종류 상세 -->
            C.ORDER_QTY, <!-- 수량 -->
            A.SIZE_TXT AS STANDARD_SIZE, <!-- 규격 -->
            D.SIZE_TXT AS MATERIAL_SIZE, <!-- 소재 Size -->
            CONCAT(B.NOTE, D.ORDER_NOTE) AS NOTE, <!-- 비고 기록사항 -->
            (SELECT SUM(WORKING_TIME) AS WORKING_TIME
            FROM TBL_MCT_PLAN
            WHERE
                CONTROL_SEQ = A.CONTROL_SEQ
                AND CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
                AND EQUIP_ID IS NOT NULL
                AND DEL_YN = 'N') AS WORKING_TIME_TOTAL, <!-- 예상가공 시간(분) -->
            A.MCT_NOTE, <!-- 가공계획 비고 -->
            A.MCT_WORK_TYPE, <!-- 작업 구분 -->
            H.POP_PREV_POSITION, <!-- 이전 위치 -->
            (SELECT TRUE
            FROM TBL_MCT_WORK
            WHERE
                NOT EXISTS (SELECT CONTROL_SEQ, CONTROL_DETAIL_SEQ
                            FROM TBL_CONTROL_PART tcp
                            WHERE
                                DRAWING_NUM = A.DRAWING_NUM
                                AND INSERT_DT >= DATE_SUB(NOW(), INTERVAL 6 MONTH))
                AND CONTROL_SEQ <![CDATA[<>]]> A.CONTROL_SEQ
                AND CONTROL_DETAIL_SEQ  <![CDATA[<>]]> A.CONTROL_DETAIL_SEQ) AS PAST_WORKER_BOOL, <!-- 과거 경험(NC설계 기준) -->
            (SELECT WORK_USER_ID
            FROM TBL_MCT_WORK
            WHERE
                (CONTROL_SEQ, CONTROL_DETAIL_SEQ) IN (SELECT CONTROL_SEQ, CONTROL_DETAIL_SEQ
                                                      FROM TBL_CONTROL_PART
                                                      WHERE
                                                          DRAWING_NUM = A.DRAWING_NUM
                                                          AND INSERT_DT >= DATE_SUB(NOW(), INTERVAL 6 MONTH))
                AND CONTROL_SEQ <![CDATA[<>]]> A.CONTROL_SEQ
                AND CONTROL_DETAIL_SEQ  <![CDATA[<>]]> A.CONTROL_DETAIL_SEQ
            ORDER BY INSERT_DT DESC
            LIMIT 1) AS PAST_WORKER, <!-- 과거 경험(NC설계 기준) -->
            SF_GET_DATE_F(A.STATUS_DT,'YYYY','M') AS SATAUS_DT, <!-- 확정 일시 -->
            SF_GET_DATE_F(D.IN_DT,'YYYY','M') AS MATERIAL_INNER_DT <!-- 소재 입고 일시 -->
    </sql>
    <select id="selectProcessTargetList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <include refid="mctManage" />
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_PART_ORDER C ON A.CONTROL_SEQ = C.CONTROL_SEQ
                                                   AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_MATERIAL_ORDER D ON A.CONTROL_SEQ = D.CONTROL_SEQ
                                                    AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
        <!-- 	LEFT OUTER JOIN TBL_MCT_PLAN E ON A.CONTROL_SEQ = E.CONTROL_SEQ -->
        <!-- 	                             AND A.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ -->
        <!-- 	LEFT OUTER JOIN TBL_MCT_WORK F ON A.CONTROL_SEQ = F.CONTROL_SEQ -->
        <!-- 	                                  AND A.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ -->
        <!-- 	INNER JOIN TBL_EQUIP G ON E.EQUIP_ID = G.EQUIP_ID -->
        <!-- 	                          AND F.EQUIP_ID = G.EQUIP_ID -->
        INNER JOIN TBL_POP H ON A.CONTROL_SEQ = H.CONTROL_SEQ
        AND A.CONTROL_DETAIL_SEQ = H.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
            AND B.CONTROL_STATUS = 'ORD001' <!-- 주문확정 -->
            AND A.PART_STATUS IN ('PRO002', 'PRO004', 'PRO005', 'PRO006', 'PRO007', 'PRO008', 'PRO008')
        GROUP BY
            A.CONTROL_SEQ,
            A.CONTROL_DETAIL_SEQ
    </select>
    <update id="updateMctTarget"  parameterType="java.util.HashMap" >
        UPDATE TBL_CONTROL_PART
        SET
            MCT_NOTE = #{MCT_NOTE},
            MCT_WORK_TYPE = #{MCT_WORK_TYPE}
        WHERE
            CONTROL_SEQ = #{CONTROL_SEQ}
            AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </update>
    <update id="updateMctPlanFromTarget"  parameterType="java.util.HashMap" >
        UPDATE TBL_MCT_PLAN
        SET
            WORKING_TIME = #{WORKING_TIME},
            UPDATE_DT = NOW()
        WHERE MCT_PLAN_SEQ = #{MCT_PLAN_SEQ}
    </update>
    <select id="selectCamWorkHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ,
            A.CONTROL_DETAIL_SEQ,
            SF_GET_DATE_F(A.INNER_DUE_DT,'YYYY','') AS INNER_DUE_DT, <!-- 납기 -->
            CASE
                WHEN B.EMERGENCY_YN = 'Y' THEN '긴'
            END AS EMERGENCY_YN, <!-- 긴급 -->
            CASE
                WHEN B.MAIN_INSPECTION = 'Y' THEN '주'
            END AS MAIN_INSPECTION, <!-- 주요 검사품 -->
            CASE 
                WHEN A.WORK_TYPE = 'WTP030' THEN '수'
                WHEN A.WORK_TYPE = 'WTP040' THEN '재'
            END AS WORK_NM, <!-- 형태 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            A.PART_NUM, <!-- Part  -->
            A.MATERIAL_DETAIL, <!-- 소재종류 상세 -->
            A.PART_UNIT_QTY, <!-- 수량 -->
            A.SIZE_TXT AS STANDARD_SIZE, <!-- 규격 -->
            '', <!-- NC Actual -->
            '', <!-- 가공진행 현황 -->
            '', <!-- 총 가공 시간 -->
            A.PART_STATUS, <!-- 진행상태 -->
            H.POP_POSITION, <!-- 현재위치	 -->
            A.MCT_WORK_TYPE, <!-- 작업 구분 -->
            J.DESIGN_QTY, <!-- Step -->
            J.WORK_DIRECTION, <!-- 가공위치 -->
            J.WORK_DESC, <!-- 작업내용 -->
            J.WORK_USER_ID, <!-- 작업자 -->
            J.CAM_GFILE_SEQ,
            I.NOTE, <!-- 비고 -->
            I.UPDATE_DT, <!-- Update 확인! -->
            H.POP_PREV_POSITION, <!-- 이전 위치 -->
            SF_GET_DATE_F(A.STATUS_DT,'YYYY','M') AS SATAUS_DT, <!-- 가공 확정 일시 -->
            SF_GET_DATE_F(D.IN_DT,'YYYY','M') AS MATERIAL_INNER_DT, <!-- 소재 입고 일시 -->
            CONCAT(B.NOTE, D.ORDER_NOTE) AS NOTE, <!-- 비고 기록사항 -->
            K.INSPECT_SEQ, <!-- 품질현황 SEQ??? -->
            K.INSPECT_GRADE, <!-- 판정 -->
            K.INSPECT_RESULT, <!-- 불량 코드 A~C 통과 D이면 불량! -->
            K.ERROR_REASON, <!-- 원인 -->
            K.ERROR_ACTION, <!-- 조치방안 -->
            K.INSERT_DT <!-- 작성일자 -->
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ 
        <!-- 	INNER JOIN TBL_CONTROL_PART_ORDER C ON A.CONTROL_SEQ = C.CONTROL_SEQ -->
        <!-- 	                                       AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ -->
            LEFT OUTER JOIN TBL_MATERIAL_ORDER D ON A.CONTROL_SEQ = D.CONTROL_SEQ 
                                               AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ 
        <!-- 	INNER JOIN TBL_MCT_PLAN E ON A.CONTROL_SEQ = E.CONTROL_SEQ -->
        <!-- 	                             AND A.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ -->
            LEFT OUTER JOIN TBL_MCT_WORK F ON A.CONTROL_SEQ = F.CONTROL_SEQ 
                                              AND A.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ
         <!--   INNER JOIN TBL_EQUIP G ON E.EQUIP_ID = G.EQUIP_ID -->
         <!--                             AND F.EQUIP_ID = G.EQUIP_ID -->
            LEFT OUTER JOIN TBL_POP H ON A.CONTROL_SEQ = H.CONTROL_SEQ 
                                         AND A.CONTROL_DETAIL_SEQ = H.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_CAM I ON A.CONTROL_SEQ = I.CONTROL_SEQ 
                                         AND A.CONTROL_DETAIL_SEQ = I.CONTROL_DETAIL_SEQ 
            LEFT OUTER JOIN TBL_CAM_DETAIL J ON I.CAM_SEQ = J.CAM_SEQ 
            LEFT OUTER JOIN TBL_INSPECT K ON A.CONTROL_SEQ = K.CONTROL_SEQ 
                                             AND A.CONTROL_DETAIL_SEQ = K.CONTROL_DETAIL_SEQ 
    </select>
    <select id="selectNcPerformanceHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ,
            A.CONTROL_DETAIL_SEQ,
            SF_GET_CODE_NM(1005, E.FACTORY_AREA, 'KR') AS FACTORY_AREA, <!-- 공정구분 -->
            '', <!-- NC 명 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            A.PART_NUM, <!-- Part -->
            A.DRAWING_NUM, <!-- 도면번호 -->
            A.ITEM_NM, <!-- 품명 -->
            SF_GET_CODE_NM(1033, A.WORK_TYPE, 'KR') AS WORK_TYPE, <!-- 형태 -->
            SF_GET_CODE_NM(1027, A.MATERIAL_DETAIL, 'KR') AS MATERIAL_DETAIL, <!-- 소재종류 -->
            SF_GET_CODE_NM(1029, A.MATERIAL_KIND, 'KR') AS MATERIAL_KIND, <!-- 소재분류? -->
            A.PART_UNIT_QTY, <!-- 수량 -->
            A.SIZE_TXT AS STANDARD_SIZE, <!-- 규격 -->
            C.SIZE_TXT AS MATERIAL_SIZE, <!-- 소재 Size -->
            A.MATERIAL_FINISH_TM, <!-- TM각비 -->
            A.MATERIAL_FINISH_GRIND, <!-- 연마 -->
            A.MATERIAL_FINISH_HEAT, <!-- 열처리 -->
            SF_GET_DATE_F(D.WORK_START_DT, 'YYYY', 'M') AS WORK_START_DT, <!-- 착수일시 -->
            SF_GET_DATE_F(D.WORK_FINISH_DT, 'YYYY', 'M') AS WORK_FINISH_DT, <!-- 완료일시 -->
            CONCAT(D.WORK_STOP_DT, '분') AS WORK_STOP_DT, <!-- 정지시간 -->
            CONCAT(TIMESTAMPDIFF(MINUTE, D.WORK_START_DT, WORK_FINISH_DT), '분') AS LEAD_TIME, <!-- 소요시간 -->
            CONCAT(TIMESTAMPDIFF(MINUTE, D.WORK_START_DT, WORK_FINISH_DT) / A.PART_UNIT_QTY, '분') AS UNIT_LEAD_TIME, <!-- 단위소요 -->
            D.WORK_USER_ID <!-- 작업자 -->
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            LEFT OUTER JOIN TBL_MATERIAL_ORDER C ON A.CONTROL_SEQ = C.CONTROL_SEQ
            AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_MCT_WORK D ON A.CONTROL_SEQ = D.CONTROL_SEQ
            AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_EQUIP E ON D.EQUIP_ID = E.EQUIP_ID
    </select>
    <select id="selectResultManageList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        <include refid="mctManage" />
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_PART_ORDER C ON A.CONTROL_SEQ = C.CONTROL_SEQ
                                                   AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_MATERIAL_ORDER D ON A.CONTROL_SEQ = D.CONTROL_SEQ
                                                    AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            <!-- 	LEFT OUTER JOIN TBL_MCT_PLAN E ON A.CONTROL_SEQ = E.CONTROL_SEQ -->
            <!-- 	                             AND A.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ -->
            <!-- 	LEFT OUTER JOIN TBL_MCT_WORK F ON A.CONTROL_SEQ = F.CONTROL_SEQ -->
            <!-- 	                                  AND A.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ -->
            <!-- 	INNER JOIN TBL_EQUIP G ON E.EQUIP_ID = G.EQUIP_ID -->
            <!-- 	                          AND F.EQUIP_ID = G.EQUIP_ID -->
            INNER JOIN TBL_POP H ON A.CONTROL_SEQ = H.CONTROL_SEQ
                                    AND A.CONTROL_DETAIL_SEQ = H.CONTROL_DETAIL_SEQ
        WHERE 1 = 1
            AND B.CONTROL_STATUS = 'ORD001' <!-- 주문확정 -->
            AND A.PART_STATUS IN ('PRO002', 'PRO004', 'PRO005', 'PRO006', 'PRO007', 'PRO008', 'PRO008')
        GROUP BY
            A.CONTROL_SEQ,
            A.CONTROL_DETAIL_SEQ
    </select>
</mapper>