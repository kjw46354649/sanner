<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="tvMapper">

    <select id="selectTvPopList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.POP_SEQ
            , A.POP_POSITION
            , SF_GET_CODE_NM(1009,A.POP_POSITION,#{LOGIN_LOCALE}) AS POP_NM
            , A.CONTROL_SEQ
            , A.CONTROL_DETAIL_SEQ
            , COUNT(*) OVER (PARTITION BY A.POP_POSITION) AS TOTAL_CNT
            , SUM(SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ)) OVER (PARTITION BY A.POP_POSITION) AS TOTAL_QTY
            , C.IMG_GFILE_SEQ
            , SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY
            , jmes.SF_GET_CODE_NM('1013', C.PART_STATUS, #{LOGIN_LOCALE}) AS PART_STATUS_NM
            , C.PART_STATUS
            , DATE_FORMAT(C.INNER_DUE_DT, '%m/%d') AS INNER_DUE_DT
            , CASE WHEN C.PART_NUM IS NULL THEN CONCAT(B.CONTROL_NUM, <![CDATA[ '<br>' ]]> , C.SIZE_TXT) ELSE CONCAT(B.CONTROL_NUM, ' #', C.PART_NUM, <![CDATA[ '<br>' ]]> ,C.SIZE_TXT) END AS CONTROL_NUM_PART_NUM
            , CONCAT(jmes.SF_GET_CODE_NM('1033', C.WORK_TYPE, #{LOGIN_LOCALE}), <![CDATA[ '<br>' ]]> ,SF_GET_CODE_NM('1027', C.MATERIAL_DETAIL, #{LOGIN_LOCALE})) AS WORK_TYPE_MATERIAL
            , IFNULL(SF_GET_COMP_NM(C.OUTSIDE_COMP_CD), SPACE(0)) AS OUTSIDE_COMP_NM
            , CASE WHEN IFNULL(jmes.SF_GET_SIDE_QTY(A.CONTROL_SEQ, 'ORIGINAL_SIDE_QTY') * IFNULL(C.PART_UNIT_QTY, 1), 0) = 0 AND IFNULL(jmes.SF_GET_SIDE_QTY(A.CONTROL_SEQ, 'OTHER_SIDE_QTY') * IFNULL(C.PART_UNIT_QTY, 1), 0) > 0 THEN '대'
            ELSE 'N'
            END AS ORDER_QTY_INFO
            , IFNULL(jmes.SF_GET_CODE_NM('1010', E.PROCESS_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS RECENTLY_PROCESS_TYPE_NM
            , SF_GET_USER_NM(D.WORK_USER_ID) AS RECENTLY_WORK_USER_NM
            , CASE
                WHEN C.PART_STATUS != 'PRO007' AND SUM(IFNULL(TIMESTAMPDIFF(SECOND, F.WORK_START_DT, F.WORK_STOP_DT), 0)) > 0 THEN
                    CONCAT(TRUNCATE(IFNULL(SUM(IFNULL(TIMESTAMPDIFF(SECOND, F.WORK_START_DT, F.WORK_STOP_DT), 0)),0)/3600,0),'h ',TRUNCATE((IFNULL(SUM(IFNULL(TIMESTAMPDIFF(SECOND, F.WORK_START_DT, F.WORK_STOP_DT), 0)),0)%3600)/60,0),'m')
                ELSE SPACE(0)
            END RECENTLY_WORKING_TIME
        FROM TBL_POP A
            INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.DEL_YN = 'N' AND B.CONTROL_STATUS != 'ORD004' AND B.OUT_FINISH_DT IS NULL
            INNER JOIN TBL_CONTROL_PART C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ AND (C.PART_STATUS != 'PRO018' OR C.WORK_TYPE != 'WTP050')
            LEFT OUTER JOIN TBL_MCT_WORK D ON D.CONTROL_SEQ = C.CONTROL_SEQ AND D.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ AND D.DEL_YN = 'N'
                AND D.MCT_WORK_SEQ = (
                    SELECT MAX(X.MCT_WORK_SEQ)
                    FROM jmes.TBL_MCT_WORK X
                    WHERE  X.DEL_YN = 'N'
                        AND X.CONTROL_SEQ = D.CONTROL_SEQ
                        AND X.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
                    GROUP BY X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ
                )
            LEFT OUTER JOIN TBL_EQUIP E ON E.EQUIP_SEQ = D.EQUIP_SEQ
            LEFT OUTER JOIN TBL_MCT_WORK_TIME F ON F.MCT_WORK_SEQ = D.MCT_WORK_SEQ
        WHERE A.POP_SEQ = (SELECT MAX(X.POP_SEQ) FROM TBL_POP X WHERE X.CONTROL_SEQ = A.CONTROL_SEQ AND X.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ GROUP BY X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ)
            <if test="POP_POSITION != null and POP_POSITION != ''">
                AND A.POP_POSITION = #{POP_POSITION}
            </if>
        GROUP BY A.POP_SEQ
        ORDER BY A.POP_DT DESC
    </select>

    <select id="selectTvPopList2" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        -- 소재대기
        SELECT CASE WHEN B.PART_NUM IS NULL THEN A.CONTROL_NUM ELSE CONCAT(A.CONTROL_NUM,'#',B.PART_NUM) END AS CONTROL_PART_INFO
             , B.IMG_GFILE_SEQ
             , COUNT(*) OVER () AS TOTAL_CNT
        FROM  jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
          AND A.DEL_YN = 'N'
          AND A.OUT_FINISH_DT IS NULL
          AND B.PART_STATUS = 'PRO004'
        ORDER BY A.CONTROL_SEQ DESC
    </select>

    <select id="selectTvPopList3" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        -- 외주진행
        SELECT
            CASE WHEN B.PART_NUM IS NULL THEN A.CONTROL_NUM ELSE CONCAT(A.CONTROL_NUM,'#',B.PART_NUM) END AS CONTROL_PART_INFO
             , B.IMG_GFILE_SEQ
             , COUNT(*) OVER () AS TOTAL_CNT
        FROM  jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
          AND A.DEL_YN = 'N'
          AND A.OUT_FINISH_DT IS NULL
          AND B.PART_STATUS = 'PRO001'
        ORDER BY A.CONTROL_SEQ DESC
    </select>

    <select id="selectTvMachineList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT X.EQUIP_SEQ
            , X.EQUIP_ID
            , X.EQUIP_NM
            , IFNULL(X.IF_USE_YN,'N') AS IF_USE_YN
            , CASE WHEN X.PROCESS_TYPE = 'MPR010' THEN 'readyImgNct'
                   WHEN X.PROCESS_TYPE = 'MPR020' THEN 'readyImgMilling'
                   WHEN X.PROCESS_TYPE = 'MPR030' THEN 'readyImgGrinding'
                   WHEN X.PROCESS_TYPE = 'MPR040' THEN 'readyImgTurnning'
                   ELSE 'readyImg'
              END AS MACHINE_ICON
            , X.PHOTO_GFILE_SEQ AS EQUIP_PHOTO_GFILE_SEQ
            , X.EQUIP_OFF_DT
            , X.EQUIP_OFF_YN
            , CASE WHEN X.EQUIP_OFF_DT IS NOT NULL THEN TIMESTAMPDIFF(SECOND, X.EQUIP_OFF_DT, NOW()) ELSE SPACE(0) END AS EQUIP_OFF_TIME
            , X.DISCONNECT_YN
            , X.FACTORY_AREA
            , X.LAYOUT_SORT
            , Y.CONTROL_PART_INFO
            , Y.WORK_ACTIVE_TIME
            , Y.WORK_STOP_TIME
            , CASE WHEN Y.PLAN_WORKING_TIME IS NOT NULL AND TRUNCATE(IFNULL(Y.PLAN_WORKING_TIME,0)/60,0) <![CDATA[ < ]]> 1 THEN CONCAT(TRUNCATE((IFNULL(Y.PLAN_WORKING_TIME,0)%60),0),'m')
                   WHEN Y.PLAN_WORKING_TIME IS NOT NULL THEN CONCAT(TRUNCATE(IFNULL(Y.PLAN_WORKING_TIME,0)/60,0),'h ',TRUNCATE((IFNULL(Y.PLAN_WORKING_TIME,0)%60),0),'m')
                   ELSE SPACE(0)
              END AS PLAN_WORKING_TIME
            , CASE WHEN Y.WORK_STATUS = 'DBS010' THEN 'pause'
                   WHEN Y.WORK_STATUS = 'DBS020' THEN 'login'
                   ELSE SPACE(0)
              END WORK_STATUS
            , CASE WHEN X.LOGIN_USER_ID IS NOT NULL THEN jmes.SF_GET_USER_NM(X.LOGIN_USER_ID)
                   WHEN Y.WORK_STATUS = 'DBS020'    THEN jmes.SF_GET_USER_NM(X.UPDATE_ID)
              END AS USER_NM
            , CASE WHEN X.LOGIN_USER_ID IS NOT NULL THEN (SELECT M.PHOTO_GFILE_SEQ FROM jmes.TBL_USER M WHERE M.USER_ID = X.LOGIN_USER_ID)
                   WHEN Y.WORK_STATUS = 'DBS020'    THEN (SELECT M.PHOTO_GFILE_SEQ FROM jmes.TBL_USER M WHERE M.USER_ID = X.UPDATE_ID)
              END AS USER_PHOTO_GFILE_SEQ
            , Y.IMG_GFILE_SEQ
            , Y.WORK_TYPE
            , SF_GET_CODE_NM('1033',Y.WORK_TYPE,#{LOGIN_LOCALE}) AS WORK_TYPE_NM
            , Y.MATERIAL_TYPE
            , jmes.SF_GET_CODE_NM('1035', Y.MATERIAL_TYPE, #{LOGIN_LOCALE}) AS MATERIAL_TYPE_NM
            , Y.MATERIAL_DETAIL
            , jmes.SF_GET_CODE_NM('1027', Y.MATERIAL_DETAIL, #{LOGIN_LOCALE}) AS MATERIAL_DETAIL_NM
            , CONCAT(Y.PART_QTY,'EA') AS PART_QTY
            , CASE WHEN X.IF_USE_YN = 'Y' THEN Y.COMPLETE_QTY
                   ELSE SPACE(1)
              END AS COMPLETE_QTY
            , CASE WHEN X.IF_USE_YN = 'Y' THEN TRUNCATE((Y.COMPLETE_QTY / Y.GOAL_QTY),0) * 100
                   ELSE SPACE(1)
              END AS COMPLETE_PERCENT
            , Y.ACTIVE_TYPE
            , CASE WHEN Y.WORK_STATUS IS NOT NULL
                    THEN CONCAT(
                        TRUNCATE(IFNULL(Y.WORK_ACTIVE_TIME,0)/3600,0) , 'h ',
                        TRUNCATE((IFNULL(Y.WORK_ACTIVE_TIME,0)%3600)/60,0), 'm'
                    )
              END AS ACTIVE_TOTAL
            , Y.LEFT_TIME
            , Y.CURRENT_STATUS_TIME
            , Y.WORK_ACTIVE_TIME
            , CASE WHEN Y.ACTIVE_TYPE = 'PGM_STOP' AND Y.CURRENT_STATUS_TIME IS NOT NULL
                        THEN CONCAT(
                            TRUNCATE(IFNULL(Y.CURRENT_STATUS_TIME,0)/3600,0) , 'h ',
                            TRUNCATE((IFNULL(Y.CURRENT_STATUS_TIME,0)%3600)/60,0), 'm'
                        )
                   WHEN Y.WORK_STATUS = 'DBS010' THEN CONCAT(
                        TRUNCATE(IFNULL(Y.UPDATE_DIF,0)/3600,0) , 'h ',
                        TRUNCATE((IFNULL(Y.UPDATE_DIF,0)%3600)/60,0), 'm'
                   )
              END AS STOP_TIME
            , CASE WHEN Y.WORK_STATUS IS NOT NULL
                    THEN CASE WHEN Y.LEFT_TIME <![CDATA[ < ]]> 0 THEN CONCAT(
                                TRUNCATE(IFNULL(Y.WORK_ACTIVE_TIME,0)/3600,0) , 'h ',
                                TRUNCATE((IFNULL(Y.WORK_ACTIVE_TIME,0)%3600)/60,0), 'm'
                             ) ELSE CONCAT(
                                TRUNCATE(((IFNULL(Y.LEFT_TIME,0) + IFNULL(Y.WORK_ACTIVE_TIME,0))/3600),0), 'h ',
                                TRUNCATE((((IFNULL(Y.LEFT_TIME,0) + IFNULL(Y.WORK_ACTIVE_TIME,0))%3600)/60),0),'m'
                             ) END
              END AS LEFT_TIME
            , CASE WHEN Y.WORK_STATUS IS NULL THEN (
                        SELECT TIMESTAMPDIFF(SECOND, MAX(Q.WORK_FINISH_DT), NOW())
                        FROM TBL_MCT_WORK Q
                        WHERE Q.DEL_YN = 'N'
                            AND Q.WORK_START_DT IS NOT NULL
                            AND Q.WORK_FINISH_DT IS NOT NULL
                            AND Q.EQUIP_SEQ = X.EQUIP_SEQ
                    )
                   ELSE 0
              END AS LAST_WORK_TIME
            ,(
                SELECT CONVERT(CONVERT(CONCAT(SPACE(0),COUNT(*), ' (',IFNULL(SUM(jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ)),0),'EA)') USING BINARY) USING utf8) AS TOTA
                FROM jmes.TBL_CONTROL_PART A
                    INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.OUT_FINISH_DT IS NULL AND B.DEL_YN = 'N' AND B.CONTROL_STATUS NOT IN ('ORD004')
                    INNER JOIN jmes.TBL_POP C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                        AND C.POP_SEQ = (
                            SELECT MAX(K.POP_SEQ)
                            FROM jmes.TBL_POP K
                            WHERE K.CONTROL_SEQ = C.CONTROL_SEQ AND K.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                        )
                WHERE 1 = 1
                    AND NOT EXISTS (SELECT E.CONTROL_SEQ FROM jmes.TBL_CONTROL_PART E
                        WHERE A.CONTROL_SEQ = E.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ
                        AND E.PART_STATUS = 'PRO018' AND E.WORK_TYPE = 'WTP050'
                    )
                    AND NOT EXISTS (
                        SELECT F.MCT_WORK_SEQ
                        FROM TBL_MCT_WORK F
                        WHERE F.CONTROL_SEQ = A.CONTROL_SEQ
                            AND F.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
                            AND F.DEL_YN = 'N'
                            AND F.WORK_STATUS IN ('DBS010','DBS020')
                    )
                    AND (
                        CASE
                            WHEN X.FACTORY_AREA = 'ARE01' THEN C.POP_POSITION IN ('POP010','POP020')
                            WHEN X.FACTORY_AREA = 'ARE02' THEN C.POP_POSITION = 'POP030'
                            WHEN X.FACTORY_AREA = 'ARE03' THEN C.POP_POSITION IN ('POP040','POP050')
                            WHEN X.FACTORY_AREA = 'ARE04' THEN C.POP_POSITION = 'POP060'
                            WHEN X.FACTORY_AREA = 'ARE05' THEN C.POP_POSITION = 'POP080'
                            WHEN X.FACTORY_AREA = 'ARE06' THEN C.POP_POSITION = 'POP200'
                            WHEN X.FACTORY_AREA = 'ARE07' THEN C.POP_POSITION IN ('POP110','POP120')
                            WHEN X.FACTORY_AREA = 'ARE08' THEN C.POP_POSITION = 'POP100'
                            WHEN X.FACTORY_AREA = 'ARE09' THEN C.POP_POSITION = 'POP130'
                            WHEN X.FACTORY_AREA = 'ARE11' THEN C.POP_POSITION = 'POP070'
                        END
                    )
            ) AS WAIT_TOTAL
            ,(
                SELECT CONVERT(CONVERT(CONCAT(SPACE(0),COUNT(*), ' (',IFNULL(SUM(jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ)),0),'EA)') USING BINARY) USING utf8) AS TOTAL
                FROM jmes.TBL_MCT_WORK A
                    INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.DEL_YN = 'N'
                    INNER JOIN jmes.TBL_CONTROL_PART C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                    INNER JOIN TBL_EQUIP D ON D.EQUIP_SEQ = A.EQUIP_SEQ AND D.DEL_YN = 'N' AND D.FACTORY_AREA = X.FACTORY_AREA
                WHERE A.DEL_YN = 'N'
                    AND A.WORK_STATUS IN ('DBS010','DBS020')
                    AND A.WORK_FINISH_DT IS NULL
            ) AS WORK_TOTAL
        FROM jmes.TBL_EQUIP X
            LEFT OUTER JOIN (
                SELECT A.EQUIP_SEQ, A.WORK_STATUS
                    , A.PLAN_WORKING_TIME
                    , CASE WHEN C.PART_NUM IS NULL THEN B.CONTROL_NUM ELSE CONCAT(B.CONTROL_NUM, '#', C.PART_NUM) END AS CONTROL_PART_INFO
                    , C.IMG_GFILE_SEQ
                    , C.WORK_TYPE
                    , C.MATERIAL_DETAIL
                    , C.MATERIAL_TYPE
                    , jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS PART_QTY
                    , A.WORK_USER_ID
                    , CASE WHEN D.ACTIVE_TYPE = 'PGM_ACTIVE' THEN IFNULL(A.WORK_ACTIVE_TIME,0) + TIMESTAMPDIFF(SECOND, D.EVENT_TIME, NOW())
                           ELSE A.WORK_ACTIVE_TIME
                      END AS WORK_ACTIVE_TIME
                    , A.WORK_STOP_TIME
                    , A.COMPLETE_CYCLE_COUNT
                    , A.UNIT_QTY
                    , A.GOAL_QTY
                    , A.ADJUST_QTY
                    , (IFNULL(A.UNIT_QTY,1) * IFNULL(A.COMPLETE_CYCLE_COUNT,0) + IFNULL(A.ADJUST_QTY,0)) AS COMPLETE_QTY
                    , CASE WHEN D.EVENT_TIME IS NULL THEN TIMESTAMPDIFF(SECOND, A.WORK_START_DT, NOW())
                           ELSE TIMESTAMPDIFF(SECOND, D.EVENT_TIME, NOW())
                      END AS CURRENT_STATUS_TIME
                    , TIMESTAMPDIFF(SECOND, A.UPDATE_DT, NOW()) AS UPDATE_DIF
                    , ((A.LATEST_CYCLE_TIME * CEIL(A.GOAL_QTY / A.UNIT_QTY)) - A.WORK_ACTIVE_TIME) AS LEFT_TIME
                    , D.ACTIVE_TYPE
                FROM jmes.TBL_MCT_WORK A
                    INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.DEL_YN = 'N'
                    INNER JOIN jmes.TBL_CONTROL_PART C ON C.CONTROL_SEQ = A.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
                    LEFT OUTER JOIN jmes.TBL_MCT_WORKING_LOG D ON D.MCT_WORK_SEQ = A.MCT_WORK_SEQ AND D.MCT_LOG_SEQ = (
                        SELECT MAX(Q.MCT_LOG_SEQ)
                        FROM TBL_MCT_WORKING_LOG Q
                        WHERE Q.MCT_WORK_SEQ = D.MCT_WORK_SEQ
                        AND Q.ACTIVE_TYPE != 'DISCONNECT'
                    )
                WHERE A.DEL_YN = 'N'
                    AND A.WORK_STATUS IN ('DBS010', 'DBS020')
                    AND A.WORK_FINISH_DT IS NULL
                    AND A.WORK_START_DT IS NOT NULL
                GROUP BY A.EQUIP_SEQ
            ) Y ON X.EQUIP_SEQ = Y.EQUIP_SEQ
        WHERE X.EQUIP_KIND = '1'
            AND X.DEL_YN = 'N'
            AND X.LAYOUT_SORT IS NOT NULL
            <if test="EQUIP_SEQ != null and EQUIP_SEQ != ''">
                AND X.EQUIP_SEQ = #{EQUIP_SEQ}
            </if>
            <if test="dataList != null and dataList != ''">
                AND X.EQUIP_SEQ IN
                <foreach collection="dataList" item="item"  index="index"  open="(" close=")" separator=",">
                    #{item.EQUIP_SEQ}
                </foreach>
            </if>
        ORDER BY X.FACTORY_AREA, X.LAYOUT_SORT;
    </select>

    <select id="selectTvAlarmList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            SEQ, DATA1, DATA2, DATA3
        FROM jmes.kjw_test
        WHERE SEQ > cast(#{SEQ} as unsigned)
    </select>

    <select id="selectMctAreInfoList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            X.EQUIP_SEQ, EQUIP_ID, EQUIP_NM,
            CASE WHEN X.PROCESS_TYPE = 'MPR010' THEN 'NCT'
                 WHEN X.PROCESS_TYPE = 'MPR020' THEN 'MILLING'
                 WHEN X.PROCESS_TYPE = 'MPR030' THEN 'GRINDING'
                 WHEN X.PROCESS_TYPE = 'MPR040' THEN 'TURNNING'
                 ELSE 'DEFAULT'
            END MACHINE_ICON,
            CASE WHEN X.LOGIN_USER_ID IS NOT NULL THEN (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = X.LOGIN_USER_ID)
                 WHEN Y.WORK_STATUS = 'DBS020'    THEN (SELECT M.USER_NM FROM jmes.TBL_USER M WHERE M.USER_ID = X.UPDATE_ID)
            END AS USER_NM,
            CASE WHEN X.LOGIN_USER_ID IS NOT NULL THEN (SELECT M.PHOTO_GFILE_SEQ FROM jmes.TBL_USER M WHERE M.USER_ID = X.LOGIN_USER_ID)
                 WHEN Y.WORK_STATUS = 'DBS020'    THEN (SELECT M.PHOTO_GFILE_SEQ FROM jmes.TBL_USER M WHERE M.USER_ID = X.UPDATE_ID)
            END AS PHOTO_GFILE_SEQ,
            EQUIP_OFF_YN, DISCONNECT_YN,
            CASE WHEN X.EQUIP_OFF_DT IS NOT NULL THEN TIMESTAMPDIFF(SECOND, X.EQUIP_OFF_DT, NOW()) ELSE SPACE(0) END AS EQUIP_OFF_TIME,
            FACTORY_AREA, LAYOUT_ROW, LAYOUT_COL,
            IFNULL(Y.TOTAL_CNT,0) AS TOTAL_CNT,
            IFNULL(Y.TOTAL_PART_QTY,0) AS TOTAL_PART_QTY,
            Y.TOTAL_PLAN_WORKING_TIME,
            CASE WHEN Y.TOTAL_PLAN_WORKING_TIME IS NOT NULL THEN CONCAT(TRUNCATE(IFNULL(Y.TOTAL_PLAN_WORKING_TIME,0)/60,0),'h ',TRUNCATE((IFNULL(Y.TOTAL_PLAN_WORKING_TIME,0)%60),0),'m')
                 ELSE '0h 0m'
            END TOTAL_PLAN_WORKING_TIME_FORMAT,
            CASE WHEN Y.WORK_PLAN_TYPE = 1 THEN Y.CONTROL_PART_INFO
                 ELSE ''
            END AS CONTROL_PART_INFO,
            Y.WORK_PLAN_TYPE,
            Y.WORK_TEMP_STOP_DT,
            IFNULL(Y.WORK_ACTIVE_TIME,0) AS WORK_ACTIVE_TIME,
            Y.WORK_STOP_TIME,
            Y.ACTIVE_TYPE,
            Y.EVENT_TIME,
            IFNULL(Y.CURRENT_STATUS_TIME,0) AS CURRENT_STATUS_TIME,
            CASE WHEN X.IF_USE_YN = 'Y' AND Y.CURRENT_STATUS_TIME IS NOT NULL
                    THEN CONCAT(
                        TRUNCATE(IFNULL(Y.CURRENT_STATUS_TIME,0)/3600,0) , 'h ',
                        TRUNCATE((IFNULL(Y.CURRENT_STATUS_TIME,0)%3600)/60,0), 'm'
                    )
                 ELSE '-'
            END AS CURR_CYCLE_TIME,
            CASE WHEN Y.WORK_STATUS IS NULL THEN '-'
                 ELSE CONCAT(
                    TRUNCATE(((IFNULL(Y.CURRENT_STATUS_TIME,0) + IFNULL(Y.WORK_ACTIVE_TIME,0))/3600),0), 'h ',
                    TRUNCATE((((IFNULL(Y.CURRENT_STATUS_TIME,0) + IFNULL(Y.WORK_ACTIVE_TIME,0))%3600)/60),0),'m'
                 )
            END AS ACTIVE_TOTAL,
            CASE WHEN Y.WORK_PLAN_TYPE = 1 AND Y.PLAN_WORKING_TIME IS NOT NULL THEN CONCAT(TRUNCATE(IFNULL(Y.PLAN_WORKING_TIME,0)/60,0),'h ',TRUNCATE((IFNULL(Y.PLAN_WORKING_TIME,0)%60),0),'m')
                 ELSE '-'
            END PLAN_WORKING_TIME_FORMAT,
            Y.MATERIAL_DETAIL_NM,
            Y.MATERIAL_TYPE_NM,
            Y.WORK_TYPE_NM,
            Y.PART_QTY,
            Y.IMG_GFILE_SEQ,
            CASE WHEN Y.WORK_PLAN_TYPE = '1' THEN CONCAT(IFNULL(Y.MATERIAL_TYPE_NM,SPACE(0)),SPACE(1),IFNULL(Y.WORK_TYPE_NM,SPACE(0)),SPACE(1),IFNULL(Y.PART_QTY,SPACE(0)),CASE WHEN Y.PART_QTY IS NULL THEN SPACE(0) ELSE 'EA' END)
                 ELSE ''
            END AS CUR_TEXT,
            CASE WHEN Y.WORK_STATUS IS NULL THEN (
                    SELECT TIMESTAMPDIFF(SECOND, MAX(Q.WORK_FINISH_DT), NOW())
                    FROM TBL_MCT_WORK Q
                    WHERE Q.DEL_YN = 'N'
                        AND Q.WORK_START_DT IS NOT NULL
                        AND Q.WORK_FINISH_DT IS NOT NULL
                        AND Q.EQUIP_SEQ = X.EQUIP_SEQ
                )
                ELSE 0
            END AS LAST_WORK_TIME,
            CASE WHEN Y.WORK_STATUS = 'DBS010' THEN 'pause'
                 WHEN Y.WORK_STATUS = 'DBS020' THEN 'login'
                 ELSE 'log_off'
            END WORK_STATUS,
            IFNULL(X.IF_USE_YN, 'N') AS IF_USE_YN,
            CASE WHEN X.IF_USE_YN = 'Y' AND Y.LATEST_CYCLE_TIME IS NOT NULL
                    THEN CONCAT(
                        TRUNCATE(IFNULL(Y.LATEST_CYCLE_TIME,0)/3600,0) , 'h ',
                        TRUNCATE((IFNULL(Y.LATEST_CYCLE_TIME,0)%3600)/60,0), 'm'
                    )
                 ELSE '-'
            END AS LATEST_CYCLE_TIME,
            CASE WHEN X.IF_USE_YN = 'Y' AND Y.EXPECT_TIME IS NOT NULL
                    THEN CONCAT(
                        TRUNCATE(IFNULL(Y.EXPECT_TIME,0)/3600,0) , 'h ',
                        TRUNCATE((IFNULL(Y.EXPECT_TIME,0)%3600)/60,0), 'm'
                    )
                 ELSE '-'
            END AS EXPECT_TIME,
            IFNULL(Y.GOAL_QTY,'-') AS GOAL_QTY,
            IFNULL(Y.COMPLETE_QTY,'-') AS COMPLETE_QTY,
            CASE WHEN Y.LEFT_TIME IS NOT NULL AND Y.LEFT_TIME > 0
                    THEN CONCAT(
                        TRUNCATE(IFNULL(Y.LEFT_TIME,0)/3600,0) , 'h ',
                        TRUNCATE((IFNULL(Y.LEFT_TIME,0)%3600)/60,0), 'm'
                    )
                 ELSE '0h 0m'
            END AS LEFT_TIME,
            IFNULL(Y.ERROR_QTY,'-') AS ERROR_QTY,
            CASE WHEN Y.LEFT_QTY <![CDATA[ < ]]> 0 THEN 0
                 ELSE IFNULL(Y.LEFT_QTY,0)
            END AS LEFT_QTY
        FROM jmes.TBL_EQUIP X
            LEFT OUTER JOIN (
                SELECT COUNT(*) AS TOTAL_CNT
                    , SUM(T.PART_QTY) AS TOTAL_PART_QTY
                    , SUM(T.PLAN_WORKING_TIME) AS TOTAL_PLAN_WORKING_TIME
                    , T.CONTROL_SEQ
                    , T.CONTROL_DETAIL_SEQ
                    , T.WORK_PLAN_TYPE
                    , T.KEY_SEQ
                    , T.EQUIP_SEQ
                    , T.INNER_DUE_DT
                    , T.WORK_USER_ID
                    , T.WORK_TYPE_NM
                    , T.CONTROL_PART_INFO
                    , T.SIZE_TXT
                    , T.MATERIAL_DETAIL_NM
                    , T.MATERIAL_TYPE_NM
                    , T.PART_QTY
                    , T.PLAN_WORKING_TIME
                    , T.IMG_GFILE_SEQ
                    , T.WORK_STATUS
                    , T.WORK_TEMP_STOP_DT
                    , T.WORK_ACTIVE_TIME
                    , T.WORK_STOP_TIME
                    , T.ACTIVE_TYPE
                    , T.EVENT_TIME
                    , T.CURRENT_STATUS_TIME
                    , T.LATEST_CYCLE_TIME
                    , T.GOAL_QTY
                    , T.COMPLETE_QTY
                    , T.LEFT_TIME
                    , T.EXPECT_TIME
                    , T.ERROR_QTY
                    , (T.GOAL_QTY - T.COMPLETE_QTY) AS LEFT_QTY
                FROM (    -- 드로잉보드 진행
                    SELECT '1' AS WORK_PLAN_TYPE
                        , C.CONTROL_SEQ
                        , C.CONTROL_DETAIL_SEQ
                        , A.MCT_WORK_SEQ AS KEY_SEQ
                        , A.EQUIP_SEQ
                        , C.INNER_DUE_DT
                        , A.WORK_USER_ID
                        , jmes.SF_GET_CODE_NM('1033', C.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM
                        , CASE WHEN C.PART_NUM IS NULL THEN B.CONTROL_NUM ELSE CONCAT(B.CONTROL_NUM, '#', C.PART_NUM) END AS CONTROL_PART_INFO
                        , C.SIZE_TXT
                        , jmes.SF_GET_CODE_NM('1027', C.MATERIAL_DETAIL, #{LOGIN_LOCALE}) AS MATERIAL_DETAIL_NM
                        , jmes.SF_GET_CODE_NM('1035', C.MATERIAL_TYPE, #{LOGIN_LOCALE}) AS MATERIAL_TYPE_NM
                        , jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS PART_QTY
                        , IFNULL(A.PLAN_WORKING_TIME,0) AS PLAN_WORKING_TIME
                        , C.IMG_GFILE_SEQ
                        , A.WORK_STATUS
                        , A.WORK_TEMP_STOP_DT
                        , A.WORK_ACTIVE_TIME
                        , A.WORK_STOP_TIME
                        , D.ACTIVE_TYPE
                        , CASE WHEN D.EVENT_TIME IS NULL THEN A.WORK_START_DT
                               ELSE D.EVENT_TIME
                          END AS EVENT_TIME
                        , CASE WHEN D.EVENT_TIME IS NULL THEN TIMESTAMPDIFF(SECOND, A.WORK_START_DT, NOW())
                               ELSE TIMESTAMPDIFF(SECOND, D.EVENT_TIME, NOW())
                          END AS CURRENT_STATUS_TIME
                        , A.LATEST_CYCLE_TIME
                        , A.GOAL_QTY
                        , ((A.LATEST_CYCLE_TIME * CEIL(A.GOAL_QTY / A.UNIT_QTY))) AS EXPECT_TIME
                        , ((A.LATEST_CYCLE_TIME * CEIL(A.GOAL_QTY / A.UNIT_QTY)) - A.WORK_ACTIVE_TIME) AS LEFT_TIME
                        , (IFNULL(A.UNIT_QTY,1)  * IFNULL(A.COMPLETE_CYCLE_COUNT,0) + IFNULL(A.ADJUST_QTY,0))  AS COMPLETE_QTY
                        , A.ERROR_QTY
                    FROM jmes.TBL_MCT_WORK A
                        INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.DEL_YN = 'N'
                        INNER JOIN jmes.TBL_CONTROL_PART C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                        LEFT OUTER JOIN TBL_MCT_WORKING_LOG D ON D.MCT_WORK_SEQ = A.MCT_WORK_SEQ AND D.MCT_LOG_SEQ = (
                            SELECT MAX(X.MCT_LOG_SEQ)
                            FROM TBL_MCT_WORKING_LOG X
                            WHERE X.MCT_WORK_SEQ = D.MCT_WORK_SEQ
                                AND X.ACTIVE_TYPE != 'DISCONNECT'
                        )
                    WHERE A.DEL_YN = 'N'
                        AND A.WORK_STATUS IN ('DBS010', 'DBS020')
                        AND A.WORK_FINISH_DT IS NULL
                        AND EXISTS (
                            SELECT 1
                            FROM jmes.TBL_EQUIP D
                            WHERE A.EQUIP_SEQ = D.EQUIP_SEQ AND D.EQUIP_KIND = '1' AND D.DEL_YN = 'N'
                            AND D.FACTORY_AREA IN ('ARE01', 'ARE02', 'ARE11', 'ARE05', 'ARE06')
                        )
                    UNION ALL
                    -- PLAN
                    SELECT '2' AS WORK_PLAN_TYPE
                        , C.CONTROL_SEQ
                        , C.CONTROL_DETAIL_SEQ
                        , A.MCT_PLAN_SEQ AS KEY_SEQ
                        , A.EQUIP_SEQ
                        , C.INNER_DUE_DT
                        , '' AS WORK_USER_ID
                        , jmes.SF_GET_CODE_NM('1033', C.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM
                        , CASE WHEN C.PART_NUM IS NULL THEN B.CONTROL_NUM ELSE CONCAT(B.CONTROL_NUM, '#', C.PART_NUM) END AS CONTROL_PART_INFO
                        , '' AS SIZE_TXT
                        , '' AS MATERIAL_DETAIL_NM
                        , '' AS MATERIAL_TYPE_NM
                        , jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS PART_QTY
                        , SUM(IFNULL(A.WORKING_TIME,0)) AS PLAN_WORKING_TIME
                        , C.IMG_GFILE_SEQ
                        , '' AS WORK_STATUS
                        , '' AS WORK_TEMP_STOP_DT
                        , '' AS WORK_ACTIVE_TIME
                        , '' AS WORK_STOP_TIME
                        , '' AS ACTIVE_TYPE
                        , '' AS EVENT_TIME
                        , '' AS CURRENT_STATUS_TIME
                        , '' AS LATEST_CYCLE_TIME
                        , '' AS GOAL_QTY
                        , '' AS EXPECT_TIME
                        , '' AS LEFT_TIME
                        , '' AS COMPLETE_QTY
                        , '' AS ERROR_QTY
                    FROM jmes.TBL_MCT_PLAN A, jmes.TBL_CONTROL B, jmes.TBL_CONTROL_PART C
                    WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
                        AND A.CONTROL_SEQ = C.CONTROL_SEQ
                        AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                        AND A.DEL_YN = 'N'
                        AND B.DEL_YN = 'N'
                        AND EXISTS (
                            SELECT 1
                            FROM jmes.TBL_EQUIP D
                            WHERE A.EQUIP_SEQ = D.EQUIP_SEQ
                                AND D.EQUIP_KIND = '1' AND D.DEL_YN = 'N'
                                AND D.FACTORY_AREA IN ('ARE01', 'ARE02', 'ARE11', 'ARE05', 'ARE06')
                        )
                    GROUP BY A.EQUIP_SEQ
                ) T
                GROUP BY T.EQUIP_SEQ
            ) Y ON Y.EQUIP_SEQ = X.EQUIP_SEQ
        WHERE EQUIP_KIND = '1'
            AND DEL_YN = 'N'
            <if test="EQUIP_SEQ != null and EQUIP_SEQ != ''">
                AND X.EQUIP_SEQ = #{EQUIP_SEQ}
            </if>
            <if test="dataList != null and dataList != ''">
                AND X.EQUIP_SEQ IN
                <foreach collection="dataList" item="item"  index="index"  open="(" close=")" separator=",">
                    #{item.EQUIP_SEQ}
                </foreach>
            </if>
            AND LAYOUT_SORT IS NOT NULL
        ORDER BY FACTORY_AREA, LAYOUT_SORT_MCT
    </select>

    <select id="selectMctAreList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT A.EQUIP_SEQ, A.SORT_NUM, ROW_NUMBER() OVER(PARTITION BY A.EQUIP_SEQ ORDER BY A.SORT_NUM) AS ROWNUM,
               IFNULL(jmes.SF_GET_CODE_NM('1035', C.MATERIAL_TYPE, #{LOGIN_LOCALE}),SPACE(1)) AS MATERIAL_TYPE_NM,
               CASE WHEN C.PART_NUM IS NULL THEN B.CONTROL_NUM
                    ELSE CONCAT(B.CONTROL_NUM, '#', C.PART_NUM)
               END AS CONTROL_PART_INFO,
               jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS PART_QTY,
               jmes.SF_GET_CODE_NM('1033', C.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM
        FROM jmes.TBL_MCT_PLAN A, jmes.TBL_CONTROL B, jmes.TBL_CONTROL_PART C
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
          AND A.CONTROL_SEQ = C.CONTROL_SEQ
          AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
          AND A.DEL_YN = 'N'
          AND B.DEL_YN = 'N'
          AND B.OUT_FINISH_DT IS NULL
          AND EXISTS (SELECT 1 FROM jmes.TBL_EQUIP D WHERE A.EQUIP_SEQ = D.EQUIP_SEQ AND D.EQUIP_KIND = '1' AND D.DEL_YN = 'N'
                                                       AND D.FACTORY_AREA IN ('ARE01', 'ARE02', 'ARE11', 'ARE05', 'ARE06')
            )
        ORDER BY A.EQUIP_SEQ, A.SORT_NUM
    </select>

    <select id="selectMctGridList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT Z.*
        FROM (
            SELECT
                4 AS RANK, '지연' AS TITLE, COUNT(*) OVER (PARTITION BY 1) AS TOTAL_COUNT
                , B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ
                , DATE_FORMAT(STR_TO_DATE(B.INNER_DUE_DT,'%Y%m%d'),'%m/%d') AS INNER_DUE_DT
                , jmes.SF_GET_CONTROL_PART_INFO(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_INFO
                , jmes.SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY
                , CONCAT(jmes.SF_GET_CONTROL_PART_INFO(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ), <![CDATA[ '<br>' ]]>,IFNULL(jmes.SF_GET_CODE_NM('1035', B.MATERIAL_TYPE, #{LOGIN_LOCALE}),SPACE(1)),SPACE(1),jmes.SF_GET_CODE_NM('1033', B.WORK_TYPE, #{LOGIN_LOCALE}),SPACE(1),jmes.SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ),' EA') AS CONTROL_TEXT
                , B.PART_STATUS
                , jmes.SF_GET_PART_STATUS_NM(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, #{LOGIN_LOCALE}) AS PART_STATUS_NM
                , B.IMG_GFILE_SEQ
                , C.POP_POSITION
                , D.FACTORY_AREA
                , CASE WHEN D.EQUIP_NM IS NOT NULL THEN D.EQUIP_NM
                       ELSE SF_GET_CODE_NM('1009', C.POP_POSITION, #{LOGIN_LOCALE})
                END AS CURR_POS
            FROM jmes.TBL_CONTROL A
                INNER JOIN jmes.TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.WORK_TYPE NOT IN ('WTP020','WTP040') AND B.INNER_WORK_FINISH_DT IS NULL
                    AND B.PART_STATUS IS NOT NULL AND B.PART_STATUS NOT IN ('PRO009') AND IFNULL(B.OUTSIDE_YN,'N') = 'N'
                    AND B.INNER_DUE_DT <![CDATA[ <= ]]> DATE_FORMAT(NOW(),'%Y%m%d')
                LEFT OUTER JOIN TBL_POP C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                    AND C.POP_SEQ = (SELECT MAX(X.POP_SEQ) FROM TBL_POP X WHERE X.CONTROL_SEQ = C.CONTROL_SEQ AND X.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ)
                LEFT OUTER JOIN (
                    SELECT X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ, X.MCT_WORK_SEQ,
                           X.WORK_USER_ID, Y.EQUIP_NM, Y.PROCESS_TYPE, Y.FACTORY_AREA
                    FROM TBL_MCT_WORK X
                             INNER JOIN TBL_EQUIP Y ON X.EQUIP_SEQ = Y.EQUIP_SEQ
                    WHERE X.DEL_YN = 'N'
                        AND X.MCT_WORK_SEQ = (
                            SELECT MAX(M.MCT_WORK_SEQ) FROM TBL_MCT_WORK M
                            WHERE M.DEL_YN = 'N'
                                AND M.CONTROL_SEQ = X.CONTROL_SEQ
                                AND M.CONTROL_DETAIL_SEQ = X.CONTROL_DETAIL_SEQ
                            GROUP BY M.CONTROL_SEQ, M.CONTROL_DETAIL_SEQ
                        )
                        AND X.WORK_FINISH_DT IS NULL
            ) D ON D.CONTROL_SEQ = B.CONTROL_SEQ AND D.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
            WHERE A.DEL_YN = 'N'
                AND A.CONTROL_STATUS NOT IN  ('ORD002', 'ORD004', 'ORD005')
                AND A.OUT_FINISH_DT IS NULL
                AND IFNULL(A.OUT_FINISH_STATUS,SPACE(0)) != 'RLS020'
            UNION ALL
            SELECT
                3 AS RANK, '긴급' AS TITLE, COUNT(*) OVER (PARTITION BY 1) AS TOTAL_COUNT
                , B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ
                , DATE_FORMAT(STR_TO_DATE(B.INNER_DUE_DT,'%Y%m%d'),'%m/%d') AS INNER_DUE_DT
                , jmes.SF_GET_CONTROL_PART_INFO(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_INFO
                , jmes.SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY
                , CONCAT(jmes.SF_GET_CONTROL_PART_INFO(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ), <![CDATA[ '<br>' ]]>,IFNULL(jmes.SF_GET_CODE_NM('1035', B.MATERIAL_TYPE, #{LOGIN_LOCALE}),SPACE(1)),SPACE(1),jmes.SF_GET_CODE_NM('1033', B.WORK_TYPE, #{LOGIN_LOCALE}),SPACE(1),jmes.SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ),' EA') AS CONTROL_TEXT
                , B.PART_STATUS
                , jmes.SF_GET_PART_STATUS_NM(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, #{LOGIN_LOCALE}) AS PART_STATUS_NM
                , B.IMG_GFILE_SEQ
                , C.POP_POSITION
                , D.FACTORY_AREA
                , CASE WHEN D.EQUIP_NM IS NOT NULL THEN D.EQUIP_NM
                       ELSE SF_GET_CODE_NM('1009', C.POP_POSITION, #{LOGIN_LOCALE})
                END AS CURR_POS
            FROM jmes.TBL_CONTROL A
                INNER JOIN jmes.TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.WORK_TYPE NOT IN ('WTP020','WTP040') AND B.INNER_WORK_FINISH_DT IS NULL
                    AND B.PART_STATUS IS NOT NULL AND B.PART_STATUS NOT IN ('PRO009') AND IFNULL(B.OUTSIDE_YN, 'N') = 'N'
                LEFT OUTER JOIN TBL_POP C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                    AND C.POP_SEQ = (SELECT MAX(X.POP_SEQ) FROM TBL_POP X WHERE X.CONTROL_SEQ = C.CONTROL_SEQ AND X.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ)
                LEFT OUTER JOIN (
                    SELECT X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ, X.MCT_WORK_SEQ,
                        X.WORK_USER_ID, Y.EQUIP_NM, Y.PROCESS_TYPE, Y.FACTORY_AREA
                    FROM TBL_MCT_WORK X
                        INNER JOIN TBL_EQUIP Y ON X.EQUIP_SEQ = Y.EQUIP_SEQ
                    WHERE X.DEL_YN = 'N'
                        AND X.MCT_WORK_SEQ = (
                            SELECT MAX(M.MCT_WORK_SEQ) FROM TBL_MCT_WORK M
                            WHERE M.DEL_YN = 'N'
                                AND M.CONTROL_SEQ = X.CONTROL_SEQ
                                AND M.CONTROL_DETAIL_SEQ = X.CONTROL_DETAIL_SEQ
                            GROUP BY M.CONTROL_SEQ, M.CONTROL_DETAIL_SEQ
                        )
                        AND X.WORK_FINISH_DT IS NULL
                ) D ON D.CONTROL_SEQ = B.CONTROL_SEQ AND D.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
            WHERE A.DEL_YN = 'N'
                AND A.CONTROL_STATUS NOT IN  ('ORD002', 'ORD004', 'ORD005')
                AND A.EMERGENCY_YN = 'Y'
                AND A.OUT_FINISH_DT IS NULL
                AND IFNULL(A.OUT_FINISH_STATUS,SPACE(0)) != 'RLS020'
            UNION ALL
            SELECT
                1 AS RANK, '불량' AS TITLE, COUNT(*) OVER (PARTITION BY 1) AS TOTAL_COUNT
                , A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ
                , DATE_FORMAT(STR_TO_DATE(C.INNER_DUE_DT,'%Y%m%d'),'%m/%d') AS INNER_DUE_DT
                , jmes.SF_GET_CONTROL_PART_INFO(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS CONTROL_PART_INFO
                , jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY
                , CONCAT(jmes.SF_GET_CONTROL_PART_INFO(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ), <![CDATA[ '<br>' ]]>,IFNULL(jmes.SF_GET_CODE_NM('1035', C.MATERIAL_TYPE, #{LOGIN_LOCALE}),SPACE(1)),SPACE(1),jmes.SF_GET_CODE_NM('1033', C.WORK_TYPE, #{LOGIN_LOCALE}),SPACE(1),jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ),' EA') AS CONTROL_TEXT
                , C.PART_STATUS
                , jmes.SF_GET_PART_STATUS_NM(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ, #{LOGIN_LOCALE}) AS PART_STATUS_NM
                , C.IMG_GFILE_SEQ
                , E.POP_POSITION
                , F.FACTORY_AREA
                , CASE WHEN F.EQUIP_NM IS NOT NULL THEN F.EQUIP_NM
                       ELSE SF_GET_CODE_NM('1009', E.POP_POSITION, #{LOGIN_LOCALE})
                END AS CURR_POS
            FROM jmes.TBL_INSPECT A
                INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.DEL_YN = 'N' AND B.CONTROL_STATUS NOT IN  ('ORD002', 'ORD004', 'ORD005') AND IFNULL(B.OUT_FINISH_STATUS,SPACE(0)) != 'RLS020'
                INNER JOIN jmes.TBL_CONTROL_PART C ON B.CONTROL_SEQ = C.CONTROL_SEQ
                INNER JOIN jmes.TBL_CONTROL_PART_ORDER D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ AND A.ORDER_SEQ = D.ORDER_SEQ
                LEFT OUTER JOIN TBL_POP E ON A.CONTROL_SEQ = E.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ
                    AND E.POP_SEQ = (SELECT MAX(X.POP_SEQ) FROM TBL_POP X WHERE X.CONTROL_SEQ = E.CONTROL_SEQ AND X.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ)
                LEFT OUTER JOIN (
                    SELECT X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ, X.MCT_WORK_SEQ,
                        X.WORK_USER_ID, Y.EQUIP_NM, Y.PROCESS_TYPE, Y.FACTORY_AREA
                    FROM TBL_MCT_WORK X
                        INNER JOIN TBL_EQUIP Y ON X.EQUIP_SEQ = Y.EQUIP_SEQ
                    WHERE X.DEL_YN = 'N'
                        AND X.MCT_WORK_SEQ = (
                            SELECT MAX(M.MCT_WORK_SEQ) FROM TBL_MCT_WORK M
                            WHERE M.DEL_YN = 'N'
                                AND M.CONTROL_SEQ = X.CONTROL_SEQ
                                AND M.CONTROL_DETAIL_SEQ = X.CONTROL_DETAIL_SEQ
                            GROUP BY M.CONTROL_SEQ, M.CONTROL_DETAIL_SEQ
                        )
                        AND X.WORK_FINISH_DT IS NULL
                ) F ON F.CONTROL_SEQ = C.CONTROL_SEQ AND F.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            WHERE A.INSPECT_TYPE = '1' AND A.INSPECT_GRADE = 'GRD040'
                AND A.INSPECT_SEQ = (
                    SELECT MAX(B.INSPECT_SEQ)
                    FROM jmes.TBL_INSPECT B
                    WHERE B.INSPECT_TYPE = '1' AND A.CONTROL_SEQ = B.CONTROL_SEQ
                        AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                    GROUP BY B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ
                )
            UNION ALL
            SELECT
                2 AS RANK, '반품' AS TITLE, COUNT(*) OVER (PARTITION BY 1) AS TOTAL_COUNT
                , A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ
                , DATE_FORMAT(STR_TO_DATE(C.INNER_DUE_DT,'%Y%m%d'),'%m/%d') AS INNER_DUE_DT
                , jmes.SF_GET_CONTROL_PART_INFO(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS CONTROL_PART_INFO
                , jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY
                , CONCAT(jmes.SF_GET_CONTROL_PART_INFO(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ), <![CDATA[ '<br>' ]]>,IFNULL(jmes.SF_GET_CODE_NM('1035', C.MATERIAL_TYPE, #{LOGIN_LOCALE}),SPACE(1)),SPACE(1),jmes.SF_GET_CODE_NM('1033', C.WORK_TYPE, #{LOGIN_LOCALE}),SPACE(1),jmes.SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ),' EA') AS CONTROL_TEXT
                , C.PART_STATUS
                , jmes.SF_GET_PART_STATUS_NM(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ, #{LOGIN_LOCALE}) AS PART_STATUS_NM
                , C.IMG_GFILE_SEQ
                , E.POP_POSITION
                , F.FACTORY_AREA
                , CASE WHEN F.EQUIP_NM IS NOT NULL THEN F.EQUIP_NM
                       ELSE SF_GET_CODE_NM('1009', E.POP_POSITION, #{LOGIN_LOCALE})
                 END AS CURR_POS
            FROM jmes.TBL_INSPECT A
                INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.DEL_YN = 'N' AND B.CONTROL_STATUS NOT IN  ('ORD002', 'ORD004', 'ORD005') AND IFNULL(B.OUT_FINISH_STATUS,SPACE(0)) != 'RLS020'
                INNER JOIN jmes.TBL_CONTROL_PART C ON B.CONTROL_SEQ= C.CONTROL_SEQ AND C.WORK_TYPE NOT IN ('WTP020','WTP040')
                INNER JOIN jmes.TBL_CONTROL_PART_ORDER D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ AND A.ORDER_SEQ = D.ORDER_SEQ
                LEFT OUTER JOIN TBL_POP E ON A.CONTROL_SEQ = E.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ
                    AND E.POP_SEQ = (SELECT MAX(X.POP_SEQ) FROM TBL_POP X WHERE X.CONTROL_SEQ = E.CONTROL_SEQ AND X.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ)
                LEFT OUTER JOIN (
                    SELECT X.CONTROL_SEQ, X.CONTROL_DETAIL_SEQ, X.MCT_WORK_SEQ,
                        X.WORK_USER_ID, Y.EQUIP_NM, Y.PROCESS_TYPE, Y.FACTORY_AREA
                    FROM TBL_MCT_WORK X
                        INNER JOIN TBL_EQUIP Y ON X.EQUIP_SEQ = Y.EQUIP_SEQ
                    WHERE X.DEL_YN = 'N'
                        AND X.MCT_WORK_SEQ = (
                            SELECT MAX(M.MCT_WORK_SEQ) FROM TBL_MCT_WORK M
                            WHERE M.DEL_YN = 'N'
                                AND M.CONTROL_SEQ = X.CONTROL_SEQ
                                AND M.CONTROL_DETAIL_SEQ = X.CONTROL_DETAIL_SEQ
                            GROUP BY M.CONTROL_SEQ, M.CONTROL_DETAIL_SEQ
                        )
                        AND X.WORK_FINISH_DT IS NULL
                ) F ON F.CONTROL_SEQ = C.CONTROL_SEQ AND F.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
            WHERE A.INSPECT_TYPE = '2' AND A.RETURN_SETTLEMENT_DT IS NULL
        ) Z
        WHERE 1=1
            <if test="FACTORY_AREA != null and FACTORY_AREA !=''">
                AND IFNULL(SF_GET_ETC_CD('1103', Z.POP_POSITION),SPACE(0)) = #{FACTORY_AREA}
                AND IFNULL(SF_GET_ETC_CD('1005', Z.FACTORY_AREA),#{FACTORY_AREA}) = #{FACTORY_AREA}
            </if>
        ORDER BY RANK, CASE WHEN Z.PART_STATUS = 'PRO002' THEN 1
                            WHEN Z.PART_STATUS = 'PRO005' THEN 2
                            ELSE 3 END,
                 Z.INNER_DUE_DT
    </select>

    <select id="selectMctGrid1List" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        -- 하단 그리드 1 (불량/반품 발생 현황)
        SELECT
            COUNT(*) OVER (PARTITION BY 1) AS TOTAL_COUNT
            , jmes.SF_GET_DATE_F(Z.INSERT_DT,'YY','') AS INSPECT_DT
             , ( SELECT N.COMP_NM
                 FROM jmes.TBL_CONTROL M, jmes.TBL_COMPANY N
                 WHERE M.ORDER_COMP_CD = N.COMP_CD
                   AND M.CONTROL_SEQ = Z.CONTROL_SEQ) AS ORDER_COMP_NM
             , jmes.SF_GET_CONTROL_PART_INFO(Z.CONTROL_SEQ, Z.CONTROL_DETAIL_SEQ) AS CONTROL_PART_INFO
             , CASE WHEN Z.INSPECT_TYPE = '1' THEN '불량'
                    WHEN Z.INSPECT_TYPE = '2' THEN '반품'
            END AS ERROR_TYPE
             , Z.ERROR_QTY, CONCAT(Z.ERROR_QTY,'ea') AS ERROR_QTY_INFO
             , (SELECT jmes.SF_GET_DATE_F(M.INNER_DUE_DT,'YY','') FROM jmes.TBL_CONTROL_PART M WHERE M.CONTROL_SEQ = Z.CONTROL_SEQ AND M.CONTROL_DETAIL_SEQ = Z.CONTROL_DETAIL_SEQ) AS INNER_DUE_DT
             , CASE WHEN Z.INSPECT_TYPE = '1' THEN jmes.SF_GET_CODE_NM('1020', Z.INSPECT_RESULT, #{LOGIN_LOCALE})
                    WHEN Z.INSPECT_TYPE = '2' THEN jmes.SF_GET_CODE_NM('1021', Z.INSPECT_RESULT, #{LOGIN_LOCALE})
            END AS INSPECT_RESULT_NM
             , jmes.SF_GET_CODE_NM('1025', Z.ERROR_ACTION, #{LOGIN_LOCALE}) AS ERROR_ACTION_NM
             , Z.IMG_GFILE_SEQ
        FROM (
                 SELECT
                     A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.INSPECT_TYPE, A.ERROR_QTY, A.INSPECT_RESULT, A.ERROR_ACTION, A.INSERT_DT,
                     C.IMG_GFILE_SEQ
                 FROM jmes.TBL_INSPECT A
                          INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                     AND B.DEL_YN = 'N' AND B.CONTROL_STATUS NOT IN  ('ORD002', 'ORD004', 'ORD005')
                          INNER JOIN jmes.TBL_CONTROL_PART C ON B.CONTROL_SEQ= C.CONTROL_SEQ
                          INNER JOIN jmes.TBL_CONTROL_PART_ORDER D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
                     AND A.ORDER_SEQ = D.ORDER_SEQ AND D.OUT_FINISH_DT IS NULL
                 WHERE A.INSPECT_TYPE = '1' AND A.INSPECT_GRADE = 'GRD040'
                   AND A.INSPECT_SEQ = (SELECT MAX(B.INSPECT_SEQ) FROM jmes.TBL_INSPECT B WHERE B.INSPECT_TYPE = '1' AND A.CONTROL_SEQ = B.CONTROL_SEQ
                                                                                            AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                                        GROUP BY B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ
                 )
                 UNION ALL
                 SELECT
                     A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.INSPECT_TYPE, A.ERROR_QTY, A.INSPECT_RESULT, A.ERROR_ACTION, A.INSERT_DT,
                     C.IMG_GFILE_SEQ
                 FROM jmes.TBL_INSPECT A
                          INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ
                     AND B.DEL_YN = 'N' AND B.CONTROL_STATUS NOT IN  ('ORD002', 'ORD004', 'ORD005')
                     AND B.OUT_FINISH_DT IS NULL
                          INNER JOIN jmes.TBL_CONTROL_PART C ON B.CONTROL_SEQ= C.CONTROL_SEQ
                          INNER JOIN jmes.TBL_CONTROL_PART_ORDER D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
                     AND A.ORDER_SEQ = D.ORDER_SEQ AND D.OUT_FINISH_DT IS NULL
                 WHERE A.INSPECT_TYPE = '2' AND A.RETURN_SETTLEMENT_DT IS NULL
             )Z
        GROUP BY Z.CONTROL_SEQ, Z.CONTROL_DETAIL_SEQ, Z.INSPECT_TYPE
        ORDER BY Z.INSERT_DT DESC
            LIMIT 5
    </select>
    <select id="selectMctGrid2List" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        -- 하단 그리드 2 (긴급주문 진행현황)
        SELECT
            COUNT(*) OVER (PARTITION BY 1) AS TOTAL_COUNT
        	, B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ
             , jmes.SF_GET_DATE_F(B.INNER_DUE_DT,'YYYY','') AS INNER_DUE_DT
             , (SELECT M.COMP_NM FROM jmes.TBL_COMPANY M WHERE M.COMP_CD = A.ORDER_COMP_CD) AS ORDER_COMP_NM
             , jmes.SF_GET_CONTROL_PART_INFO(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_INFO
             , CONCAT(jmes.SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ),'ea') AS CONTROL_PART_QTY_INFO
             , jmes.SF_GET_PART_STATUS_NM(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, #{LOGIN_LOCALE}) AS PART_STATUS_NM
             , jmes.SF_GET_CODE_NM('1009', C.POP_POSITION, #{LOGIN_LOCALE}) AS POP_POSITION_NM
             , B.IMG_GFILE_SEQ
        FROM jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B
                                     LEFT OUTER JOIN jmes.TBL_POP C ON C.CONTROL_SEQ = B.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
            AND C.POP_SEQ = (SELECT MAX(D.POP_SEQ) FROM jmes.TBL_POP D WHERE C.CONTROL_SEQ = D.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
                             GROUP BY D.CONTROL_SEQ, D.CONTROL_DETAIL_SEQ)
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
          -- AND A.CONTROL_STATUS IN ('ORD001','ORD003')
          AND A.DEL_YN = 'N'
          AND A.CONTROL_STATUS NOT IN  ('ORD002', 'ORD004', 'ORD005')
          AND A.EMERGENCY_YN = 'Y'
          AND A.OUT_FINISH_DT IS NULL
          AND IFNULL(B.OUTSIDE_YN, 'N') = 'N'
          AND B.INNER_WORK_FINISH_DT IS NULL
        ORDER BY B.INNER_DUE_DT, A.ORDER_COMP_CD, A.CONTROL_NUM
            LIMIT 5
    </select>
    <select id="selectMctGrid3List" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        -- 하단 그리드 3 (가공지연목록)
        SELECT
            COUNT(*) OVER (PARTITION BY 1) AS TOTAL_COUNT
            , B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ
             , jmes.SF_GET_DATE_F(B.INNER_DUE_DT,'YYYY','') AS INNER_DUE_DT
             , (SELECT M.COMP_NM FROM jmes.TBL_COMPANY M WHERE M.COMP_CD = A.ORDER_COMP_CD) AS ORDER_COMP_NM
             , jmes.SF_GET_CONTROL_PART_INFO(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_INFO
             , CONCAT(jmes.SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ),' ea') AS CONTROL_PART_QTY_INFO
             , jmes.SF_GET_PART_STATUS_NM(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, #{LOGIN_LOCALE}) AS PART_STATUS_NM
             , (SELECT M.USER_NM FROM jmes.TBL_USER M, jmes.TBL_COMPANY N WHERE M.USER_ID = N.CHARGE_USER_ID AND N.COMP_CD = A.ORDER_COMP_CD) AS CHARGE_USER_NM
             , B.IMG_GFILE_SEQ
        FROM jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
          AND A.DEL_YN = 'N'
          AND A.CONTROL_STATUS NOT IN  ('ORD002', 'ORD004', 'ORD005')
          AND A.OUT_FINISH_DT IS NULL
          AND B.INNER_WORK_FINISH_DT IS NULL
          AND B.INNER_DUE_DT <![CDATA[ <= ]]> DATE_FORMAT(NOW(),'%Y%m%d')
        ORDER BY B.INNER_DUE_DT, A.ORDER_COMP_CD, A.CONTROL_NUM
            LIMIT 5
    </select>

    <select id="selectMctInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            CONVERT(CONVERT(IFNULL(MAX(CASE WHEN Z.TITLE = 'NOW_RATE' THEN Z.CNT END),'0%') USING BINARY) USING utf8) AS NOW_RATE,
            CONVERT(CONVERT(IFNULL(MAX(CASE WHEN Z.TITLE = 'RUN' THEN Z.CNT END),0) USING BINARY) USING utf8) AS RUN,
            CONVERT(CONVERT(IFNULL(MAX(CASE WHEN Z.TITLE = 'NOT_RUN' THEN Z.CNT END),0) USING BINARY) USING utf8) AS NOT_RUN,
            CONVERT(CONVERT(IFNULL(MAX(CASE WHEN Z.TITLE = 'STOP' THEN Z.CNT END),0) USING BINARY) USING utf8) AS STOP
        FROM (
            SELECT 'NOW_RATE' AS TITLE, CONCAT(ROUND(IFNULL(((SUM(CASE WHEN B.MCT_WORK_SEQ IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*)) * 100), 0), 0), '%') AS CNT
            FROM jmes.TBL_EQUIP A
                LEFT OUTER JOIN (
                    SELECT B.MCT_WORK_SEQ, B.EQUIP_SEQ
                    FROM jmes.TBL_MCT_WORK B
                             INNER JOIN TBL_CONTROL C ON B.CONTROL_SEQ = C.CONTROL_SEQ  AND C.DEL_YN = 'N'
                    WHERE B.DEL_YN = 'N'
                      AND  B.WORK_FINISH_DT IS NULL
                      AND B.WORK_STATUS IN ('DBS010', 'DBS020')
                ) B  ON A.EQUIP_SEQ = B.EQUIP_SEQ
            WHERE 1 = 1
                AND A.EQUIP_KIND = '1' AND A.DEL_YN = 'N'
                AND LAYOUT_ROW IS NOT NULL
                AND LAYOUT_COL IS NOT NULL
                AND A.FACTORY_AREA IN ('ARE01', 'ARE02', 'ARE11', 'ARE05', 'ARE06')
                <if test="FACTORY_TYPE != null and FACTORY_TYPE != ''">
                    <choose>
                        <when test="FACTORY_TYPE == 'FCT030'">
                            AND SF_GET_ETC_CD('1005', A.FACTORY_AREA) = 'FCT030'
                        </when>
                        <otherwise>
                            AND SF_GET_ETC_CD('1005', A.FACTORY_AREA) != 'FCT030'
                        </otherwise>
                    </choose>
                </if>
            UNION
            SELECT 'RUN' AS TITLE, COUNT(*) OVER () AS CNT
            FROM TBL_EQUIP A
                INNER JOIN TBL_MCT_WORK B ON A.EQUIP_SEQ = B.EQUIP_SEQ AND B.WORK_STATUS = 'DBS020' AND B.DEL_YN = 'N' AND B.WORK_FINISH_DT IS NULL
                INNER JOIN TBL_CONTROL C ON B.CONTROL_SEQ = C.CONTROL_SEQ  AND C.DEL_YN = 'N'
            WHERE A.EQUIP_KIND = '1'
                AND A.DEL_YN = 'N'
                AND A.FACTORY_AREA IN ('ARE01', 'ARE02', 'ARE11', 'ARE05', 'ARE06')
                AND LAYOUT_ROW IS NOT NULL
                AND LAYOUT_COL IS NOT NULL
                <if test="FACTORY_TYPE != null and FACTORY_TYPE != ''">
                    <choose>
                        <when test="FACTORY_TYPE == 'FCT030'">
                            AND SF_GET_ETC_CD('1005', A.FACTORY_AREA) = 'FCT030'
                        </when>
                        <otherwise>
                            AND SF_GET_ETC_CD('1005', A.FACTORY_AREA) != 'FCT030'
                        </otherwise>
                    </choose>
                </if>
            GROUP BY A.EQUIP_SEQ
            UNION
            SELECT 'STOP' AS TITLE, COUNT(*) OVER () AS CNT
            FROM TBL_EQUIP A
                INNER JOIN TBL_MCT_WORK B ON A.EQUIP_SEQ = B.EQUIP_SEQ AND B.WORK_STATUS = 'DBS010' AND B.DEL_YN = 'N' AND B.WORK_FINISH_DT IS NULL
                INNER JOIN TBL_CONTROL C ON B.CONTROL_SEQ = C.CONTROL_SEQ  AND C.DEL_YN = 'N'
            WHERE A.EQUIP_KIND = '1'
                AND A.DEL_YN = 'N'
                AND A.FACTORY_AREA IN ('ARE01', 'ARE02', 'ARE11', 'ARE05', 'ARE06')
                AND LAYOUT_ROW IS NOT NULL
                AND LAYOUT_COL IS NOT NULL
                <if test="FACTORY_TYPE != null and FACTORY_TYPE != ''">
                    <choose>
                        <when test="FACTORY_TYPE == 'FCT030'">
                            AND SF_GET_ETC_CD('1005', A.FACTORY_AREA) = 'FCT030'
                        </when>
                        <otherwise>
                            AND SF_GET_ETC_CD('1005', A.FACTORY_AREA) != 'FCT030'
                        </otherwise>
                    </choose>
                </if>
            GROUP BY A.EQUIP_SEQ
            UNION
            SELECT 'NOT_RUN' AS TITLE, COUNT(*) OVER () AS CNT
            FROM TBL_EQUIP A
            WHERE A.EQUIP_KIND = '1'
                AND A.DEL_YN = 'N'
                AND LAYOUT_ROW IS NOT NULL
                AND LAYOUT_COL IS NOT NULL
                AND A.FACTORY_AREA IN ('ARE01', 'ARE02', 'ARE11', 'ARE05', 'ARE06')
                AND NOT EXISTS (
                    SELECT 1
                    FROM TBL_MCT_WORK B
                        INNER JOIN TBL_CONTROL C ON B.CONTROL_SEQ = C.CONTROL_SEQ  AND C.DEL_YN = 'N'
                    WHERE B.EQUIP_SEQ = A.EQUIP_SEQ
                        AND B.DEL_YN = 'N' AND B.WORK_FINISH_DT IS NULL
                        AND B.WORK_STATUS IN ('DBS010','DBS020')
                )
                <if test="FACTORY_TYPE != null and FACTORY_TYPE != ''">
                    <choose>
                        <when test="FACTORY_TYPE == 'FCT030'">
                            AND SF_GET_ETC_CD('1005', A.FACTORY_AREA) = 'FCT030'
                        </when>
                        <otherwise>
                            AND SF_GET_ETC_CD('1005', A.FACTORY_AREA) != 'FCT030'
                        </otherwise>
                    </choose>
                </if>
            GROUP BY A.EQUIP_SEQ
        ) Z
    </select>

    <select id="selectTvPopStatusList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT CASE WHEN B.PART_NUM IS NULL THEN A.CONTROL_NUM ELSE CONCAT(A.CONTROL_NUM,'#',B.PART_NUM) END AS CONTROL_PART_INFO
             , B.PART_STATUS
             , IFNULL(SUM(SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ)),0) AS TOTAL_QTY
             , COUNT(*) AS TOTAL_CNT
        FROM  jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
          AND A.DEL_YN = 'N'
          AND A.OUT_FINISH_DT IS NULL
        GROUP BY B.PART_STATUS
        ORDER BY A.CONTROL_SEQ DESC
    </select>
    <select id="selectTvPopPending" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT CASE WHEN B.PART_NUM IS NULL THEN A.CONTROL_NUM ELSE CONCAT(A.CONTROL_NUM,'#',B.PART_NUM) END AS CONTROL_PART_INFO
             , 'PENDING' AS PART_STATUS
            , IFNULL(SUM(SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ)),0) AS TOTAL_QTY
            , COUNT(*) AS TOTAL_CNT
        FROM  jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
            AND A.DEL_YN = 'N'
            AND A.OUT_FINISH_DT IS NULL
            AND A.CONTROL_STATUS = 'ORD005'
        ORDER BY A.CONTROL_SEQ DESC
    </select>
    <select id="selectTvPopReturn" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT CASE WHEN B.PART_NUM IS NULL THEN A.CONTROL_NUM ELSE CONCAT(A.CONTROL_NUM,'#',B.PART_NUM) END AS CONTROL_PART_INFO
             , 'RETURN' AS PART_STATUS
             , IFNULL(SUM(SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ)),0) AS TOTAL_QTY
             , COUNT(*) AS TOTAL_CNT
        FROM jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
          AND A.DEL_YN = 'N'
          AND A.OUT_FINISH_STATUS = 'RLS030'
        ORDER BY A.CONTROL_SEQ DESC
    </select>
    <select id="selectTvPopWaitOutGoing" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT CASE WHEN B.PART_NUM IS NULL THEN A.CONTROL_NUM ELSE CONCAT(A.CONTROL_NUM,'#',B.PART_NUM) END AS CONTROL_PART_INFO
             , 'WAITOUT' AS PART_STATUS
             , IFNULL(SUM(SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ)),0) AS TOTAL_QTY
             , COUNT(*) AS TOTAL_CNT
        FROM  jmes.TBL_CONTROL A, jmes.TBL_CONTROL_PART B, jmes.TBL_INSPECT C
        WHERE A.CONTROL_SEQ = B.CONTROL_SEQ
          AND C.CONTROL_SEQ  = B.CONTROL_SEQ
          AND C.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
          AND A.DEL_YN = 'N'
          AND C.INSPECT_GRADE IN ('GRD010','GRD020','GRD030')
          AND A.OUT_FINISH_DT IS NULL
          AND A.OUT_FINISH_STATUS IS NULL
        ORDER BY A.CONTROL_SEQ DESC
    </select>

    <select id="selectMctOngoingInfoForDetailPop" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT X.EQUIP_NM,
            CASE WHEN IFNULL(X.DISCONNECT_YN,'N') = 'Y' THEN 'Disconnected'
                 WHEN Y.WORK_STATUS = 'DBS010' THEN 'Stop'
                 WHEN Y.WORK_STATUS = 'DBS020' THEN 'Active'
            END AS EQUIP_STATUS,
            CASE WHEN X.LOGIN_USER_ID IS NOT NULL THEN SF_GET_USER_NM(X.LOGIN_USER_ID)
                 ELSE SF_GET_USER_NM(X.UPDATE_ID)
            END AS WORK_USER_NM,
            CASE WHEN X.LOGIN_USER_ID IS NOT NULL THEN (SELECT PHOTO_GFILE_SEQ FROM TBL_USER H WHERE H.USER_ID = X.LOGIN_USER_ID AND H.DEL_YN = 'N')
                 ELSE (SELECT PHOTO_GFILE_SEQ FROM TBL_USER H WHERE H.USER_ID = X.UPDATE_ID AND H.DEL_YN = 'N')
            END AS PHOTO_GFILE_SEQ,
            SF_GET_CODE_NM('1012', X.EQUIP_TYPE, #{LOGIN_LOCALE}) AS EQUIP_TYPE_NM,
            SF_GET_CODE_NM('1005', X.FACTORY_AREA, #{LOGIN_LOCALE}) AS FACTORY_AREA_NM,
            IFNULL(X.IF_USE_YN,'N') AS IF_USE_YN,
            CONCAT(Y.SIZE_TXT, ' / ', Y.MATERIAL_DETAIL_NM) AS SIZE_MATERIAL,
            CONCAT((Y.CONTROL_PART_QTY + Y.ADDITIONAL_QTY),' EA / ', Y.WORK_TYPE_NM) AS QTY_WORK_TYPE,
            DATE_FORMAT(Y.INNER_DUE_DT,'%Y-%m-%d') AS INNER_DUE_DT,
            SF_GET_PART_STATUS_NM(Y.CONTROL_SEQ, Y.CONTROL_DETAIL_SEQ,#{LOGIN_LOCALE}) AS PART_STATUS_NM,
            SF_GET_POP_CURR_POSITION(Y.CONTROL_SEQ, Y.CONTROL_DETAIL_SEQ,#{LOGIN_LOCALE}) AS CURR_POSITION,
            Y.*,
            CASE WHEN Y.ADDITIONAL_QTY > 0 AND Y.SAME_SIDE_YN = 'Y' THEN (
                    CONCAT(IFNULL(Y.CONTROL_PART_QTY, 0),' (',Y.ORIGINAL_SIDE_QTY,',',Y.OTHER_SIDE_QTY,') + ', Y.ADDITIONAL_QTY)
                 )
                 WHEN Y.ADDITIONAL_QTY <![CDATA[ < ]]> 0 AND Y.SAME_SIDE_YN = 'Y' THEN (
                    CONCAT(IFNULL(Y.CONTROL_PART_QTY, 0),' (',Y.ORIGINAL_SIDE_QTY,',',Y.OTHER_SIDE_QTY,') - ', ABS(Y.ADDITIONAL_QTY))
                 )
                 WHEN Y.ADDITIONAL_QTY > 0 THEN (
                    CONCAT(Y.CONTROL_PART_QTY,' + ', Y.ADDITIONAL_QTY)
                 )
                 WHEN Y.ADDITIONAL_QTY <![CDATA[ < ]]> 0 THEN (
                    CONCAT(Y.CONTROL_PART_QTY,' - ', ABS(Y.ADDITIONAL_QTY))
                 )
                 WHEN Y.CONTROL_PART_QTY > 0 AND Y.SAME_SIDE_YN = 'Y' THEN (
                    CONCAT(Y.CONTROL_PART_QTY,' (',Y.ORIGINAL_SIDE_QTY,',',Y.OTHER_SIDE_QTY,')')
                 )
                 ELSE Y.CONTROL_PART_QTY
            END AS QTY_FORMAT,
            CASE WHEN Y.WORK_ACTIVE_TIME IS NOT NULL AND Y.WORK_ACTIVE_TIME > 0
                    THEN CONCAT(
                        TRUNCATE(IFNULL(Y.WORK_ACTIVE_TIME,0)/3600,0) , 'h ',
                        TRUNCATE((IFNULL(Y.WORK_ACTIVE_TIME,0)%3600)/60,0), 'm ',
                        TRUNCATE(((IFNULL(Y.WORK_ACTIVE_TIME,0)%3600) % 60),0), 's'
                    )
                ELSE '-'
            END AS WORK_ACTIVE_TIME_FORMAT,
            CASE WHEN Y.WORK_STOP_TIME IS NOT NULL AND Y.WORK_STOP_TIME > 0
                    THEN CONCAT(
                        TRUNCATE(IFNULL(Y.WORK_STOP_TIME,0)/3600,0) , 'h ',
                        TRUNCATE((IFNULL(Y.WORK_STOP_TIME,0)%3600)/60,0), 'm ',
                        TRUNCATE(((IFNULL(Y.WORK_STOP_TIME,0)%3600) % 60),0), 's'
                    )
                ELSE '-'
            END AS WORK_STOP_TIME_FORMAT,
            CASE WHEN Y.LATEST_CYCLE_TIME IS NOT NULL AND Y.LATEST_CYCLE_TIME > 0
                    THEN CONCAT(
                        TRUNCATE(IFNULL(Y.LATEST_CYCLE_TIME,0)/3600,0) , 'h ',
                        TRUNCATE((IFNULL(Y.LATEST_CYCLE_TIME,0)%3600)/60,0), 'm ',
                        TRUNCATE(((IFNULL(Y.LATEST_CYCLE_TIME,0)%3600) % 60),0), 's'
                    )
                ELSE '-'
            END AS LATEST_CYCLE_TIME_FORMAT,
            CASE WHEN Y.LEFT_TIME IS NULL THEN SPACE(0)
                 WHEN Y.ACTIVE_TYPE = 'PGM_STOP' THEN CASE WHEN Y.LEFT_TIME <![CDATA[ < ]]> 0 THEN SPACE(0)
                                                           ELSE CONCAT(
                                                                TRUNCATE(IFNULL(Y.LEFT_TIME,0)/3600,0) , 'h ',
                                                                TRUNCATE((IFNULL(Y.LEFT_TIME,0)%3600)/60,0), 'm ',
                                                                TRUNCATE(((IFNULL(Y.LEFT_TIME,0)%3600) % 60),0), 's'
                                                           ) END
                 WHEN Y.ACTIVE_TYPE = 'PGM_ACTIVE' THEN CASE WHEN (Y.LEFT_TIME - Y.CURRENT_STATUS_TIME) <![CDATA[ < ]]> 0 THEN SPACE(0)
                                                            ELSE CONCAT(
                                                                TRUNCATE(IFNULL(Y.LEFT_TIME - Y.CURRENT_STATUS_TIME,0)/3600,0) , 'h ',
                                                                TRUNCATE((IFNULL(Y.LEFT_TIME - Y.CURRENT_STATUS_TIME,0)%3600)/60,0), 'm ',
                                                                TRUNCATE(((IFNULL(Y.LEFT_TIME - Y.CURRENT_STATUS_TIME,0)%3600) % 60),0), 's'
                                                            ) END
            END AS LEFT_TIME_FORMAT,
            CASE WHEN Y.CURRENT_STATUS_TIME IS NOT NULL AND Y.CURRENT_STATUS_TIME > 0
                    THEN CONCAT(
                       TRUNCATE(IFNULL(Y.CURRENT_STATUS_TIME,0)/3600,0) , 'h ',
                       TRUNCATE((IFNULL(Y.CURRENT_STATUS_TIME,0)%3600)/60,0), 'm ',
                       TRUNCATE(((IFNULL(Y.CURRENT_STATUS_TIME,0)%3600) % 60),0), 's'
                   )
                ELSE '-'
            END AS CURRENT_STATUS_TIME_FORMAT,
            CASE WHEN Y.PLAN_WORKING_TIME IS NOT NULL AND Y.PLAN_WORKING_TIME > 0
                     THEN CONCAT(
                        TRUNCATE(IFNULL(Y.PLAN_WORKING_TIME,0)/60,0) , 'h ',
                        TRUNCATE((IFNULL(Y.PLAN_WORKING_TIME,0)%60),0), 'm '
                    )
                 ELSE SPACE(0)
            END AS PLAN_WORKING_TIME_FORMAT
        FROM TBL_EQUIP X
            LEFT OUTER JOIN (
                SELECT A.EQUIP_SEQ, A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, A.WORK_USER_ID, A.WORK_STATUS, A.MCT_WORK_SEQ,
                    CASE WHEN C.PART_NUM IS NULL THEN B.CONTROL_NUM ELSE CONCAT(B.CONTROL_NUM, ' # ', C.PART_NUM) END AS CONTROL_NUM,
                    C.DRAWING_NUM,
                    C.SIZE_TXT,
                    C.INNER_DUE_DT,
                    B.NOTE AS CONTROL_NOTE,
                    C.IMG_GFILE_SEQ,
                    IFNULL(SF_GET_CODE_NM('1033', C.WORK_TYPE, #{LOGIN_LOCALE}), SPACE(0)) AS WORK_TYPE_NM,
                    IFNULL(SF_GET_CODE_NM('1027', C.MATERIAL_DETAIL, #{LOGIN_LOCALE}), SPACE(0)) AS MATERIAL_DETAIL_NM,
                    SF_GET_CONTROL_PART_QTY(C.CONTROL_SEQ, C.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY,
                    IFNULL(C.ADDITIONAL_QTY,0) AS ADDITIONAL_QTY,
                    IFNULL(A.GOAL_QTY,SPACE(0)) AS GOAL_QTY,
                    IFNULL(A.FINISH_QTY,SPACE(0)) AS FINISH_QTY,
                    IFNULL(A.ERROR_QTY,SPACE(0)) AS ERROR_QTY,
                    A.WORK_ACTIVE_TIME,
                    A.WORK_STOP_TIME,
                    IFNULL(A.COMPLETE_CYCLE_COUNT,SPACE(1)) AS COMPLETE_CYCLE_COUNT,
                    A.LATEST_CYCLE_TIME,
                    A.PLAN_CYCLE_COUNT,
                    A.UNIT_QTY,
                    A.PLAN_WORKING_TIME,
                    IFNULL(D.ACTIVE_TYPE,SPACE(0)) AS ACTIVE_TYPE,
                    IFNULL(D.PROGRAM,SPACE(0)) AS PROGRAM,
                    IFNULL(D.MESSAGE,SPACE(0)) AS MESSAGE,
                    IFNULL(D.EXECUTION,SPACE(0)) AS EXECUTION,
                    D.EVENT_TIME,
                    IFNULL(SF_GET_SIDE_QTY(A.CONTROL_SEQ, 'ORIGINAL_SIDE_QTY') * IFNULL(C.PART_UNIT_QTY, 1), 0) AS ORIGINAL_SIDE_QTY, -- 대칭_원칭 -->
                    IFNULL(SF_GET_SIDE_QTY(A.CONTROL_SEQ, 'OTHER_SIDE_QTY') * IFNULL(C.PART_UNIT_QTY, 1), 0) AS OTHER_SIDE_QTY, -- 대칭_대칭 -->
                    ((A.LATEST_CYCLE_TIME * CEIL(A.GOAL_QTY / A.UNIT_QTY)) - A.WORK_ACTIVE_TIME) AS LEFT_TIME,
                    TIMESTAMPDIFF(SECOND, D.EVENT_TIME, NOW()) AS CURRENT_STATUS_TIME,
                    IFNULL(B.SAME_SIDE_YN, 'N') AS SAME_SIDE_YN
                FROM TBL_MCT_WORK A
                    INNER JOIN TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.DEL_YN = 'N'
                    INNER JOIN TBL_CONTROL_PART C ON C.CONTROL_SEQ = A.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = A.CONTROL_DETAIL_SEQ
                    LEFT OUTER JOIN TBL_MCT_WORKING_LOG D ON D.MCT_WORK_SEQ = A.MCT_WORK_SEQ
                        AND D.MCT_LOG_SEQ = (SELECT MAX(M.MCT_LOG_SEQ) FROM TBL_MCT_WORKING_LOG M WHERE M.MCT_WORK_SEQ = D.MCT_WORK_SEQ AND M.ACTIVE_TYPE != 'DISCONNECT')
                WHERE A.WORK_START_DT IS NOT NULL
                    AND A.DEL_YN = 'N'
                    AND A.WORK_FINISH_DT IS NULL
                    AND A.WORK_STATUS != 'DBS040'
                GROUP BY A.EQUIP_SEQ
            ) Y ON Y.EQUIP_SEQ = X.EQUIP_SEQ
        WHERE X.DEL_YN = 'N'
            AND X.EQUIP_SEQ = #{EQUIP_SEQ}
    </select>
    <select id="selectMctPlanListForDetailPop" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            '' AS MCT_WORK_SEQ,
            CONCAT(X.MATERIAL_DETAIL_NM,' / ', X.WORK_TYPE_NM) AS WORK_TYPE_MATERIAL,
            CONCAT(X.SIZE_TXT, ' / ', X.MATERIAL_DETAIL_NM) AS SIZE_MATERIAL,
            CONCAT((X.CONTROL_PART_QTY + X.ADDITIONAL_QTY),' EA / ', X.WORK_TYPE_NM) AS QTY_WORK_TYPE,
            CONCAT((X.CONTROL_PART_QTY + X.ADDITIONAL_QTY),' EA') AS QTY,
            CAST((X.CONTROL_PART_QTY + X.ADDITIONAL_QTY) AS INT) AS SUM_QTY,
            CASE WHEN X.ORIGINAL_SIDE_QTY  = 0 AND X.OTHER_SIDE_QTY > 0 THEN '대'
                 ELSE 'N'
            END AS SAME_SIDE_YN,
            CASE WHEN X.PLAN_WORKING_TIME IS NOT NULL AND X.PLAN_WORKING_TIME > 0
                     THEN CONCAT(
                        TRUNCATE(IFNULL(X.PLAN_WORKING_TIME,0)/60,0) , 'h ',
                        TRUNCATE((IFNULL(X.PLAN_WORKING_TIME,0)%60),0), 'm '
                    )
                 ELSE SPACE(0)
            END AS PLAN_WORKING_TIME_FORMAT, -- 예상가공시간은 분단위
            X.*
        FROM (
            SELECT
                ROW_NUMBER () OVER(ORDER BY A.SORT_NUM) AS ROW_NUM,
                A.MCT_PLAN_SEQ,
                SF_GET_PART_STATUS_NM(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, #{LOGIN_LOCALE}) AS PART_STATUS_NM, -- 진행상태 -->
                SF_GET_POP_CURR_POSITION(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ,#{LOGIN_LOCALE}) AS CURR_POSITION,
                E.EQUIP_SEQ,
                A.SORT_NUM,
                SF_GET_RECENT_MCT_WORK('LEAD_TIME', A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS LAST_UNIT_LEAD_TIME,
                B.IMG_GFILE_SEQ,
                B.CONTROL_SEQ,
                B.CONTROL_DETAIL_SEQ,
                C.NOTE AS CONTROL_NOTE,
                SF_GET_DATE_F(B.INNER_DUE_DT,'','') AS INNER_DUE_DT, -- 납기 -->
                CASE WHEN B.PART_NUM IS NULL THEN C.CONTROL_NUM ELSE CONCAT(C.CONTROL_NUM, ' # ', B.PART_NUM) END AS CONTROL_NUM, -- 작업지시번호 -->
                SF_GET_CONTROL_PART_QTY(B.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) AS CONTROL_PART_QTY, -- 수량 -->
                IFNULL(B.ADDITIONAL_QTY,0) AS ADDITIONAL_QTY,
                SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, #{LOGIN_LOCALE}) AS MATERIAL_DETAIL_NM,
                SF_GET_CODE_NM('1033', B.WORK_TYPE, #{LOGIN_LOCALE}) AS WORK_TYPE_NM,
                B.SIZE_TXT,
                IFNULL(A.WORKING_TIME,0) AS PLAN_WORKING_TIME, -- 예상 시간(분) -->
                IFNULL(SF_GET_SIDE_QTY(B.CONTROL_SEQ, 'ORIGINAL_SIDE_QTY') * IFNULL(B.PART_UNIT_QTY, 1), 0) AS ORIGINAL_SIDE_QTY, -- 대칭_원칭 -->
                IFNULL(SF_GET_SIDE_QTY(B.CONTROL_SEQ, 'OTHER_SIDE_QTY') * IFNULL(B.PART_UNIT_QTY, 1), 0) AS OTHER_SIDE_QTY -- 대칭_대칭 -->
            FROM TBL_MCT_PLAN A
                INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                INNER JOIN TBL_CONTROL C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND C.OUT_FINISH_DT IS NULL AND C.DEL_YN = 'N'
                LEFT OUTER JOIN TBL_EQUIP E ON A.EQUIP_SEQ = E.EQUIP_SEQ
            WHERE A.DEL_YN = 'N'
                AND E.EQUIP_SEQ = #{EQUIP_SEQ}
                <if test="MCT_PLAN_SEQ != null and MCT_PLAN_SEQ != ''">
                    AND A.MCT_PLAN_SEQ = #{MCT_PLAN_SEQ}
                </if>
            ORDER BY A.SORT_NUM
        ) X
    </select>
</mapper>