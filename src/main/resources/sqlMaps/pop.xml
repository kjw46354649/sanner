<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="popMapper">

    <select id="selectPopList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER (ORDER BY C.POP_DT) AS ROWNUM,
            A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ,
            CASE WHEN B.EMERGENCY_YN = 'Y' THEN '긴급' END AS EMERGENCY_YN, <!-- 긴급 -->
            jmes.SF_GET_DATE_F(A.INNER_DUE_DT, '', '') AS INNER_DUE_DT, <!-- 내부가공납기 -->
            B.CONTROL_NUM, <!-- 관리번호 -->
            SF_GET_COMP_NM(B.ORDER_COMP_CD) AS ORDER_COMP_NM, <!-- 발주업체 이름 -->
            IFNULL(A.PART_NUM, SPACE(0)) AS PART_NUM, <!-- Part -->
            A.DRAWING_NUM, <!-- 도면 -->
            A.IMG_GFILE_SEQ,
            IFNULL(A.SIZE_TXT, SPACE(0)) AS SIZE_TXT, <!-- 규격 -->
            SF_GET_CODE_NM(1030, A.SURFACE_TREAT, 'KR') AS SURFACE_TREAT, <!-- 표면 처리 -->
            jmes.SF_GET_CONTROL_PART_QTY(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS ORDER_QTY, <!-- 수량 -->
            C.POP_POSITION_NM AS POP_POSITION, <!-- 현재위치 -->
            SF_GET_POP_PREV_POSITION(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS POP_PREV_POSITION, <!-- 이전위치 -->
            jmes.SF_GET_DATE_F(C.POP_DT, 'YY', 'M') AS POP_DT <!-- 외치 일시 -->
        FROM jmes.TBL_CONTROL_PART A
             INNER JOIN jmes.TBL_CONTROL B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.CONTROL_STATUS = 'ORD001' <!-- 주문확정 -->
             INNER JOIN jmes.TBL_POP_VIEW C ON A.CONTROL_SEQ = C.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                AND C.POP_POSITION = #{popLocation}
                AND C.POP_VSEQ = (SELECT MAX(K.POP_VSEQ) FROM jmes.TBL_POP_VIEW K WHERE K.CONTROL_SEQ = C.CONTROL_SEQ
                        AND K.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ GROUP BY K.CONTROL_SEQ, K.CONTROL_DETAIL_SEQ
                )
        WHERE 1 = 1
        ORDER BY C.POP_DT
    </select>

    <select id="selectPopPartStatus" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
		       A.PART_STATUS, CASE WHEN C.POP_SEQ IS NULL THEN 'N' ELSE 'Y' END RECEIVE_YN
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL_BARCODE B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND B.DEL_YN = 'N'
				AND B.BARCODE_NUM = #{popBarcode}
			LEFT OUTER JOIN TBL_POP C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
		WHERE 1=1
    </select>

    <select id="selectInsertPopPartStatus" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        	Z.CONTROL_SEQ, Z.CONTROL_DETAIL_SEQ, Z.POP_PREV_POSITION,
            Z.CONTROL_STATUS, Z.OUTSIDE_YN, Z.PART_STATUS,
        	CASE WHEN Z.OUTSIDE_YN = 'Y' AND Z.PRO001 IS NOT NULL AND Z.PRO019 IS NULL THEN 'PRO019' ELSE '' END PRO019,  <!-- 외주 가공 입고 상태 처리 -->
        	CASE WHEN Z.PRO004 IS NOT NULL AND Z.PRO005 IS NULL THEN 'PRO005' ELSE '' END PRO005, <!-- 소재 입고 상태 처리 -->
        	CASE WHEN Z.POP_PREV_POSITION = 'POP150' AND Z.POP_CD NOT IN ('POP150') THEN 'PRO013' ELSE '' END PRO013, <!-- 후가공 완료 상태 처리 -->
        	CASE WHEN Z.POP_PREV_POSITION = 'POP160' AND Z.POP_CD NOT IN ('POP160') THEN 'PRO015' ELSE '' END PRO015, <!-- 표면처리 완료 상태 처리 -->
        	CASE WHEN Z.WORK_COUNT > 0 AND Z.INNER_WORK_FINISH_DT IS NULL AND Z.POP_CD = 'POP100' THEN 'PRO009' ELSE '' END PRO009, <!-- 가공완료 상태 처리 -->
        	CASE WHEN Z.PRO018 IS NULL AND Z.WORK_TYPE = 'WTP020' THEN 'PRO018' ELSE '' END PRO018, <!-- 모도면 상태 처리 -->
        	CASE WHEN Z.INNER_WORK_FINISH_DT IS NULL AND Z.WORK_COUNT > 0 AND Z.POP_CD IN ('POP100', 'POP150', 'POP160') THEN 'Y' ELSE '' END INNER_WORK_FINISH_DT,
            CASE WHEN Z.OUTSIDE_YN = 'Y' AND CONTROL_STATUS NOT IN ('ORD001') THEN 'X' ELSE '' END AS CHE_OUT001, <!-- 외주 가공의 경우 주문 확정 이후에 POP 스캔 가능  -->
            CASE WHEN Z.OUTSIDE_YN = 'N' AND PRO002 IS NULL THEN 'X' ELSE '' END AS CHE_PRO002 <!-- 일반의 경우 가공 확정 이후 POP 스캔 가능 -->
        FROM (
        	SELECT
        	    A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ,
                IFNULL(H.CONTROL_STATUS, SPACE(0)) AS CONTROL_STATUS,, <!-- CONTROL 상태 -->
        	    A.WORK_TYPE, <!-- 작업구분  -->
        	    #{popLocation} AS POP_CD, <!-- 현재 POP 스캔 코드 처리 대상 POP100 : 검사실, POP150: 후가공, POP160: 표면처리 -->
                IFNULL(A.PART_STATUS, SPACE(0)) AS PART_STATUS, <!-- CONTROL PART 현재 상태  -->
        	    A.INNER_WORK_FINISH_DT, <!-- 가공 완료 일시  -->
                IFNULL(SF_GET_POP_PREV_POSITION(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ), SPACE(0)) AS POP_PREV_POSITION, <!-- 이전 POP SEQ -->
                IFNULL(A.OUTSIDE_YN, 'N') AS OUTSIDE_YN, <!-- 외주 가공 여부  -->
        	    (SELECT COUNT(*) FROM TBL_MCT_WORK T
        	     WHERE A.CONTROL_SEQ = T.CONTROL_SEQ
        	     	AND A.CONTROL_DETAIL_SEQ = T.CONTROL_DETAIL_SEQ AND T.DEL_YN = 'N'
        	    ) AS WORK_COUNT,
        	    MAX(D.PART_STATUS) AS PRO004, MAX(G.PART_STATUS) AS PRO005, MAX(F.PART_STATUS) AS PRO001, MAX(I.PART_STATUS) AS PRO019,
        	    MAX(J.PART_STATUS) AS PRO009, MAX(K.PART_STATUS) AS PRO012, MAX(L.PART_STATUS) AS PRO013, MAX(M.PART_STATUS) AS PRO014,
        	    MAX(N.PART_STATUS) AS PRO015, MAX(O.PART_STATUS) AS PRO018, MAX(P.PART_STATUS) AS PRO002
        	FROM TBL_CONTROL_PART A
        	    INNER JOIN TBL_CONTROL H ON A.CONTROL_SEQ = H.CONTROL_SEQ -- AND H.CONTROL_STATUS = 'ORD001' <!--확정 상태 -->
        	    INNER JOIN TBL_CONTROL_BARCODE B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND B.DEL_YN = 'N'
        	            AND B.BARCODE_NUM = #{popBarcode}
        	    LEFT OUTER JOIN TBL_POP C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
        	        AND C.POP_SEQ = (SELECT MAX(E.POP_SEQ) FROM TBL_POP E WHERE C.CONTROL_SEQ = E.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ) <!-- 현재 POP -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS D ON A.CONTROL_SEQ = D.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ AND D.PART_STATUS = 'PRO004' <!-- 소재 주문 -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS G ON A.CONTROL_SEQ = G.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = G.CONTROL_DETAIL_SEQ AND G.PART_STATUS = 'PRO005' <!-- 소재 입고 -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS F ON A.CONTROL_SEQ = F.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = F.CONTROL_DETAIL_SEQ AND F.PART_STATUS = 'PRO001' <!-- 외주 가공 요청 -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS I ON A.CONTROL_SEQ = I.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = I.CONTROL_DETAIL_SEQ AND I.PART_STATUS = 'PRO019' <!-- 외주 가공 입고 처리 -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS J ON A.CONTROL_SEQ = J.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = J.CONTROL_DETAIL_SEQ AND J.PART_STATUS = 'PRO009' <!-- 가공완료  -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS K ON A.CONTROL_SEQ = K.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = K.CONTROL_DETAIL_SEQ AND K.PART_STATUS = 'PRO012' <!-- 후 가공입고  -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS L ON A.CONTROL_SEQ = L.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = L.CONTROL_DETAIL_SEQ AND L.PART_STATUS = 'PRO013' <!-- 후 가공 완료   -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS M ON A.CONTROL_SEQ = M.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = M.CONTROL_DETAIL_SEQ AND M.PART_STATUS = 'PRO014' <!-- 표면 처리 입고   -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS N ON A.CONTROL_SEQ = N.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = N.CONTROL_DETAIL_SEQ AND N.PART_STATUS = 'PRO015' <!-- 표면 처리 완료   -->
        	    LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS O ON A.CONTROL_SEQ = O.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = O.CONTROL_DETAIL_SEQ AND O.PART_STATUS = 'PRO018' <!-- 조립전환   -->
                LEFT OUTER JOIN TBL_CONTROL_PART_PROGRESS P ON A.CONTROL_SEQ = P.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = P.CONTROL_DETAIL_SEQ AND P.PART_STATUS = 'PRO002' <!-- 가공 확정 존재 유무 주문 -->
        	WHERE 1=1
        ) Z
    </select>

    <select id="selectScanBarcodeInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ,
            CONCAT(H.CONTROL_NUM, CASE WHEN A.PART_NUM IS NOT NULL THEN CONCAT(' #', A.PART_NUM) ELSE SPACE(0) END) AS CONTROL_NUM_NM,
            SF_GET_POP_PREV_POSITION(A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ) AS POP_PREV_POSITION, <!-- 이전 POP SEQ -->
            IFNULL(C.POP_POSITION_NM, SPACE(0)) AS POP_POSITION_NM, <!-- 현재 등록된 위치 -->
            CONCAT(SF_GET_CODE_NM(1009, #{popLocation}, 'KR'), ' (', jmes.SF_GET_DATE_F(NOW(), '', 'M'), ')') AS CHECK_POSITION_NM <!-- BARCODE 스캔 등록된 위치 -->
        FROM TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL H ON A.CONTROL_SEQ = H.CONTROL_SEQ
            INNER JOIN TBL_CONTROL_BARCODE B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ AND B.DEL_YN = 'N'
                    AND B.BARCODE_NUM = #{popBarcode}
            LEFT OUTER JOIN TBL_POP_VIEW C ON B.CONTROL_SEQ = C.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = C.CONTROL_DETAIL_SEQ
                AND C.POP_VSEQ = (SELECT MAX(E.POP_VSEQ) FROM TBL_POP_VIEW E WHERE C.CONTROL_SEQ = E.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ) <!-- 현재 POP -->
        WHERE 1=1
    </select>

    <update id="insertControlPartProgressStatus" parameterType="java.util.HashMap">
        INSERT INTO TBL_CONTROL_PART_PROGRESS
            (CONTROL_SEQ, CONTROL_DETAIL_SEQ, SEQ, PART_STATUS, STATUS_DT, INSERT_ID)
        SELECT
            CONTROL_SEQ, CONTROL_DETAIL_SEQ, NEXTVAL(SEQ_CONTROL_PART_PROGRESS), #{PART_STATUS}, NOW(), #{LOGIN_USER_ID}
        FROM TBL_CONTROL_PART
        WHERE 1 = 1
            AND CONTROL_SEQ = #{CONTROL_SEQ}
            AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </update>

    <update id="insertControlPartChildProgressStatus" parameterType="java.util.HashMap">
        INSERT INTO TBL_CONTROL_PART_PROGRESS
            (CONTROL_SEQ, CONTROL_DETAIL_SEQ, SEQ, PART_STATUS, STATUS_DT, INSERT_ID)
        SELECT
            CONTROL_SEQ, CONTROL_DETAIL_SEQ, NEXTVAL(SEQ_CONTROL_PART_PROGRESS), #{PART_STATUS}, NOW(), #{LOGIN_USER_ID}
        FROM TBL_CONTROL_PART
        WHERE 1 = 1
            AND CONTROL_SEQ = #{CONTROL_SEQ}
            AND WORK_TYPE = 'WTP050'  <!-- 모도면 part 상태를 업데이트 한다. -->
    </update>

    <update id="updateControlPartChildProgressMappingStatus" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL_PART_PROGRESS B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                AND B.SEQ = (SELECT MAX(SEQ) FROM TBL_CONTROL_PART_PROGRESS E WHERE A.CONTROL_SEQ = E.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ)
        SET A.PART_STATUS = (CASE WHEN A.PART_STATUS != B.PART_STATUS THEN B.PART_STATUS ELSE A.PART_STATUS END),
            A.STATUS_DT = NOW(),
            A.UPDATE_DT = NOW(),
            A.UPDATE_ID = #{LOGIN_USER_ID}
        WHERE 1=1
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND A.WORK_TYPE = 'WTP050' <!-- 모도면 part 상태를 업데이트 한다. -->
    </update>

    <update id="updateControlPartInnerWorkFinishDtStatus" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART
        SET
            INNER_WORK_FINISH_DT = NOW(),
            UPDATE_DT = NOW(),
            UPDATE_ID = #{LOGIN_USER_ID}
        WHERE 1=1
            AND CONTROL_SEQ = #{CONTROL_SEQ}
            AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </update>

    <update id="updateControlPartProgressMappingStatus" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL_PART_PROGRESS B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                AND B.SEQ = (SELECT MAX(SEQ) FROM TBL_CONTROL_PART_PROGRESS E WHERE A.CONTROL_SEQ = E.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ)
        SET A.PART_STATUS = (CASE WHEN A.PART_STATUS != B.PART_STATUS THEN B.PART_STATUS ELSE A.PART_STATUS END),
            A.STATUS_DT = NOW(),
            A.UPDATE_DT = NOW(),
            A.UPDATE_ID = #{LOGIN_USER_ID}
        WHERE 1=1
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </update>

    <update id="updateControlPartOutsideInDate" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART A
        SET
            A.OUTSIDE_STATUS = 'OST003',
            A.OUTSIDE_STATUS_DT = NOW(),
            A.OUTSIDE_IN_DT = NOW(),
            A.UPDATE_DT = NOW(),
            A.UPDATE_ID = #{LOGIN_USER_ID}
        WHERE 1=1
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </update>

    <update id="updatePopControlPartStatus" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART A
            INNER JOIN TBL_CONTROL_BARCODE B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                AND B.BARCODE_NUM = #{popBarcode}
        SET A.PART_STATUS = #{PART_STATUS},
            A.STATUS_DT = NOW(),
            A.UPDATE_DT = NOW(),
            A.UPDATE_ID = #{LOGIN_USER_ID}
        WHERE 1=1
    </update>

    <update id="updatePopMaterialOrderStatus" parameterType="java.util.HashMap">
        UPDATE TBL_MATERIAL_ORDER A
        SET A.ORDER_STATUS = 'MST004',
            A.INSPECT_MATERIAL_YN = 'Y',
            A.INSPECT_SURFACE_YN = 'Y',
            A.INSPECT_SIZE_YN = 'Y',
            A.IN_DT = NOW(),
            A.UPDATE_DT = NOW(),
            A.UPDATE_ID = #{LOGIN_USER_ID}
        WHERE 1=1
            AND A.CONTROL_SEQ = #{CONTROL_SEQ}
            AND A.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </update>

    <insert id="insertPopBarcode" parameterType="java.util.HashMap">
        INSERT INTO TBL_POP
            (POP_SEQ, POP_POSITION, POP_PREV_POSITION, POP_DT, CONTROL_SEQ, CONTROL_DETAIL_SEQ, INSERT_ID)
        SELECT
            NEXTVAL(SEQ_POP), #{POP_POSITION}, #{POP_PREV_POSITION}, NOW(), A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ, #{LOGIN_USER_ID}
        FROM TBL_CONTROL_PART A
        WHERE 1=1
            AND CONTROL_SEQ = #{CONTROL_SEQ}
            AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </insert>

    <select id="selectBarcodeInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            CONTROL_SEQ,
            CONTROL_DETAIL_SEQ,
            CONTROL_VER
        FROM TBL_CONTROL_BARCODE
        WHERE 1 = 1
            AND BARCODE_NUM = #{popBarcode}
            AND DEL_YN = 'N'
    </select>

</mapper>