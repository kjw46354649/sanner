<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="material">
    <select id="selectItemOrderRegisterNextMaterialOrderNum" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            CONCAT('MPO-', DATE_FORMAT(NOW(), '%Y%m%d'), '-',LPAD(COUNT(*)+1, 3, '0')) AS MATERIAL_ORDER_NUM
        FROM TBL_MATERIAL_ORDER
        WHERE 1=1
            AND DATE_FORMAT(INSERT_DT, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d')
    </select>

    <select id="selectItemOrderRegisterList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, F.MATERIAL_ORDER_SEQ, F.MATERIAL_ORDER_NUM,
            A.CONTROL_NUM, A.CONTROL_VER,
            A.ORDER_COMP_CD, SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
            A.COMP_CD, SF_GET_COMP_NM(A.COMP_CD) AS ORDER_COMP_NM,
            A.CONTROL_STATUS, SF_GET_CODE_NM('1038', A.CONTROL_STATUS, 'EN') AS CONTROL_STATUS_NM,
            B.STATUS_DT, SF_GET_CODE_NM('1013', B.PART_STATUS, 'EN') AS PART_STATUS_NM,
            A.ORDER_STAFF_SEQ, B.PART_STATUS, B.DRAWING_NUM, B.DRAWING_VER, B.PART_NUM,
            CASE WHEN F.MATERIAL_TYPE IS NOT NULL THEN F.MATERIAL_TYPE
                ELSE SF_GET_ETC_CD('1000', B.MATERIAL_TYPE)
            END MATERIAL_TYPE,
            CASE WHEN F.MATERIAL_TYPE IS NOT NULL THEN SF_GET_ETC_NM( '1000', F.MATERIAL_TYPE)
                ELSE SF_GET_ETC_NM('1000', B.MATERIAL_TYPE)
            END MATERIAL_TYPE_NM,
            CASE WHEN F.MATERIAL_DETAIL IS NOT NULL THEN F.MATERIAL_DETAIL
                ELSE B.MATERIAL_DETAIL
            END AS MATERIAL_DETAIL,
            CASE WHEN F.MATERIAL_DETAIL IS NOT NULL THEN SF_GET_CODE_NM(1027, F.MATERIAL_DETAIL, 'EN')
                ELSE SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, 'EN')
            END AS MATERIAL_DETAIL_NM,
            CASE WHEN F.MATERIAL_KIND IS NOT NULL THEN F.MATERIAL_KIND
                ELSE B.MATERIAL_KIND
            END AS MATERIAL_KIND,
            CASE WHEN F.MATERIAL_KIND IS NOT NULL THEN SF_GET_CODE_NM(1029, F.MATERIAL_KIND, 'EN')
                ELSE SF_GET_CODE_NM('1029', B.MATERIAL_KIND, 'EN')
            END AS MATERIAL_KIND_NM,
            B.SIZE_TXT, B.SIZE_TYPE, B.SIZE_W, B.SIZE_H, B.SIZE_D, B.SIZE_L,
            B.DWG_GFILE_SEQ, B.PDF_GFILE_SEQ, D.ORDER_DUE_DT, D.ORDER_QTY,
            F.MATERIAL_COMP_CD AS M_COMP_CD, SF_GET_COMP_NM(F.MATERIAL_COMP_CD) AS M_COMP_NM,
            F.ORDER_QTY AS M_ORDER_QTY, F.ORDER_NOTE AS M_ORDER_NOTE, F.SIZE_TXT AS M_SIZE_TXT, G.REQUEST_CD,
            F.ORDER_STATUS AS M_STATUS, SF_GET_CODE_NM('1028', F.ORDER_STATUS, 'EN') AS M_STATUS_NM,
            F.ORDER_DT AS M_ORDER_DT,
            I.SIZE_TXT AS OUT_SIZE_TXT, H.OUT_QTY,
            CASE WHEN H.MY_MAT_OUT_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END OUT_YN
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.WORK_TYPE = 'WTP010'
                AND B.PART_STATUS IN( 'PRO002', 'PRO004')
            INNER JOIN TBL_CONTROL_PART_ORDER D ON B.CONTROL_SEQ = D.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_MATERIAL_ORDER F ON D.CONTROL_SEQ = F.CONTROL_SEQ AND F.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_MATERIAL_ORDER_REQUEST G ON F.MATERIAL_ORDER_SEQ AND G.MATERIAL_ORDER_SEQ
            LEFT OUTER JOIN TBL_MY_MATERIAL_OUT H ON H.CONTROL_SEQ = F.CONTROL_SEQ AND F.CONTROL_DETAIL_SEQ = H.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_MY_MATERIAL_STOCK I ON I.MY_MAT_STOCK_SEQ = H.MY_MAT_STOCK_SEQ
        WHERE A.CONTROL_STATUS = 'ORD001'
        ORDER BY A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, F.MATERIAL_ORDER_SEQ
    </select>

    <select id="selectItemOrderRegisterDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.MY_MAT_STOCK_SEQ, A.WAREHOUSE_CD, SF_GET_CODE_NM('1049', A.WAREHOUSE_CD, 'EN') AS WAREHOUSE_NM,
            A.MATERIAL_TYPE, SF_GET_ETC_NM( '1000', A.MATERIAL_TYPE) AS MATERIAL_TYPE_NM,
            A.MATERIAL_DETAIL, SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, 'EN') AS MATERIAL_DETAIL_NM,
            A.MATERIAL_KIND, SF_GET_CODE_NM('1029', A.MATERIAL_KIND, 'EN') AS MATERIAL_KIND_NM,
            A.SIZE_TXT, A.LOC_SEQ, B.LOC_NM,
            SUM(IFNULL(C.IN_QTY, 0)) - SUM(IFNULL(D.OUT_QTY, 0)) AS STOCK_QTY,
            D.MY_MAT_OUT_SEQ, D.OUT_QTY AS OUT_QTY,
            CASE WHEN D.CONTROL_DETAIL_SEQ IS NOT NULL THEN 'Y' ELSE 'N' END OUT_YN,
            A.NOTE
        FROM TBL_MY_MATERIAL_STOCK A
            INNER JOIN TBL_WAREHOUSE_LOCATION B ON A.WAREHOUSE_CD = B.WAREHOUSE_CD AND A.LOC_SEQ = B.LOC_SEQ AND B.DEL_YN = 'N'
            LEFT OUTER JOIN TBL_MY_MATERIAL_IN C ON A.MY_MAT_STOCK_SEQ = C.MY_MAT_STOCK_SEQ
            LEFT OUTER JOIN TBL_MY_MATERIAL_OUT D ON A.MY_MAT_STOCK_SEQ = D.MY_MAT_STOCK_SEQ
                <if test="CONTROL_SEQ !='' and CONTROL_SEQ != null">
                    AND D.CONTROL_SEQ = #{CONTROL_SEQ}
                </if>
                <if test="CONTROL_DETAIL_SEQ !='' and CONTROL_DETAIL_SEQ != null">
                    AND D.CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
                </if>
        WHERE 1=1
            <if test="WAREHOUSE_CD !='' and WAREHOUSE_CD != null">
                AND A.WAREHOUSE_CD = #{WAREHOUSE_CD}
            </if>
            <if test="MATERIAL_DETAIL !='' and MATERIAL_DETAIL != null">
                AND A.MATERIAL_DETAIL = #{MATERIAL_DETAIL}
            </if>
            <if test="AREA !='' and AREA != null">
                AND A.AREA = #{AREA}
            </if>
            <if test="CONDITION !='' and CONDITION != null">
                AND A.CONDITION = #{CONDITION}
            </if>
        GROUP BY A.WAREHOUSE_CD, A.MATERIAL_KIND, A.MATERIAL_DETAIL, A.SIZE_TXT
        ORDER BY A.WAREHOUSE_CD, A.LOC_SEQ
    </select>

    <select id="selectItemOrderRegisterPopList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, F.MATERIAL_ORDER_SEQ, F.MATERIAL_ORDER_NUM,
            A.CONTROL_NUM, A.CONTROL_VER,
            A.ORDER_COMP_CD, SF_GET_COMP_NM(A.ORDER_COMP_CD) AS ORDER_COMP_NM,
            A.COMP_CD, SF_GET_CODE_NM('1007', A.COMP_CD, 'EN') AS COMP_NM,
            A.CONTROL_STATUS, SF_GET_CODE_NM('1024', A.CONTROL_STATUS, 'EN') AS CONTROL_STATUS_NM,
            B.STATUS_DT, SF_GET_CODE_NM('1024', B.PART_STATUS, 'EN') AS PART_STATUS_NM,
            A.ORDER_STAFF_SEQ, B.PART_STATUS, B.DRAWING_NUM, B.DRAWING_VER, B.PART_NUM,
            CASE WHEN F.MATERIAL_TYPE IS NOT NULL THEN F.MATERIAL_TYPE
                ELSE SF_GET_ETC_CD('1000', B.MATERIAL_TYPE)
            END MATERIAL_TYPE,
            CASE WHEN F.MATERIAL_TYPE IS NOT NULL THEN SF_GET_ETC_NM( '1000', F.MATERIAL_TYPE)
                ELSE SF_GET_ETC_NM('1000', B.MATERIAL_TYPE)
            END MATERIAL_TYPE_NM,
            CASE WHEN F.MATERIAL_DETAIL IS NOT NULL THEN F.MATERIAL_DETAIL
                ELSE B.MATERIAL_DETAIL
            END AS MATERIAL_DETAIL,
            CASE WHEN F.MATERIAL_DETAIL IS NOT NULL THEN SF_GET_CODE_NM(1027, F.MATERIAL_DETAIL, 'EN')
                ELSE SF_GET_CODE_NM('1027', B.MATERIAL_DETAIL, 'EN')
            END AS MATERIAL_DETAIL_NM,
            CASE WHEN F.MATERIAL_KIND IS NOT NULL THEN F.MATERIAL_KIND
                ELSE B.MATERIAL_KIND
            END AS MATERIAL_KIND,
            CASE WHEN F.MATERIAL_KIND IS NOT NULL THEN SF_GET_CODE_NM(1029, F.MATERIAL_KIND, 'EN')
                ELSE SF_GET_CODE_NM('1029', B.MATERIAL_KIND, 'EN')
            END AS MATERIAL_KIND_NM,
            B.SIZE_TXT, B.SIZE_TYPE, B.SIZE_W, B.SIZE_H, B.SIZE_D, B.SIZE_L,
            B.DWG_GFILE_SEQ, B.PDF_GFILE_SEQ, D.ORDER_DUE_DT, D.ORDER_QTY,
            F.MATERIAL_COMP_CD AS M_COMP_CD, SF_GET_CODE_NM('1007', F.MATERIAL_COMP_CD, 'EN') AS M_COMP_NM,
            F.ORDER_QTY AS M_ORDER_QTY, F.ORDER_NOTE AS M_ORDER_NOTE, F.SIZE_TXT AS M_SIZE_TXT, G.REQUEST_CD
        FROM TBL_CONTROL A
            INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND B.WORK_TYPE = 'WTP010'
                AND B.PART_STATUS IN( 'PRO002', 'PRO004')
            INNER JOIN TBL_CONTROL_PART_ORDER D ON B.CONTROL_SEQ = D.CONTROL_SEQ AND B.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_MATERIAL_ORDER F ON D.CONTROL_SEQ = F.CONTROL_SEQ AND F.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            LEFT OUTER JOIN TBL_MATERIAL_ORDER_REQUEST G ON F.MATERIAL_ORDER_SEQ AND G.MATERIAL_ORDER_SEQ
        WHERE A.CONTROL_STATUS = 'ORD001'
            AND CONCAT(A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ) IN(${CONCAT_SEQ})
        ORDER BY A.CONTROL_SEQ, B.CONTROL_DETAIL_SEQ, F.MATERIAL_ORDER_SEQ
    </select>

    <insert id="updateItemOrderRegister" parameterType="java.util.HashMap">
        UPDATE TBL_CONTROL_PART
        SET PART_STATUS = 'PRO004'
        WHERE 1=1
            AND CONTROL_SEQ = #{CONTROL_SEQ}
            AND CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ}
    </insert>

    <update id="insertUpdateItemOrderRegister" parameterType="java.util.HashMap">
        INSERT INTO TBL_MATERIAL_ORDER
        (
            MATERIAL_ORDER_SEQ, MATERIAL_ORDER_NUM, CONTROL_SEQ, CONTROL_DETAIL_SEQ,
            MATERIAL_COMP_CD, HOPE_DUE_DT, SIZE_TXT,
            SIZE_TYPE, SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            MATERIAL_TYPE, MATERIAL_DETAIL, MATERIAL_KIND,
            ORDER_NOTE, ORDER_QTY, ORDER_AMT,
            ORDER_STATUS, ORDER_DT, IN_DT, CANCEL_DT,
            INSERT_DT, INSERT_ID, CANCEL_USER_ID
        )
        VALUES
        (
            <choose>
                <when  test="MATERIAL_ORDER_SEQ !='' and MATERIAL_ORDER_SEQ != null">
                    #{MATERIAL_ORDER_SEQ},
                </when>
                <otherwise>
                    NEXTVAL(SEQ_MATERIAL_ORDER),
                </otherwise>
            </choose>
            #{MATERIAL_ORDER_NUM}, #{CONTROL_SEQ}, #{CONTROL_DETAIL_SEQ},
            #{M_COMP_CD}, #{HOPE_DUE_DT}, #{M_SIZE_TXT},
            SF_GET_SIZE_TXT('SIZE_TYPE', #{M_SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_W', #{M_SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_H', #{M_SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_T', #{M_SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_D', #{M_SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_L', #{M_SIZE_TXT}),
            #{MATERIAL_TYPE}, #{MATERIAL_DETAIL}, #{MATERIAL_KIND},
            #{M_ORDER_NOTE}, #{M_ORDER_QTY}, #{ORDER_AMT},
            #{ORDER_STATUS}, #{ORDER_DT}, #{IN_DT}, #{CANCEL_DT},
            #{INSERT_DT}, #{INSERT_ID}, #{CANCEL_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            MATERIAL_COMP_CD = #{M_COMP_CD},
            HOPE_DUE_DT = #{HOPE_DUE_DT},
            SIZE_TXT = #{M_SIZE_TXT},
            SIZE_TYPE = SF_GET_SIZE_TXT('SIZE_TYPE', #{M_SIZE_TXT}),
            SIZE_W = SF_GET_SIZE_TXT('SIZE_W', #{M_SIZE_TXT}),
            SIZE_H = SF_GET_SIZE_TXT('SIZE_H', #{M_SIZE_TXT}),
            SIZE_T = SF_GET_SIZE_TXT('SIZE_T', #{M_SIZE_TXT}),
            SIZE_D = SF_GET_SIZE_TXT('SIZE_D', #{M_SIZE_TXT}),
            SIZE_L = SF_GET_SIZE_TXT('SIZE_L', #{M_SIZE_TXT}),
            MATERIAL_TYPE = #{MATERIAL_TYPE},
            MATERIAL_DETAIL = #{MATERIAL_DETAIL},
            MATERIAL_KIND = #{MATERIAL_KIND},
            ORDER_NOTE = #{M_ORDER_NOTE},
            ORDER_QTY = #{M_ORDER_QTY},
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
    </update>

    <update id="insertUpdateItemOrderRegisterOut" parameterType="java.util.HashMap">
        INSERT INTO TBL_MY_MATERIAL_OUT
        (MY_MAT_OUT_SEQ, OUT_QTY, OUT_DT, OUT_USER_ID, MY_MAT_STOCK_SEQ, CONTROL_SEQ, CONTROL_DETAIL_SEQ, INSERT_ID)
        VALUES
        (
        <choose>
            <when test="MY_MAT_OUT_SEQ !='' and MY_MAT_OUT_SEQ != null">
                #{MY_MAT_OUT_SEQ},
            </when>
            <otherwise>
                NEXTVAL(SEQ_MY_MAT_OUT),
            </otherwise>
        </choose>
        #{OUT_QTY}, NOW(), #{OUT_USER_ID}, #{MY_MAT_STOCK_SEQ}, #{CONTROL_SEQ}, #{CONTROL_DETAIL_SEQ}, #{INSERT_ID})
        ON DUPLICATE KEY UPDATE
            OUT_QTY = #{OUT_QTY},
            OUT_DT = NOW(),
            OUT_USER_ID = NULL,
            MY_MAT_STOCK_SEQ = #{MY_MAT_STOCK_SEQ},
            CONTROL_SEQ = #{CONTROL_SEQ},
            CONTROL_DETAIL_SEQ = #{CONTROL_DETAIL_SEQ},
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
    </update>

    <update id="insertUpdateItemOrderRegisterPopSave" parameterType="java.util.HashMap">
        INSERT INTO TBL_MATERIAL_ORDER
        (
            MATERIAL_ORDER_SEQ, MATERIAL_ORDER_NUM, CONTROL_SEQ, CONTROL_DETAIL_SEQ,
            MATERIAL_COMP_CD, HOPE_DUE_DT, SIZE_TXT,
            SIZE_TYPE, SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            MATERIAL_TYPE, MATERIAL_DETAIL, MATERIAL_KIND,
            ORDER_NOTE, ORDER_QTY, ORDER_AMT,
            ORDER_STATUS, ORDER_DT, IN_DT, CANCEL_DT,
            INSERT_DT, INSERT_ID, CANCEL_USER_ID
        )
        VALUES
        (
            <choose>
                <when  test="MATERIAL_ORDER_SEQ !='' and MATERIAL_ORDER_SEQ != null">
                    #{MATERIAL_ORDER_SEQ},
                </when>
                <otherwise>
                    NEXTVAL(SEQ_MATERIAL_ORDER),
                </otherwise>
            </choose>
             #{MATERIAL_ORDER_NUM}, #{CONTROL_SEQ}, #{CONTROL_DETAIL_SEQ},
            #{M_COMP_CD}, #{HOPE_DUE_DT}, #{M_SIZE_TXT},
            SF_GET_SIZE_TXT('SIZE_TYPE', #{M_SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_W', #{M_SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_H', #{M_SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_T', #{M_SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_D', #{M_SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_L', #{M_SIZE_TXT}),
            #{MATERIAL_TYPE}, #{MATERIAL_DETAIL}, #{MATERIAL_KIND},
            #{M_ORDER_NOTE}, #{M_ORDER_QTY}, #{ORDER_AMT},
            'MST01', NOW(), #{IN_DT}, #{CANCEL_DT},
            #{INSERT_DT}, #{INSERT_ID}, #{CANCEL_USER_ID}
        )
        ON DUPLICATE KEY UPDATE
            MATERIAL_ORDER_NUM = #{MATERIAL_ORDER_NUM},
            MATERIAL_COMP_CD = #{M_COMP_CD},
            HOPE_DUE_DT = #{HOPE_DUE_DT},
            SIZE_TXT = #{M_SIZE_TXT},
            SIZE_TYPE = SF_GET_SIZE_TXT('SIZE_TYPE', #{M_SIZE_TXT}),
            SIZE_W = SF_GET_SIZE_TXT('SIZE_W', #{M_SIZE_TXT}),
            SIZE_H = SF_GET_SIZE_TXT('SIZE_H', #{M_SIZE_TXT}),
            SIZE_T = SF_GET_SIZE_TXT('SIZE_T', #{M_SIZE_TXT}),
            SIZE_D = SF_GET_SIZE_TXT('SIZE_D', #{M_SIZE_TXT}),
            SIZE_L = SF_GET_SIZE_TXT('SIZE_L', #{M_SIZE_TXT}),
            MATERIAL_TYPE = #{MATERIAL_TYPE},
            MATERIAL_DETAIL = #{MATERIAL_DETAIL},
            MATERIAL_KIND = #{MATERIAL_KIND},
            ORDER_NOTE = #{M_ORDER_NOTE},
            ORDER_QTY = #{M_ORDER_QTY},
            ORDER_STATUS = 'MST002',
            ORDER_DT = NOW(),
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
    </update>

    <update id="updateItemOrderRegisterCancel" parameterType="java.util.HashMap">
        UPDATE TBL_MATERIAL_ORDER
        SET UPDATE_DT = NOW(),
            MATERIAL_ORDER_NUM = NULL,
            ORDER_STATUS = #{ORDER_STATUS},
            ORDER_DT = NULL,
            UPDATE_ID = NULL
        WHERE MATERIAL_ORDER_SEQ = #{MATERIAL_ORDER_SEQ}
    </update>

    <select id="selectItemOrderHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            MATERIAL_ORDER_SEQ, MATERIAL_ORDER_NUM,
            MATERIAL_COMP_CD, SF_GET_CODE_NM('1007', MATERIAL_COMP_CD, 'EN') AS MATERIAL_COMP_NM,
            SUM(ORDER_QTY) AS ORDER_QTY, ORDER_DT
        FROM TBL_MATERIAL_ORDER
        WHERE ORDER_STATUS IS NOT NULL
        GROUP BY MATERIAL_COMP_CD, MATERIAL_ORDER_NUM
        ORDER BY MATERIAL_ORDER_SEQ, MATERIAL_COMP_CD
    </select>

    <select id="selectItemOrderHistoryListDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT * FROM
            (
                SELECT
                    A.MATERIAL_ORDER_SEQ, A.MATERIAL_ORDER_NUM, A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ,
                    A.MATERIAL_COMP_CD, HOPE_DUE_DT, A.SIZE_TXT,
                    A.MATERIAL_TYPE, A.MATERIAL_DETAIL, A.MATERIAL_KIND,
                    A.ORDER_NOTE, A.ORDER_QTY, A.ORDER_AMT,
                    INSPECT_MATERIAL_YN, INSPECT_SURFACE_YN, INSPECT_SIZE_YN, INSPECT_NOTE,
                    ORDER_STATUS, ORDER_DT,
                    IN_DT, CANCEL_DT,
                    A.INSERT_DT, A.INSERT_ID, A.UPDATE_DT, A.UPDATE_ID,
                    CANCEL_USER_ID
                FROM TBL_MATERIAL_ORDER A
                    INNER JOIN TBL_CONTROL_PART B ON A.CONTROL_SEQ = B.CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = B.CONTROL_DETAIL_SEQ
                UNION ALL
                SELECT
                    A.MATERIAL_ORDER_SEQ, A.MATERIAL_ORDER_NUM, A.CONTROL_SEQ, A.CONTROL_DETAIL_SEQ,
                    A.MATERIAL_COMP_CD, HOPE_DUE_DT, A.SIZE_TXT,
                    A.MATERIAL_TYPE, A.MATERIAL_DETAIL, A.MATERIAL_KIND,
                    A.ORDER_NOTE, A.ORDER_QTY, A.ORDER_AMT,
                    INSPECT_MATERIAL_YN, INSPECT_SURFACE_YN, INSPECT_SIZE_YN, INSPECT_NOTE,
                    ORDER_STATUS, ORDER_DT,
                    IN_DT, CANCEL_DT,
                    A.INSERT_DT, A.INSERT_ID, A.UPDATE_DT, A.UPDATE_ID,
                    CANCEL_USER_ID
                FROM TBL_MATERIAL_ORDER A
                WHERE NOT EXISTS ( SELECT * FROM TBL_CONTROL_PART
                                    WHERE A.CONTROL_SEQ = CONTROL_SEQ AND A.CONTROL_DETAIL_SEQ = CONTROL_DETAIL_SEQ)
            ) Z
        WHERE MATERIAL_ORDER_NUM = #{MATERIAL_ORDER_NUM}
            AND MATERIAL_COMP_CD = #{MATERIAL_COMP_CD}
        ORDER BY MATERIAL_ORDER_SEQ, MATERIAL_ORDER_NUM, MATERIAL_COMP_CD
    </select>

    <update id="updateItemOrderHistoryInspection" parameterType="java.util.HashMap">
        UPDATE TBL_MATERIAL_ORDER
        SET UPDATE_DT = NOW(),
        <if test="INSPECT_MATERIAL_YN != '' and INSPECT_MATERIAL_YN != null">
            INSPECT_MATERIAL_YN = #{INSPECT_MATERIAL_YN},
        </if>
        <if test="INSPECT_SURFACE_YN != '' and INSPECT_SURFACE_YN != null">
            INSPECT_SURFACE_YN = #{INSPECT_SURFACE_YN},
        </if>
        <if test="INSPECT_SIZE_YN != '' and INSPECT_SIZE_YN != null">
            INSPECT_SIZE_YN = #{INSPECT_SIZE_YN},
        </if>
        <if test="ORDER_AMT != '' and ORDER_AMT != null">
            ORDER_AMT = #{ORDER_AMT},
        </if>
        <if test="INSPECT_NOTE != '' and INSPECT_NOTE != null">
            INSPECT_NOTE = #{INSPECT_NOTE},
        </if>
            UPDATE_ID = NULL,
        WHERE MATERIAL_ORDER_SEQ = #{MATERIAL_ORDER_SEQ}
    </update>

    <update id="updateItemOrderStatus" parameterType="java.util.HashMap">
        UPDATE TBL_MATERIAL_ORDER
        SET UPDATE_DT = NOW(),
            ORDER_STATUS = #{ORDER_STATUS},
            UPDATE_ID = NULL
        WHERE MATERIAL_ORDER_SEQ = #{MATERIAL_ORDER_SEQ}
    </update>

    <select id="selectInWarehouseManageList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.MY_MAT_STOCK_SEQ,
            A.MATERIAL_TYPE, SF_GET_CODE_NM('1035', A.MATERIAL_TYPE, 'EN') AS MATERIAL_TYPE_NM,
            A.MATERIAL_DETAIL, SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, 'EN') AS MATERIAL_DETAIL_NM,
            A.MATERIAL_KIND, SF_GET_CODE_NM('1029', A.MATERIAL_KIND, 'EN') AS MATERIAL_KIND_NM,
            A.SIZE_TXT, A.SIZE_TYPE, A.SIZE_W, A.SIZE_H, A.SIZE_T, A.SIZE_D, A.SIZE_L,
            A.WAREHOUSE_CD, SF_GET_CODE_NM('1049', A.WAREHOUSE_CD, 'EN') AS WAREHOUSE_NM,
            A.LOC_SEQ, B.LOC_NM,
            /*A.STOCK_QTY,*/
            SUM(IFNULL(C.IN_QTY, 0)) - SUM(IFNULL(D.OUT_QTY, 0)) AS STOCK_QTY,
            A.NOTE
        FROM TBL_MY_MATERIAL_STOCK A
            INNER JOIN TBL_WAREHOUSE_LOCATION B ON A.WAREHOUSE_CD = B.WAREHOUSE_CD AND A.LOC_SEQ = B.LOC_SEQ AND B.DEL_YN = 'N'
            LEFT OUTER JOIN TBL_MY_MATERIAL_IN C ON A.MY_MAT_STOCK_SEQ = C.MY_MAT_STOCK_SEQ
            LEFT OUTER JOIN TBL_MY_MATERIAL_OUT D ON A.MY_MAT_STOCK_SEQ = D.MY_MAT_STOCK_SEQ
        WHERE A.DEL_YN ='N'
        GROUP BY A.WAREHOUSE_CD, A.MATERIAL_KIND, A.MATERIAL_DETAIL, A.SIZE_TXT
    </select>

    <select id="selectInWarehouseManageListDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            F.CONTROL_SEQ, E.CONTROL_DETAIL_SEQ, A.MY_MAT_STOCK_SEQ,
            F.CONTROL_NUM,
            E.MATERIAL_TYPE, SF_GET_ETC_NM( '1000', A.MATERIAL_TYPE) AS MATERIAL_TYPE_NM,
            A.MATERIAL_DETAIL, SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, 'EN') AS MATERIAL_DETAIL_NM,
            A.MATERIAL_KIND, SF_GET_CODE_NM('1029', A.MATERIAL_KIND, 'EN') AS MATERIAL_KIND_NM,
            A.SIZE_TXT, A.SIZE_TYPE, A.SIZE_W, A.SIZE_H, A.SIZE_T, A.SIZE_D, A.SIZE_L,
            C.OUT_QTY, C.OUT_DT, C.OUT_USER_ID,
            A.WAREHOUSE_CD, SF_GET_CODE_NM('1049', A.WAREHOUSE_CD, 'EN') AS WAREHOUSE_NM,
            A.LOC_SEQ, B.LOC_NM,
            D.MATERIAL_ORDER_NUM
        FROM TBL_MY_MATERIAL_STOCK A
            INNER JOIN TBL_WAREHOUSE_LOCATION B ON A.WAREHOUSE_CD = B.WAREHOUSE_CD AND A.LOC_SEQ = B.LOC_SEQ
                AND B.DEL_YN = 'N'
            INNER JOIN TBL_MY_MATERIAL_OUT C ON A.MY_MAT_STOCK_SEQ = C.MY_MAT_STOCK_SEQ
            INNER JOIN TBL_MATERIAL_ORDER D ON C.CONTROL_SEQ = D.CONTROL_SEQ AND C.CONTROL_DETAIL_SEQ = D.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_CONTROL_PART E ON E.CONTROL_SEQ = D.CONTROL_SEQ AND D.CONTROL_DETAIL_SEQ = E.CONTROL_DETAIL_SEQ
            INNER JOIN TBL_CONTROL F ON E.CONTROL_SEQ = F.CONTROL_SEQ
        WHERE A.DEL_YN ='N'
            AND A.MY_MAT_STOCK_SEQ = #{MY_MAT_STOCK_SEQ}
        GROUP BY A.WAREHOUSE_CD, A.MATERIAL_KIND, A.MATERIAL_DETAIL, A.SIZE_TXT
    </select>

    <select id="selectInWarehouseManageOutList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            ROW_NUMBER () OVER () AS ROWNUM,
            A.MY_MAT_STOCK_SEQ,
            A.MATERIAL_TYPE, SF_GET_CODE_NM('1035', A.MATERIAL_TYPE, 'EN') AS MATERIAL_TYPE_NM,
            A.MATERIAL_DETAIL, SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, 'EN') AS MATERIAL_DETAIL_NM,
            A.MATERIAL_KIND, SF_GET_CODE_NM('1029', A.MATERIAL_KIND, 'EN') AS MATERIAL_KIND_NM,
            A.SIZE_TXT, A.SIZE_TYPE, A.SIZE_W, A.SIZE_H, A.SIZE_T, A.SIZE_D, A.SIZE_L,
            A.WAREHOUSE_CD, SF_GET_CODE_NM('1049', A.WAREHOUSE_CD, 'EN') AS WAREHOUSE_NM,
            A.LOC_SEQ, B.LOC_NM,
            /*A.STOCK_QTY,*/
            SUM(IFNULL(C.IN_QTY, 0)) - SUM(IFNULL(D.OUT_QTY, 0)) AS STOCK_QTY,
            A.NOTE
        FROM TBL_MY_MATERIAL_STOCK A
            INNER JOIN TBL_WAREHOUSE_LOCATION B ON A.WAREHOUSE_CD = B.WAREHOUSE_CD AND A.LOC_SEQ = B.LOC_SEQ AND B.DEL_YN = 'N'
            LEFT OUTER JOIN TBL_MY_MATERIAL_IN C ON A.MY_MAT_STOCK_SEQ = C.MY_MAT_STOCK_SEQ
            LEFT OUTER JOIN TBL_MY_MATERIAL_OUT D ON A.MY_MAT_STOCK_SEQ = D.MY_MAT_STOCK_SEQ
        WHERE A.DEL_YN ='N'
        GROUP BY A.WAREHOUSE_CD, A.MATERIAL_KIND, A.MATERIAL_DETAIL, A.SIZE_TXT
    </select>

    <select id="selectInWarehouseManageWarehouseList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            #{WAREHOUSE_CD} AS WAREHOUSE_CD , SF_GET_CODE_NM('1049', #{WAREHOUSE_CD}, 'EN') AS WAREHOUSE_NM,
            LOC_SEQ, LOC_NM, LOC_DESC, LOC_USE, UPDATE_DT, INSERT_ID
        FROM TBL_WAREHOUSE_LOCATION
        WHERE 1=1
            AND DEL_YN = 'N'
            AND WAREHOUSE_CD = #{WAREHOUSE_CD}
    </select>

    <insert id="insertUpdateInWarehouseManageMaster" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_MY_MATERIAL_STOCK
        (
            MY_MAT_STOCK_SEQ, MATERIAL_TYPE, MATERIAL_DETAIL, MATERIAL_KIND,
            SIZE_TXT, SIZE_TYPE, SIZE_W, SIZE_H, SIZE_T, SIZE_D, SIZE_L,
            WAREHOUSE_CD, LOC_SEQ, NOTE,
            DEL_YN, INSERT_ID
        )
        VALUES
        (
            <choose>
                <when test="MY_MAT_STOCK_SEQ !=null and MY_MAT_STOCK_SEQ !=''">
                    #{MY_MAT_STOCK_SEQ},
                </when>
                <otherwise>
                    NEXTVAL(SEQ_MY_MAT_STOCK),
                </otherwise>
            </choose>
            #{MATERIAL_TYPE}, #{MATERIAL_DETAIL},#{MATERIAL_KIND},
            #{SIZE_TXT},
            SF_GET_SIZE_TXT('SIZE_TYPE', #{SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_W', #{SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_H', #{SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_T', #{SIZE_TXT}),
            SF_GET_SIZE_TXT('SIZE_D', #{SIZE_TXT}), SF_GET_SIZE_TXT('SIZE_L', #{SIZE_TXT}),
            #{WAREHOUSE_CD}, #{LOC_SEQ}, #{NOTE},
            'N', NULL
        )
        ON DUPLICATE KEY UPDATE
            WAREHOUSE_CD = #{WAREHOUSE_CD},
            LOC_SEQ = #{LOC_SEQ},
            NOTE = #{NOTE},
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
    </insert>

    <insert id="insertUpdateInWarehouseManageDetail" parameterType="java.util.HashMap">
        INSERT INTO TBL_MY_MATERIAL_IN
        (
            MY_MAT_IN_SEQ, IN_QTY, IN_DT, MY_MAT_STOCK_SEQ, INSERT_ID
        )
        VALUES
        (
            NEXTVAL(SEQ_MY_MAT_IN), #{IN_QTY}, NOW(),
        <choose>
            <when test="MY_MAT_STOCK_SEQ !=null and MY_MAT_STOCK_SEQ !=''">
                #{MY_MAT_STOCK_SEQ},
            </when>
            <otherwise>
                LASTVAL(SEQ_MY_MAT_STOCK),
            </otherwise>
        </choose>
        NULL
        )
    </insert>

    <insert id="insertUpdateInWarehouseManageWarehouse" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_WAREHOUSE_LOCATION
        (
            WAREHOUSE_CD, LOC_SEQ, LOC_NM, LOC_DESC, LOC_USE, DEL_YN, INSERT_ID
        )
        VALUES
        (
            #{WAREHOUSE_CD},
            <choose>
                <when test="LOC_SEQ !=null and LOC_SEQ !=''">
                    #{LOC_SEQ},
                </when>
                <otherwise>
                    NEXTVAL(SEQ_LOC),
                </otherwise>
            </choose>
            #{LOC_NM}, #{LOC_DESC}, #{LOC_USE}, 'N', NULL
        )
        ON DUPLICATE KEY UPDATE
            LOC_NM = #{LOC_NM},
            LOC_DESC = #{LOC_DESC},
            LOC_USE = #{LOC_USE},
            UPDATE_DT = NOW(),
            UPDATE_ID = NULL
    </insert>

    <delete id="deleteInWarehouseManageMaster" parameterType="java.util.HashMap">
        DELETE FROM TBL_MY_MATERIAL_STOCK
        WHERE MY_MAT_STOCK_SEQ = #{MY_MAT_STOCK_SEQ}
    </delete>

    <delete id="deleteInWarehouseManageDetail" parameterType="java.util.HashMap">
        DELETE FROM TBL_MY_MATERIAL_IN
        WHERE MY_MAT_STOCK_SEQ = #{MY_MAT_STOCK_SEQ}
    </delete>

    <delete id="deleteInWarehouseManageWarehouse" parameterType="java.util.HashMap">
        DELETE FROM TBL_WAREHOUSE_LOCATION
        WHERE 1=1
            AND WAREHOUSE_CD = #{WAREHOUSE_CD}
            AND LOC_SEQ = #{LOC_SEQ}
    </delete>
    <select id="selectConsumableInCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT COUNT(*) AS CNT FROM jmes.TBL_CONSUMABLE_IN WHERE CONSUMABLE_STOCK_SEQ = #{CONSUMABLE_STOCK_SEQ}
    </select>
    <select id="selectConsumableList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
        A.CONSUMABLE_STOCK_SEQ
        , A.WAREHOUSE_CD, jmes.SF_GET_CODE_NM('1049', A.WAREHOUSE_CD, 'EN') AS WAREHOUSE_CD_NM
        , A.LOC_SEQ, (SELECT LOC_NM FROM jmes.TBL_WAREHOUSE_LOCATION WHERE WAREHOUSE_CD = A.WAREHOUSE_CD AND LOC_SEQ = A.LOC_SEQ) AS LOC_SEQ_NM
        , A.CONSUMABLE_NUM
        , A.CONSUMABLE_NM
        , A.CONSUMABLE_TYPE, jmes.SF_GET_CODE_NM('1053', A.CONSUMABLE_TYPE, 'EN') AS CONSUMABLE_TYPE_NM
        , A.CONSUMABLE_DETAIL, jmes.SF_GET_CODE_NM('1054', A.CONSUMABLE_DETAIL, 'EN') AS CONSUMABLE_DETAIL_NM
        , (SELECT IFNULL(SUM(IN_QTY),0) FROM jmes.TBL_CONSUMABLE_IN WHERE CONSUMABLE_STOCK_SEQ = A.CONSUMABLE_STOCK_SEQ) - (SELECT IFNULL(SUM(OUT_QTY),0) FROM jmes.TBL_CONSUMABLE_OUT WHERE CONSUMABLE_STOCK_SEQ = A.CONSUMABLE_STOCK_SEQ) AS STOCK_QTY
        , A.NOTE
        , NULL AS IN_QTY
        , A.ACTIVE_YN
        FROM jmes.TBL_CONSUMABLE_STOCK A
        WHERE 1=1
        <if test="SEL_CONSUMABLE_STOCK_SEQ !='' and SEL_CONSUMABLE_STOCK_SEQ != null">
            AND A.CONSUMABLE_STOCK_SEQ = #{SEL_CONSUMABLE_STOCK_SEQ}
        </if>
        <if test="SEL_WAREHOUSE_CD !='' and SEL_WAREHOUSE_CD != null">
            AND A.WAREHOUSE_CD = #{SEL_FACTORY_AREA}
        </if>
        <if test="SEL_LOC_SEQ !='' and SEL_LOC_SEQ != null">
            AND A.LOC_SEQ = #{SEL_LOC_SEQ}
        </if>
        <if test="SEL_CONSUMABLE_TYPE !='' and SEL_CONSUMABLE_TYPE != null">
            AND A.CONSUMABLE_TYPE = #{SEL_CONSUMABLE_TYPE}
        </if>
        <if test="SEL_CONSUMABLE_DETAIL !='' and SEL_CONSUMABLE_DETAIL != null">
            AND A.CONSUMABLE_DETAIL = #{SEL_CONSUMABLE_DETAIL}
        </if>
        <if test="SEL_CONSUMABLE_NUM !='' and SEL_CONSUMABLE_NUM != null">
            AND A.CONSUMABLE_NUM LIKE CONCAT('%', #{SEL_CONSUMABLE_NUM}, '%')
        </if>
        <if test="SEL_CONSUMABLE_NM !='' and SEL_CONSUMABLE_NM != null">
            AND A.CONSUMABLE_NM LIKE CONCAT('%', #{SEL_CONSUMABLE_NM}, '%')
        </if>
        <if test="SEL_ACTIVE_YN !='' and SEL_ACTIVE_YN != null">
            AND A.ACTIVE_YN = #{SEL_ACTIVE_YN}
        </if>
        ORDER BY A.CONSUMABLE_STOCK_SEQ
    </select>

    <delete id="deleteConsumable" parameterType="java.util.HashMap">
        DELETE FROM jmes.TBL_CONSUMABLE_STOCK WHERE CONSUMABLE_STOCK_SEQ = #{CONSUMABLE_STOCK_SEQ}
    </delete>
    <update id="updateConsumable" parameterType="java.util.HashMap">
        UPDATE jmes.TBL_CONSUMABLE_STOCK
        SET
              CONSUMABLE_NM = #{CONSUMABLE_NM}
            , CONSUMABLE_TYPE = #{CONSUMABLE_TYPE}
            , CONSUMABLE_DETAIL = #{CONSUMABLE_DETAIL}
            , NOTE = #{NOTE}
            , ACTIVE_YN = #{ACTIVE_YN}
            , UPDATE_ID = #{LOGIN_USER_ID}
            , UPDATE_DT = NOW()
        WHERE CONSUMABLE_STOCK_SEQ = #{CONSUMABLE_STOCK_SEQ}
    </update>
    <insert id="insertConsumable" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_CONSUMABLE_STOCK
        (
            CONSUMABLE_STOCK_SEQ, WAREHOUSE_CD, LOC_SEQ,
            CONSUMABLE_NUM, CONSUMABLE_NM, CONSUMABLE_TYPE,
            CONSUMABLE_DETAIL, NOTE, ACTIVE_YN,
            INSERT_ID, INSERT_DT
        )VALUES(
            NEXTVAL(jmes.SEQ_CONSUMABLE_STOCK), #{WAREHOUSE_CD}, #{LOC_SEQ},
            #{CONSUMABLE_NUM}, #{CONSUMABLE_NM}, #{CONSUMABLE_TYPE},
            #{CONSUMABLE_DETAIL}, #{NOTE}, #{ACTIVE_YN},
            #{LOGIN_USER_ID}, NOW()
        )
    </insert>

    <insert id="insertConsumableIn" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_CONSUMABLE_IN
        (CONSUMABLE_IN_SEQ, CONSUMABLE_STOCK_SEQ, IN_QTY, INSERT_ID, INSERT_DT)
        SELECT
              NEXTVAL(jmes.SEQ_CONSUMABLE_IN) AS CONSUMABLE_IN_SEQ
            , A.CONSUMABLE_STOCK_SEQ
            , #{IN_QTY} AS IN_QTY
            , #{LOGIN_USER_ID} AS INSERT_ID
            , NOW() AS INSERT_DT
        FROM jmes.TBL_CONSUMABLE_STOCK A
        WHERE A.WAREHOUSE_CD = #{WAREHOUSE_CD}
          AND A.LOC_SEQ = #{LOC_SEQ}
          AND A.CONSUMABLE_NUM = #{CONSUMABLE_NUM}
          AND #{IN_QTY} > 0
    </insert>
    <insert id="insertConsumableOut" parameterType="java.util.HashMap">
        INSERT INTO jmes.TBL_CONSUMABLE_OUT
        (
            CONSUMABLE_OUT_SEQ, CONSUMABLE_STOCK_SEQ, OUT_QTY,
            REQUEST_USER_ID, OUT_USE, INSERT_ID, INSERT_DT
        )VALUES(
            NEXTVAL(jmes.SEQ_CONSUMABLE_OUT), #{CONSUMABLE_STOCK_SEQ}, #{OUT_QTY},
            #{REQUEST_USER_ID}, #{OUT_USE}, #{LOGIN_USER_ID}, NOW()
        )
    </insert>
    <select id="selectConsumableHistoryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
              jmes.SF_GET_CODE_NM('1055', X.IN_OUT_TYPE, 'KR') AS IN_OUT_NM
            , jmes.SF_GET_CODE_NM('1049', X.WAREHOUSE_CD, 'KR') AS WAREHOUSE_NM
            , (SELECT LOC_NM FROM jmes.TBL_WAREHOUSE_LOCATION WHERE WAREHOUSE_CD = X.WAREHOUSE_CD AND LOC_SEQ = X.LOC_SEQ ) AS LOC_NM
            , X.CONSUMABLE_NUM
            , X.CONSUMABLE_NM
            , jmes.SF_GET_CODE_NM('1053', X.CONSUMABLE_TYPE, 'KR') AS CONSUMABLE_TYPE_NM
            , jmes.SF_GET_CODE_NM('1054', X.CONSUMABLE_DETAIL, 'KR') AS CONSUMABLE_DETAIL_NM
            , X.IN_QTY
            , X.OUT_QTY
            , (SELECT USER_NM FROM jmes.TBL_USER WHERE USER_ID = X.REQUEST_USER_ID) AS REQUEST_USER_NM
            , jmes.SF_GET_DATE_F(X.IN_OUT_DT,'YY','M') AS IN_OUT_DT
        FROM (
            SELECT
                '1' AS IN_OUT_TYPE
                , A.WAREHOUSE_CD, A.LOC_SEQ, A.CONSUMABLE_NUM, A.CONSUMABLE_NM
                , A.CONSUMABLE_TYPE, A.CONSUMABLE_DETAIL, B.IN_QTY, NULL AS OUT_QTY
                , B.INSERT_ID AS REQUEST_USER_ID, B.IN_DT AS IN_OUT_DT
            FROM jmes.TBL_CONSUMABLE_STOCK A, jmes.TBL_CONSUMABLE_IN B
            WHERE A.CONSUMABLE_STOCK_SEQ = B.CONSUMABLE_STOCK_SEQ
                <if test="SEL_WAREHOUSE_CD !='' and SEL_WAREHOUSE_CD != null">
                    AND A.WAREHOUSE_CD = #{SEL_FACTORY_AREA}
                </if>
                <if test="SEL_LOC_SEQ !='' and SEL_LOC_SEQ != null">
                    AND A.LOC_SEQ = #{SEL_LOC_SEQ}
                </if>
                <if test="SEL_CONSUMABLE_TYPE !='' and SEL_CONSUMABLE_TYPE != null">
                    AND A.CONSUMABLE_TYPE = #{SEL_CONSUMABLE_TYPE}
                </if>
                <if test="SEL_CONSUMABLE_DETAIL !='' and SEL_CONSUMABLE_DETAIL != null">
                    AND A.CONSUMABLE_DETAIL = #{SEL_CONSUMABLE_DETAIL}
                </if>
                <if test="SEL_CONSUMABLE_NUM !='' and SEL_CONSUMABLE_NUM != null">
                    AND A.CONSUMABLE_NUM LIKE CONCAT('%', #{SEL_CONSUMABLE_NUM}, '%')
                </if>
                <if test="SEL_CONSUMABLE_NM !='' and SEL_CONSUMABLE_NM != null">
                    AND A.CONSUMABLE_NM LIKE CONCAT('%', #{SEL_CONSUMABLE_NM}, '%')
                </if>
                <if test="SEL_ACTIVE_YN !='' and SEL_ACTIVE_YN != null">
                    AND A.ACTIVE_YN = #{SEL_ACTIVE_YN}
                </if>
                <if test="SEL_TERM_DT_USE or SEL_TERM_DT_USE ==true">
                    <if test='SEL_DAY_TYPE == "1"'>
                        AND B.IN_DT >= CONVERT(REPLACE(#{SEL_ST_DT},'-',space(0)),'%Y%m%d')
                        AND B.IN_DT <![CDATA[ <= ]]> CONVERT(REPLACE(#{SEL_END_DT},'-',space(0)),'%Y%m%d')
                    </if>
                </if>
            UNION ALL
            SELECT
                 '2' AS IN_OUT_TYPE
                , A.WAREHOUSE_CD, A.LOC_SEQ, A.CONSUMABLE_NUM, A.CONSUMABLE_NM
                , A.CONSUMABLE_TYPE, A.CONSUMABLE_DETAIL, NULL AS IN_QTY, B.OUT_QTY
                , B.REQUEST_USER_ID, B.OUT_DT AS IN_OUT_DT
            FROM jmes.TBL_CONSUMABLE_STOCK A, jmes.TBL_CONSUMABLE_OUT B
            WHERE A.CONSUMABLE_STOCK_SEQ = B.CONSUMABLE_STOCK_SEQ
                <if test="SEL_WAREHOUSE_CD !='' and SEL_WAREHOUSE_CD != null">
                    AND A.WAREHOUSE_CD = #{SEL_FACTORY_AREA}
                </if>
                <if test="SEL_LOC_SEQ !='' and SEL_LOC_SEQ != null">
                    AND A.LOC_SEQ = #{SEL_LOC_SEQ}
                </if>
                <if test="SEL_CONSUMABLE_TYPE !='' and SEL_CONSUMABLE_TYPE != null">
                    AND A.CONSUMABLE_TYPE = #{SEL_CONSUMABLE_TYPE}
                </if>
                <if test="SEL_CONSUMABLE_DETAIL !='' and SEL_CONSUMABLE_DETAIL != null">
                    AND A.CONSUMABLE_DETAIL = #{SEL_CONSUMABLE_DETAIL}
                </if>
                <if test="SEL_CONSUMABLE_NUM !='' and SEL_CONSUMABLE_NUM != null">
                    AND A.CONSUMABLE_NUM LIKE CONCAT('%', #{SEL_CONSUMABLE_NUM}, '%')
                </if>
                <if test="SEL_CONSUMABLE_NM !='' and SEL_CONSUMABLE_NM != null">
                    AND A.CONSUMABLE_NM LIKE CONCAT('%', #{SEL_CONSUMABLE_NM}, '%')
                </if>
                <if test="SEL_ACTIVE_YN !='' and SEL_ACTIVE_YN != null">
                    AND A.ACTIVE_YN = #{SEL_ACTIVE_YN}
                </if>
                <if test="SEL_TERM_DT_USE or SEL_TERM_DT_USE ==true">
                    <if test='SEL_DAY_TYPE == "1"'>
                        AND B.OUT_DT >= CONVERT(REPLACE(#{SEL_ST_DT},'-',space(0)),'%Y%m%d')
                        AND B.OUT_DT <![CDATA[ <= ]]> CONVERT(REPLACE(#{SEL_END_DT},'-',space(0)),'%Y%m%d')
                    </if>
                </if>
        ) X
        ORDER BY X.IN_OUT_DT DESC
    </select>

    <select id="selectWarehouseLocationList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            LOC_NM AS CODE_NM, CAST(LOC_SEQ AS CHAR) AS CODE_CD
        FROM TBL_WAREHOUSE_LOCATION
        WHERE 1=1
        AND DEL_YN = 'N'
        <if test="WAREHOUSE_CD !='' and WAREHOUSE_CD != null">
            AND WAREHOUSE_CD = #{WAREHOUSE_CD}
        </if>
    </select>
    <select id="selectInsideStockList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        SELECT
            A.ORDER_COMP_CD
          , (SELECT COMP_NM FROM jmes.TBL_COMPANY WHERE COMP_CD = A.ORDER_COMP_CD) AS ORDER_COMP_CD_NM
          , A.DRAWING_NUM
          , A.ITEM_NM
          , A.INSIDE_STOCK_NUM
          , A.COMP_CD
          , (SELECT COMP_NM FROM jmes.TBL_COMPANY WHERE COMP_CD = A.COMP_CD) AS COMP_CD_NM
          , A.SIZE_TXT
          , A.MATERIAL_DETAIL
          , jmes.SF_GET_CODE_NM('1027', A.MATERIAL_DETAIL, 'KR') AS MATERIAL_DETAIL_NM
          , (SELECT IFNULL(SUM(IN_QTY),0) FROM jmes.TBL_INSIDE_IN WHERE INSIDE_STOCK_NUM = A.INSIDE_STOCK_NUM) - (SELECT IFNULL(SUM(OUT_QTY),0) FROM jmes.TBL_INSIDE_OUT WHERE INSIDE_STOCK_NUM = A.INSIDE_STOCK_NUM) AS INSIDE_STOCK_CURR_QTY
          , A.ORIGINAL_SIDE_QTY
          , A.OTHER_SIDE_QTY
          , A.WAREHOUSE_CD
          , jmes.SF_GET_CODE_NM('1049', A.WAREHOUSE_CD, 'KR') AS WAREHOUSE_CD_NM
          , A.LOC_SEQ
          , (SELECT LOC_NM FROM jmes.TBL_WAREHOUSE_LOCATION WHERE WAREHOUSE_CD = A.WAREHOUSE_CD AND LOC_SEQ = A.LOC_SEQ ) AS LOC_SEQ_NM
          , A.DXF_GFILE_SEQ
          , A.IMG_GFILE_SEQ
          , jmes.SF_GET_DATE_F(A.INSERT_DT, 'YY', 'M') AS INSERT_TIME
          , jmes.SF_GET_DATE_F(A.UPDATE_DT, 'YY', 'M') AS UPDATE_TIME
          , A.NOTE
        FROM jmes.TBL_INSIDE_STOCK A
        WHERE 1=1
        <if test="SEL_COMP_CD !='' and SEL_COMP_CD != null">
            AND A.COMP_CD = #{SEL_COMP_CD}
        </if>
        <if test="SEL_ORDER_COMP_CD !='' and SEL_ORDER_COMP_CD != null">
            AND A.ORDER_COMP_CD = #{SEL_ORDER_COMP_CD}
        </if>
        <if test="SEL_DRAWING_NUM !='' and SEL_DRAWING_NUM != null">
            AND A.DRAWING_NUM LIKE CONCAT('%', #{SEL_DRAWING_NUM}, '%')
        </if>
        <if test="SEL_ITEM_NM !='' and SEL_ITEM_NM != null">
            AND A.ITEM_NM LIKE CONCAT('%', #{SEL_ITEM_NM}, '%')
        </if>
        <if test="SEL_CONTROL_NUM !='' and SEL_CONTROL_NUM != null">
            AND A.CONTROL_SEQ IN (SELECT CONTROL_SEQ FROM jmes.TBL_CONTROL B WHERE B.CONTROL_NUM LIKE CONCAT('%', #{SEL_CONTROL_NUM}, '%'))
        </if>
        <if test="SEL_MATERIAL_DETAIL !='' and SEL_MATERIAL_DETAIL != null">
            AND A.MATERIAL_DETAIL = #{SEL_MATERIAL_DETAIL}
        </if>
        <if test="SEL_WAREHOUSE_CD !='' and SEL_WAREHOUSE_CD != null">
            AND A.WAREHOUSE_CD = #{SEL_WAREHOUSE_CD}
        </if>
        <if test="SEL_LOC_SEQ !='' and SEL_LOC_SEQ != null">
            AND A.LOC_SEQ = #{SEL_LOC_SEQ}
        </if>
    </select>

</mapper>